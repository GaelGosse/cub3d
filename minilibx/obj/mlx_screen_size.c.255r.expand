
;; Function mlx_get_screen_size (mlx_get_screen_size, funcdef_no=6, decl_uid=9186, cgraph_uid=7, symbol_order=6)

Partition 2: size 136 align 16
	xwAttr
Partition 0: size 8 align 8
	xvar_6
Partition 1: size 4 align 4
	ret_9

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [1 mlx_ptr+0 S8 A64])
        (reg:DI 5 di [ mlx_ptr ])) "mlx_screen_size.c":4:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [8 sizex+0 S8 A64])
        (reg:DI 4 si [ sizex ])) "mlx_screen_size.c":4:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [8 sizey+0 S8 A64])
        (reg:DI 1 dx [ sizey ])) "mlx_screen_size.c":4:1 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.9193+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "mlx_screen_size.c":4:1 -1
     (nil))
(insn 9 6 10 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [1 mlx_ptr+0 S8 A64])) "mlx_screen_size.c":9:7 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [7 xvar+0 S8 A64])
        (reg/f:DI 87)) "mlx_screen_size.c":9:7 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [7 xvar+0 S8 A64])) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 82 [ _1 ])
        (mem:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [5 xvar_6->root+0 S8 A64])) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [7 xvar+0 S8 A64])) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 89) [10 xvar_6->display+0 S8 A64])) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 90)) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg:DI 82 [ _1 ])) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "mlx_screen_size.c":10:8 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XGetWindowAttributes") [flags 0x41]  <function_decl 0x7f851d4bd700 XGetWindowAttributes>) [0 XGetWindowAttributes S1 A8])
            (const_int 0 [0]))) "mlx_screen_size.c":10:8 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 2 (set (reg:SI 91)
        (reg:SI 0 ax)) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -156 [0xffffffffffffff64])) [3 ret+0 S4 A32])
        (reg:SI 91)) "mlx_screen_size.c":10:8 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 84 [ _3 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [3 xwAttr.width+0 S4 A64])) "mlx_screen_size.c":11:19 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [8 sizex+0 S8 A64])) "mlx_screen_size.c":11:11 -1
     (nil))
(insn 24 23 25 2 (set (mem:SI (reg/f:DI 92) [3 *sizex_10(D)+0 S4 A32])
        (reg:SI 84 [ _3 ])) "mlx_screen_size.c":11:11 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 85 [ _4 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [3 xwAttr.height+0 S4 A32])) "mlx_screen_size.c":12:19 -1
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [8 sizey+0 S8 A64])) "mlx_screen_size.c":12:11 -1
     (nil))
(insn 27 26 35 2 (set (mem:SI (reg/f:DI 93) [3 *sizey_12(D)+0 S4 A32])
        (reg:SI 85 [ _4 ])) "mlx_screen_size.c":12:11 -1
     (nil))
(insn 35 27 36 2 (clobber (reg/i:SI 0 ax)) "mlx_screen_size.c":13:1 -1
     (nil))
(insn 36 35 41 2 (clobber (reg:SI 86 [ <retval> ])) "mlx_screen_size.c":13:1 -1
     (nil))
(insn 41 36 29 2 (const_int 0 [0]) "mlx_screen_size.c":13:1 -1
     (nil))
(insn 29 41 30 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.9193+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "mlx_screen_size.c":13:1 -1
     (nil))
(jump_insn 30 29 39 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "mlx_screen_size.c":13:1 -1
     (nil)
 -> 33)
(note 39 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 31 39 32 5 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f851d1ad900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "mlx_screen_size.c":13:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 32 31 33)
(code_label 33 32 40 6 2 (nil) [1 uses])
(note 40 33 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 40 37 6 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "mlx_screen_size.c":13:1 -1
     (nil))
(insn 37 34 0 6 (use (reg/i:SI 0 ax)) "mlx_screen_size.c":13:1 -1
     (nil))
