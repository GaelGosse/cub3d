
;; Function mlx_set_font (mlx_set_font, funcdef_no=6, decl_uid=9186, cgraph_uid=7, symbol_order=6)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_set_font.c":23:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 win+0 S8 A64])
        (reg:DI 4 si [ win ])) "mlx_set_font.c":23:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 name+0 S8 A64])
        (reg:DI 1 dx [ name ])) "mlx_set_font.c":23:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 82 [ font.0_1 ])
        (mem/c:DI (symbol_ref:DI ("font.0") [flags 0x2]  <var_decl 0x7f2a46256f30 font>) [4 font+0 S8 A64])) "mlx_set_font.c":26:6 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 82 [ font.0_1 ])
            (const_int 0 [0]))) "mlx_set_font.c":26:5 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "mlx_set_font.c":26:5 -1
     (nil)
 -> 18)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:DI 83 [ font.1_2 ])
        (mem/c:DI (symbol_ref:DI ("font.0") [flags 0x2]  <var_decl 0x7f2a46256f30 font>) [4 font+0 S8 A64])) "mlx_set_font.c":27:3 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_set_font.c":27:3 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 90) [6 xvar_11(D)->display+0 S8 A64])) "mlx_set_font.c":27:3 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 83 [ font.1_2 ])) "mlx_set_font.c":27:3 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "mlx_set_font.c":27:3 -1
     (nil))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XUnloadFont") [flags 0x41]  <function_decl 0x7f2a465faf00 XUnloadFont>) [0 XUnloadFont S1 A8])
            (const_int 0 [0]))) "mlx_set_font.c":27:3 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 18 17 19 5 2 (nil) [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_set_font.c":28:9 -1
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 91) [6 xvar_11(D)->display+0 S8 A64])) "mlx_set_font.c":28:9 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 name+0 S8 A64])) "mlx_set_font.c":28:9 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 4 si)
        (reg:DI 92)) "mlx_set_font.c":28:9 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "mlx_set_font.c":28:9 -1
     (nil))
(call_insn 25 24 26 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XLoadFont") [flags 0x41]  <function_decl 0x7f2a46596000 XLoadFont>) [0 XLoadFont S1 A8])
            (const_int 0 [0]))) "mlx_set_font.c":28:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 5 (set (reg:DI 86 [ _5 ])
        (reg:DI 0 ax)) "mlx_set_font.c":28:9 -1
     (nil))
(insn 27 26 28 5 (set (mem/c:DI (symbol_ref:DI ("font.0") [flags 0x2]  <var_decl 0x7f2a46256f30 font>) [4 font+0 S8 A64])
        (reg:DI 86 [ _5 ])) "mlx_set_font.c":28:7 discrim 1 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 87 [ font.2_6 ])
        (mem/c:DI (symbol_ref:DI ("font.0") [flags 0x2]  <var_decl 0x7f2a46256f30 font>) [4 font+0 S8 A64])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 win+0 S8 A64])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 8 [0x8])) [12 win_16(D)->gc+0 S8 A64])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (reg/f:DI 94) [6 xvar_11(D)->display+0 S8 A64])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 1 dx)
        (reg:DI 87 [ font.2_6 ])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "mlx_set_font.c":29:2 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _8 ])) "mlx_set_font.c":29:2 -1
     (nil))
(call_insn 36 35 0 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XSetFont") [flags 0x41]  <function_decl 0x7f2a465ef400 XSetFont>) [0 XSetFont S1 A8])
            (const_int 0 [0]))) "mlx_set_font.c":29:2 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
