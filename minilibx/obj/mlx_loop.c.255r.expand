
;; Function win_count (win_count, funcdef_no=6, decl_uid=9185, cgraph_uid=7, symbol_order=6)

Partition 1: size 8 align 8
	win_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 27.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_loop.c":17:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 0 [0])) "mlx_loop.c":21:4 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 xvar+0 S8 A64])) "mlx_loop.c":22:6 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 85)
        (mem/f:DI (plus:DI (reg/f:DI 84)
                (const_int 48 [0x30])) [1 xvar_5(D)->win_list+0 S8 A64])) "mlx_loop.c":22:6 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 win+0 S8 A64])
        (reg/f:DI 85)) "mlx_loop.c":22:6 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 17)) "mlx_loop.c":23:8 -1
     (nil)
 -> 17)
(barrier 11 10 19)
(code_label 19 11 12 4 3 (nil) [1 uses])
(note 12 19 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 win+0 S8 A64])) "mlx_loop.c":25:7 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 87)
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 16 [0x10])) [1 win_2->next+0 S8 A64])) "mlx_loop.c":25:7 -1
     (nil))
(insn 15 14 16 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 win+0 S8 A64])
        (reg/f:DI 87)) "mlx_loop.c":25:7 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":26:3 -1
     (nil))
(code_label 17 16 18 5 2 (nil) [1 uses])
(note 18 17 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 18 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 win+0 S8 A64])
            (const_int 0 [0]))) "mlx_loop.c":23:9 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "mlx_loop.c":23:9 -1
     (nil)
 -> 19)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 26 6 (set (reg:SI 82 [ _7 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "mlx_loop.c":28:9 -1
     (nil))
(insn 26 23 30 6 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _7 ])) "mlx_loop.c":28:9 discrim 1 -1
     (nil))
(insn 30 26 31 6 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "mlx_loop.c":29:1 -1
     (nil))
(insn 31 30 0 6 (use (reg/i:SI 0 ax)) "mlx_loop.c":29:1 -1
     (nil))

;; Function mlx_loop_end (mlx_loop_end, funcdef_no=7, decl_uid=9193, cgraph_uid=8, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 12.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_loop.c":32:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 xvar+0 S8 A64])) "mlx_loop.c":33:17 -1
     (nil))
(insn 7 6 8 2 (set (mem:SI (plus:DI (reg/f:DI 84)
                (const_int 128 [0x80])) [2 xvar_2(D)->end_loop+0 S4 A64])
        (const_int 1 [0x1])) "mlx_loop.c":33:17 -1
     (nil))
(insn 8 7 11 2 (set (reg:SI 82 [ _4 ])
        (const_int 1 [0x1])) "mlx_loop.c":34:9 -1
     (nil))
(insn 11 8 15 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _4 ])) "mlx_loop.c":34:9 discrim 1 -1
     (nil))
(insn 15 11 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "mlx_loop.c":35:1 -1
     (nil))
(insn 16 15 0 2 (use (reg/i:SI 0 ax)) "mlx_loop.c":35:1 -1
     (nil))

;; Function mlx_loop (mlx_loop, funcdef_no=8, decl_uid=9196, cgraph_uid=9, symbol_order=8)

Partition 1: size 192 align 16
	ev
Partition 0: size 8 align 8
	win_28

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.
Removing jump 175.
Merging block 28 into block 26...
Merged blocks 26 and 28.
Merged 26 and 28 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_loop.c":38:1 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.9242+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":38:1 -1
     (nil))
(insn 7 4 8 2 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":42:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 111)) "mlx_loop.c":42:2 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_set_win_event_mask") [flags 0x41]  <function_decl 0x7fa32abec200 mlx_int_set_win_event_mask>) [0 mlx_int_set_win_event_mask S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":42:2 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":43:17 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (plus:DI (reg/f:DI 112)
                (const_int 80 [0x50])) [2 xvar_35(D)->do_flush+0 S4 A64])
        (const_int 0 [0])) "mlx_loop.c":43:17 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 155)) "mlx_loop.c":44:8 -1
     (nil)
 -> 155)
(barrier 13 12 166)
(code_label 166 13 14 4 17 (nil) [1 uses])
(note 14 166 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 116)) "mlx_loop.c":46:9 -1
     (nil)
 -> 116)
(barrier 16 15 125)
(code_label 125 16 17 5 15 (nil) [2 uses])
(note 17 125 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":48:4 -1
     (nil))
(insn 19 18 20 5 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 113) [5 xvar_35(D)->display+0 S8 A64])) "mlx_loop.c":48:4 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":48:4 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 4 si)
        (reg:DI 114)) "mlx_loop.c":48:4 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "mlx_loop.c":48:4 -1
     (nil))
(call_insn 23 22 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XNextEvent") [flags 0x41]  <function_decl 0x7fa32af03e00 XNextEvent>) [0 XNextEvent S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":48:4 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 5 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":49:8 -1
     (nil))
(insn 25 24 26 5 (set (reg/f:DI 116)
        (mem/f:DI (plus:DI (reg/f:DI 115)
                (const_int 48 [0x30])) [1 xvar_35(D)->win_list+0 S8 A64])) "mlx_loop.c":49:8 -1
     (nil))
(insn 26 25 27 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])
        (reg/f:DI 116)) "mlx_loop.c":49:8 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref 33)) "mlx_loop.c":50:10 -1
     (nil)
 -> 33)
(barrier 28 27 41)
(code_label 41 28 29 6 12 (nil) [1 uses])
(note 29 41 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":51:9 -1
     (nil))
(insn 31 30 32 6 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/f:DI 117)
                (const_int 16 [0x10])) [1 win_28->next+0 S8 A64])) "mlx_loop.c":51:9 -1
     (nil))
(insn 32 31 33 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])
        (reg/f:DI 118)) "mlx_loop.c":51:9 -1
     (nil))
(code_label 33 32 34 7 10 (nil) [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])
            (const_int 0 [0]))) "mlx_loop.c":50:15 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "mlx_loop.c":50:15 -1
     (nil)
 -> 44)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":50:22 discrim 1 -1
     (nil))
(insn 39 38 40 8 (set (reg:DI 83 [ _2 ])
        (mem:DI (reg/f:DI 119) [6 win_28->window+0 S8 A64])) "mlx_loop.c":50:22 discrim 1 -1
     (nil))
(insn 40 39 42 8 (set (reg:DI 84 [ _3 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [13 ev.xany.window+0 S8 A128])) "mlx_loop.c":50:39 discrim 1 -1
     (nil))
(insn 42 40 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83 [ _2 ])
            (reg:DI 84 [ _3 ]))) "mlx_loop.c":50:15 discrim 1 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "mlx_loop.c":50:15 discrim 1 -1
     (nil)
 -> 41)
(code_label 44 43 45 9 11 (nil) [1 uses])
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])
            (const_int 0 [0]))) "mlx_loop.c":53:7 -1
     (nil))
(jump_insn 47 46 48 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "mlx_loop.c":53:7 -1
     (nil)
 -> 78)
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg:SI 85 [ _4 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [13 ev.type+0 S4 A128])) "mlx_loop.c":53:17 discrim 1 -1
     (nil))
(insn 50 49 51 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _4 ])
            (const_int 33 [0x21]))) "mlx_loop.c":53:12 discrim 1 -1
     (nil))
(jump_insn 51 50 52 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "mlx_loop.c":53:12 discrim 1 -1
     (nil)
 -> 78)
(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 11 (set (reg:DI 86 [ _5 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [13 ev.xclient.message_type+0 S8 A64])) "mlx_loop.c":53:53 discrim 2 -1
     (nil))
(insn 54 53 55 11 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":53:74 discrim 2 -1
     (nil))
(insn 55 54 56 11 (set (reg:DI 87 [ _6 ])
        (mem:DI (plus:DI (reg/f:DI 120)
                (const_int 120 [0x78])) [6 xvar_35(D)->wm_protocols+0 S8 A64])) "mlx_loop.c":53:74 discrim 2 -1
     (nil))
(insn 56 55 57 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 86 [ _5 ])
            (reg:DI 87 [ _6 ]))) "mlx_loop.c":53:40 discrim 2 -1
     (nil))
(jump_insn 57 56 58 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "mlx_loop.c":53:40 discrim 2 -1
     (nil)
 -> 78)
(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 12 (set (reg:DI 88 [ _7 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [13 ev.xclient.data.l[0]+0 S8 A64])) "mlx_loop.c":53:109 discrim 3 -1
     (nil))
(insn 60 59 61 12 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":53:120 discrim 3 -1
     (nil))
(insn 61 60 62 12 (set (reg:DI 89 [ _8 ])
        (mem:DI (plus:DI (reg/f:DI 121)
                (const_int 112 [0x70])) [6 xvar_35(D)->wm_delete_window+0 S8 A64])) "mlx_loop.c":53:120 discrim 3 -1
     (nil))
(insn 62 61 63 12 (set (reg:DI 90 [ _9 ])
        (reg:DI 89 [ _8 ])) "mlx_loop.c":53:113 discrim 3 -1
     (nil))
(insn 63 62 64 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 88 [ _7 ])
            (reg:DI 90 [ _9 ]))) "mlx_loop.c":53:89 discrim 3 -1
     (nil))
(jump_insn 64 63 65 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "mlx_loop.c":53:89 discrim 3 -1
     (nil)
 -> 78)
(note 65 64 66 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 13 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":53:167 discrim 4 -1
     (nil))
(insn 67 66 68 13 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 122)
                (const_int 488 [0x1e8])) [8 win_28->hooks[17].hook+0 S8 A64])) "mlx_loop.c":53:167 discrim 4 -1
     (nil))
(insn 68 67 69 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ _10 ])
            (const_int 0 [0]))) "mlx_loop.c":53:139 discrim 4 -1
     (nil))
(jump_insn 69 68 70 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "mlx_loop.c":53:139 discrim 4 -1
     (nil)
 -> 78)
(note 70 69 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 14 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":54:30 -1
     (nil))
(insn 72 71 73 14 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 123)
                (const_int 488 [0x1e8])) [8 win_28->hooks[17].hook+0 S8 A64])) "mlx_loop.c":54:30 -1
     (nil))
(insn 73 72 74 14 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":54:5 -1
     (nil))
(insn 74 73 75 14 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 124)
                (const_int 496 [0x1f0])) [9 win_28->hooks[17].param+0 S8 A64])) "mlx_loop.c":54:5 -1
     (nil))
(insn 75 74 76 14 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "mlx_loop.c":54:5 -1
     (nil))
(insn 76 75 77 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_loop.c":54:5 -1
     (nil))
(call_insn 77 76 78 14 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 92 [ _11 ]) [0 *_11 S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":54:5 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(code_label 78 77 79 15 13 (nil) [5 uses])
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])
            (const_int 0 [0]))) "mlx_loop.c":55:7 -1
     (nil))
(jump_insn 81 80 82 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "mlx_loop.c":55:7 -1
     (nil)
 -> 116)
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 86 16 (set (reg:SI 94 [ _13 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [13 ev.type+0 S4 A128])) "mlx_loop.c":55:17 discrim 1 -1
     (nil))
(insn 86 83 87 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ _13 ])
            (const_int 35 [0x23]))) "mlx_loop.c":55:12 discrim 1 -1
     (nil))
(jump_insn 87 86 88 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "mlx_loop.c":55:12 discrim 1 -1
     (nil)
 -> 116)
(note 88 87 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 17 (set (reg:SI 95 [ _14 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [13 ev.type+0 S4 A128])) "mlx_loop.c":55:55 discrim 2 -1
     (nil))
(insn 90 89 91 17 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 91 90 92 17 (set (reg:DI 126)
        (sign_extend:DI (reg:SI 95 [ _14 ]))) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 92 91 93 17 (set (reg:DI 127)
        (reg:DI 126)) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 93 92 94 17 (parallel [
            (set (reg:DI 127)
                (ashift:DI (reg:DI 127)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 94 93 95 17 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 127)
                    (reg:DI 126)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":55:61 discrim 2 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 126)
            (const_int 3 [0x3]))
        (nil)))
(insn 95 94 96 17 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 127)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 96 95 97 17 (set (reg:DI 127)
        (reg:DI 128)) "mlx_loop.c":55:61 discrim 2 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 126)
            (const_int 24 [0x18]))
        (nil)))
(insn 97 96 98 17 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 125)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 98 97 99 17 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg:DI 129)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 99 98 100 17 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 130) [8 win_28->hooks[_14].hook+0 S8 A64])) "mlx_loop.c":55:61 discrim 2 -1
     (nil))
(insn 100 99 101 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ _15 ])
            (const_int 0 [0]))) "mlx_loop.c":55:39 discrim 2 -1
     (nil))
(jump_insn 101 100 102 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "mlx_loop.c":55:39 discrim 2 -1
     (nil)
 -> 116)
(note 102 101 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 18 (set (reg:SI 97 [ _16 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [13 ev.type+0 S4 A128])) "mlx_loop.c":56:27 -1
     (nil))
(insn 104 103 105 18 (set (reg:DI 131)
        (sign_extend:DI (reg:SI 97 [ _16 ]))) "mlx_loop.c":56:24 -1
     (nil))
(insn 105 104 106 18 (parallel [
            (set (reg:DI 132)
                (ashift:DI (reg:DI 131)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":56:24 -1
     (nil))
(insn 106 105 107 18 (set (reg:DI 133)
        (symbol_ref:DI ("mlx_int_param_event") [flags 0x40]  <var_decl 0x7fa32ab7ff30 mlx_int_param_event>)) "mlx_loop.c":56:24 -1
     (nil))
(insn 107 106 108 18 (set (reg/f:DI 98 [ _17 ])
        (mem/f:DI (plus:DI (reg:DI 132)
                (reg:DI 133)) [8 mlx_int_param_event[_16]+0 S8 A64])) "mlx_loop.c":56:24 -1
     (nil))
(insn 108 107 109 18 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 win+0 S8 A64])) "mlx_loop.c":56:5 -1
     (nil))
(insn 109 108 110 18 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_loop.c":56:5 -1
     (nil))
(insn 110 109 111 18 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":56:5 -1
     (nil))
(insn 111 110 112 18 (set (reg:DI 1 dx)
        (reg:DI 134)) "mlx_loop.c":56:5 -1
     (nil))
(insn 112 111 113 18 (set (reg:DI 4 si)
        (reg:DI 135)) "mlx_loop.c":56:5 -1
     (nil))
(insn 113 112 114 18 (set (reg:DI 5 di)
        (reg:DI 136)) "mlx_loop.c":56:5 -1
     (nil))
(insn 114 113 115 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_loop.c":56:5 -1
     (nil))
(call_insn 115 114 116 18 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 98 [ _17 ]) [0 *_17 S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":56:5 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 116 115 117 19 9 (nil) [4 uses])
(note 117 116 118 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 19 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":46:15 -1
     (nil))
(insn 119 118 120 19 (set (reg:SI 99 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 137)
                (const_int 128 [0x80])) [2 xvar_35(D)->end_loop+0 S4 A64])) "mlx_loop.c":46:15 -1
     (nil))
(insn 120 119 121 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ _18 ])
            (const_int 0 [0]))) "mlx_loop.c":46:26 -1
     (nil))
(jump_insn 121 120 122 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "mlx_loop.c":46:26 -1
     (nil)
 -> 136)
(note 122 121 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 20 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":46:35 discrim 1 -1
     (nil))
(insn 124 123 126 20 (set (reg/f:DI 100 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 138)
                (const_int 56 [0x38])) [8 xvar_35(D)->loop_hook+0 S8 A64])) "mlx_loop.c":46:35 discrim 1 -1
     (nil))
(insn 126 124 127 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ _19 ])
            (const_int 0 [0]))) "mlx_loop.c":46:26 discrim 1 -1
     (nil))
(jump_insn 127 126 128 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "mlx_loop.c":46:26 discrim 1 -1
     (nil)
 -> 125)
(note 128 127 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 21 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":46:50 discrim 2 -1
     (nil))
(insn 130 129 131 21 (set (reg/f:DI 101 [ _20 ])
        (mem/f:DI (reg/f:DI 139) [5 xvar_35(D)->display+0 S8 A64])) "mlx_loop.c":46:50 discrim 2 -1
     (nil))
(insn 131 130 132 21 (set (reg:DI 5 di)
        (reg/f:DI 101 [ _20 ])) "mlx_loop.c":46:50 discrim 2 -1
     (nil))
(call_insn 132 131 133 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XPending") [flags 0x41]  <function_decl 0x7fa32af06400 XPending>) [0 XPending S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":46:50 discrim 2 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 21 (set (reg:SI 102 [ _21 ])
        (reg:SI 0 ax)) "mlx_loop.c":46:50 discrim 2 -1
     (nil))
(insn 134 133 135 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ _21 ])
            (const_int 0 [0]))) "mlx_loop.c":46:47 discrim 1 -1
     (nil))
(jump_insn 135 134 136 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "mlx_loop.c":46:47 discrim 1 -1
     (nil)
 -> 125)
(code_label 136 135 137 22 14 (nil) [1 uses])
(note 137 136 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 22 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":58:3 -1
     (nil))
(insn 139 138 140 22 (set (reg/f:DI 103 [ _22 ])
        (mem/f:DI (reg/f:DI 140) [5 xvar_35(D)->display+0 S8 A64])) "mlx_loop.c":58:3 -1
     (nil))
(insn 140 139 141 22 (set (reg:SI 4 si)
        (const_int 0 [0])) "mlx_loop.c":58:3 -1
     (nil))
(insn 141 140 142 22 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _22 ])) "mlx_loop.c":58:3 -1
     (nil))
(call_insn 142 141 143 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XSync") [flags 0x41]  <function_decl 0x7fa32af23200 XSync>) [0 XSync S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":58:3 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 143 142 144 22 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":59:11 -1
     (nil))
(insn 144 143 145 22 (set (reg/f:DI 104 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 141)
                (const_int 56 [0x38])) [8 xvar_35(D)->loop_hook+0 S8 A64])) "mlx_loop.c":59:11 -1
     (nil))
(insn 145 144 146 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ _23 ])
            (const_int 0 [0]))) "mlx_loop.c":59:6 -1
     (nil))
(jump_insn 146 145 147 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) "mlx_loop.c":59:6 -1
     (nil)
 -> 155)
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 23 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":60:8 -1
     (nil))
(insn 149 148 150 23 (set (reg/f:DI 105 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 142)
                (const_int 56 [0x38])) [8 xvar_35(D)->loop_hook+0 S8 A64])) "mlx_loop.c":60:8 -1
     (nil))
(insn 150 149 151 23 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":60:4 -1
     (nil))
(insn 151 150 152 23 (set (reg/f:DI 106 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 143)
                (const_int 64 [0x40])) [9 xvar_35(D)->loop_param+0 S8 A64])) "mlx_loop.c":60:4 -1
     (nil))
(insn 152 151 153 23 (set (reg:DI 5 di)
        (reg/f:DI 106 [ _25 ])) "mlx_loop.c":60:4 -1
     (nil))
(insn 153 152 154 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_loop.c":60:4 -1
     (nil))
(call_insn 154 153 155 23 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105 [ _24 ]) [0 *_24 S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":60:4 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(code_label 155 154 156 24 8 (nil) [2 uses])
(note 156 155 157 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 24 (set (reg:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":44:9 -1
     (nil))
(insn 158 157 159 24 (set (reg:DI 5 di)
        (reg:DI 144)) "mlx_loop.c":44:9 -1
     (nil))
(call_insn 159 158 160 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("win_count") [flags 0x3]  <function_decl 0x7fa32abec500 win_count>) [0 win_count S1 A8])
            (const_int 0 [0]))) "mlx_loop.c":44:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 160 159 161 24 (set (reg:SI 107 [ _26 ])
        (reg:SI 0 ax)) "mlx_loop.c":44:9 -1
     (nil))
(insn 161 160 162 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ _26 ])
            (const_int 0 [0]))) "mlx_loop.c":44:25 discrim 1 -1
     (nil))
(jump_insn 162 161 163 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "mlx_loop.c":44:25 discrim 1 -1
     (nil)
 -> 169)
(note 163 162 164 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 25 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [3 xvar+0 S8 A64])) "mlx_loop.c":44:33 discrim 1 -1
     (nil))
(insn 165 164 167 25 (set (reg:SI 108 [ _27 ])
        (mem:SI (plus:DI (reg/f:DI 145)
                (const_int 128 [0x80])) [2 xvar_35(D)->end_loop+0 S4 A64])) "mlx_loop.c":44:33 discrim 1 -1
     (nil))
(insn 167 165 168 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _27 ])
            (const_int 0 [0]))) "mlx_loop.c":44:25 discrim 1 -1
     (nil))
(jump_insn 168 167 169 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "mlx_loop.c":44:25 discrim 1 -1
     (nil)
 -> 166)
(code_label 169 168 170 26 16 (nil) [1 uses])
(note 170 169 171 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 174 26 (set (reg:SI 109 [ _47 ])
        (const_int 0 [0])) "mlx_loop.c":62:9 -1
     (nil))
(insn 174 171 178 26 (set (reg:SI 110 [ <retval> ])
        (reg:SI 109 [ _47 ])) "mlx_loop.c":62:9 -1
     (nil))
(insn 178 174 179 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.9242+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "mlx_loop.c":63:1 -1
     (nil))
(jump_insn 179 178 186 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "mlx_loop.c":63:1 -1
     (nil)
 -> 182)
(note 186 179 180 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 180 186 181 29 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa32abfea00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "mlx_loop.c":63:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 181 180 182)
(code_label 182 181 187 30 19 (nil) [1 uses])
(note 187 182 183 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 183 187 184 30 (set (reg/i:SI 0 ax)
        (reg:SI 110 [ <retval> ])) "mlx_loop.c":63:1 -1
     (nil))
(insn 184 183 0 30 (use (reg/i:SI 0 ax)) "mlx_loop.c":63:1 -1
     (nil))
