
;; Function mlx_get_color_value (mlx_get_color_value, funcdef_no=6, decl_uid=9160, cgraph_uid=7, symbol_order=6)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 17.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_get_color_value.c":16:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 color+0 S4 A32])
        (reg:SI 4 si [ color ])) "mlx_get_color_value.c":16:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 color+0 S4 A32])) "mlx_get_color_value.c":17:10 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":17:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 4 si)
        (reg:SI 84)) "mlx_get_color_value.c":17:10 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 85)) "mlx_get_color_value.c":17:10 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_get_color_value.c":17:10 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_get_good_color") [flags 0x3]  <function_decl 0x7f5d6be5c700 mlx_int_get_good_color>) [0 mlx_int_get_good_color S1 A8])
            (const_int 0 [0]))) "mlx_get_color_value.c":17:10 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 13 12 16 2 (set (reg:SI 82 [ _5 ])
        (reg:SI 0 ax)) "mlx_get_color_value.c":17:10 -1
     (nil))
(insn 16 13 20 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _5 ])) "mlx_get_color_value.c":17:10 discrim 1 -1
     (nil))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "mlx_get_color_value.c":18:1 -1
     (nil))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) "mlx_get_color_value.c":18:1 -1
     (nil))

;; Function mlx_int_get_good_color (mlx_int_get_good_color, funcdef_no=7, decl_uid=9161, cgraph_uid=8, symbol_order=7)

Partition 0: size 16 align 16
	xc

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 15 from 6 to 7.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 73.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_get_color_value.c":21:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])
        (reg:SI 4 si [ color ])) "mlx_get_color_value.c":21:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":24:11 -1
     (nil))
(insn 8 7 11 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 117)
                (const_int 20 [0x14])) [2 xvar_37(D)->depth+0 S4 A32])) "mlx_get_color_value.c":24:11 -1
     (nil))
(insn 11 8 12 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ _1 ])
            (const_int 23 [0x17]))) "mlx_get_color_value.c":24:6 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "mlx_get_color_value.c":24:6 -1
     (nil)
 -> 17)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 115 [ _34 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])) "mlx_get_color_value.c":25:12 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (label_ref:DI 70)) "mlx_get_color_value.c":25:12 997 {jump}
     (nil)
 -> 70)
(barrier 16 15 17)
(code_label 17 16 18 5 4 (nil) [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])) "mlx_get_color_value.c":26:18 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:SI 83 [ _2 ])
                (ashiftrt:SI (reg:SI 118)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":26:18 -1
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 21 20 22 5 (set (reg:HI 84 [ _3 ])
        (subreg:HI (reg:SI 83 [ _2 ]) 0)) "mlx_get_color_value.c":26:22 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:HI 85 [ _4 ])
                (and:HI (reg:HI 84 [ _3 ])
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":26:22 -1
     (nil))
(insn 23 22 24 5 (set (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 xc.red+0 S2 A64])
        (reg:HI 85 [ _4 ])) "mlx_get_color_value.c":26:10 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])) "mlx_get_color_value.c":27:19 -1
     (nil))
(insn 25 24 26 5 (set (reg:HI 86 [ _5 ])
        (subreg:HI (reg:SI 119) 0)) "mlx_get_color_value.c":27:19 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:HI 87 [ _6 ])
                (and:HI (reg:HI 86 [ _5 ])
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":27:19 -1
     (nil))
(insn 27 26 28 5 (set (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [5 xc.green+0 S2 A16])
        (reg:HI 87 [ _6 ])) "mlx_get_color_value.c":27:12 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 color+0 S4 A32])) "mlx_get_color_value.c":28:11 -1
     (nil))
(insn 29 28 30 5 (set (reg:HI 88 [ _7 ])
        (subreg:HI (reg:SI 120) 0)) "mlx_get_color_value.c":28:11 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:HI 89 [ _8 ])
                (ashift:HI (reg:HI 88 [ _7 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":28:11 -1
     (nil))
(insn 31 30 32 5 (set (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 xc.blue+0 S2 A32])
        (reg:HI 89 [ _8 ])) "mlx_get_color_value.c":28:11 -1
     (nil))
(insn 32 31 33 5 (set (reg:HI 90 [ _9 ])
        (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 xc.red+0 S2 A64])) "mlx_get_color_value.c":29:18 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 91 [ _10 ])
        (zero_extend:SI (reg:HI 90 [ _9 ]))) "mlx_get_color_value.c":29:18 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":29:40 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 92 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 121)
                (const_int 88 [0x58])) [2 xvar_37(D)->decrgb[1]+0 S4 A64])) "mlx_get_color_value.c":29:40 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 122)
        (const_int 16 [0x10])) "mlx_get_color_value.c":29:27 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 93 [ _12 ])
                (minus:SI (reg:SI 122)
                    (reg:SI 92 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":29:27 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:SI 94 [ _13 ])
                (ashiftrt:SI (reg:SI 91 [ _10 ])
                    (subreg:QI (reg:SI 93 [ _12 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":29:22 -1
     (nil))
(insn 39 38 40 5 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":29:59 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 95 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 123)
                (const_int 84 [0x54])) [2 xvar_37(D)->decrgb[0]+0 S4 A32])) "mlx_get_color_value.c":29:59 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:SI 96 [ _15 ])
                (ashift:SI (reg:SI 94 [ _13 ])
                    (subreg:QI (reg:SI 95 [ _14 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":29:45 -1
     (nil))
(insn 42 41 43 5 (set (reg:HI 97 [ _16 ])
        (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -6 [0xfffffffffffffffa])) [5 xc.green+0 S2 A16])) "mlx_get_color_value.c":30:9 -1
     (nil))
(insn 43 42 44 5 (set (reg:SI 98 [ _17 ])
        (zero_extend:SI (reg:HI 97 [ _16 ]))) "mlx_get_color_value.c":30:9 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":30:33 -1
     (nil))
(insn 45 44 46 5 (set (reg:SI 99 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 124)
                (const_int 96 [0x60])) [2 xvar_37(D)->decrgb[3]+0 S4 A64])) "mlx_get_color_value.c":30:33 -1
     (nil))
(insn 46 45 47 5 (set (reg:SI 125)
        (const_int 16 [0x10])) "mlx_get_color_value.c":30:20 -1
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg:SI 100 [ _19 ])
                (minus:SI (reg:SI 125)
                    (reg:SI 99 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":30:20 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:SI 101 [ _20 ])
                (ashiftrt:SI (reg:SI 98 [ _17 ])
                    (subreg:QI (reg:SI 100 [ _19 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":30:15 -1
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":30:52 -1
     (nil))
(insn 50 49 51 5 (set (reg:SI 102 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 126)
                (const_int 92 [0x5c])) [2 xvar_37(D)->decrgb[2]+0 S4 A32])) "mlx_get_color_value.c":30:52 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg:SI 103 [ _22 ])
                (ashift:SI (reg:SI 101 [ _20 ])
                    (subreg:QI (reg:SI 102 [ _21 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":30:38 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:SI 104 [ _23 ])
                (plus:SI (reg:SI 96 [ _15 ])
                    (reg:SI 103 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":29:63 -1
     (nil))
(insn 53 52 54 5 (set (reg:HI 105 [ _24 ])
        (mem/c:HI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 xc.blue+0 S2 A32])) "mlx_get_color_value.c":31:9 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 106 [ _25 ])
        (zero_extend:SI (reg:HI 105 [ _24 ]))) "mlx_get_color_value.c":31:9 -1
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":31:32 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 107 [ _26 ])
        (mem:SI (plus:DI (reg/f:DI 127)
                (const_int 104 [0x68])) [2 xvar_37(D)->decrgb[5]+0 S4 A64])) "mlx_get_color_value.c":31:32 -1
     (nil))
(insn 57 56 58 5 (set (reg:SI 128)
        (const_int 16 [0x10])) "mlx_get_color_value.c":31:19 -1
     (nil))
(insn 58 57 59 5 (parallel [
            (set (reg:SI 108 [ _27 ])
                (minus:SI (reg:SI 128)
                    (reg:SI 107 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":31:19 -1
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 109 [ _28 ])
                (ashiftrt:SI (reg:SI 106 [ _25 ])
                    (subreg:QI (reg:SI 108 [ _27 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":31:14 -1
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 xvar+0 S8 A64])) "mlx_get_color_value.c":31:51 -1
     (nil))
(insn 61 60 62 5 (set (reg:SI 110 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 129)
                (const_int 100 [0x64])) [2 xvar_37(D)->decrgb[4]+0 S4 A32])) "mlx_get_color_value.c":31:51 -1
     (nil))
(insn 62 61 63 5 (parallel [
            (set (reg:SI 111 [ _30 ])
                (ashift:SI (reg:SI 109 [ _28 ])
                    (subreg:QI (reg:SI 110 [ _29 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":31:37 -1
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg:SI 112 [ _31 ])
                (plus:SI (reg:SI 104 [ _23 ])
                    (reg:SI 111 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_get_color_value.c":30:56 -1
     (nil))
(insn 64 63 65 5 (set (reg:DI 113 [ _32 ])
        (sign_extend:DI (reg:SI 112 [ _31 ]))) "mlx_get_color_value.c":30:56 -1
     (nil))
(insn 65 64 66 5 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 xc.pixel+0 S8 A128])
        (reg:DI 113 [ _32 ])) "mlx_get_color_value.c":29:12 -1
     (nil))
(insn 66 65 67 5 (set (reg:DI 114 [ _33 ])
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 xc.pixel+0 S8 A128])) "mlx_get_color_value.c":32:13 -1
     (nil))
(insn 67 66 70 5 (set (reg:SI 115 [ _34 ])
        (subreg:SI (reg:DI 114 [ _33 ]) 0)) "mlx_get_color_value.c":32:13 -1
     (nil))
(code_label 70 67 71 7 6 (nil) [1 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 76 7 (set (reg:SI 116 [ <retval> ])
        (reg:SI 115 [ _34 ])) "mlx_get_color_value.c":33:1 -1
     (nil))
(insn 76 72 77 7 (set (reg/i:SI 0 ax)
        (reg:SI 116 [ <retval> ])) "mlx_get_color_value.c":33:1 -1
     (nil))
(insn 77 76 0 7 (use (reg/i:SI 0 ax)) "mlx_get_color_value.c":33:1 -1
     (nil))
