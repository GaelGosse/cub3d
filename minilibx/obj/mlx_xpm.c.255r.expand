
;; Function mlx_int_get_line (mlx_int_get_line, funcdef_no=6, decl_uid=9187, cgraph_uid=7, symbol_order=6)

Partition 2: size 4 align 4
	pos4_48
Partition 1: size 4 align 4
	pos3_45
Partition 0: size 4 align 4
	pos2_43

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 106.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
        (reg:DI 5 di [ ptr ])) "mlx_xpm.c":27:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])
        (reg:DI 4 si [ pos ])) "mlx_xpm.c":27:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
        (reg:SI 1 dx [ size ])) "mlx_xpm.c":27:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":32:49 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (reg/f:DI 119) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":32:49 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])) "mlx_xpm.c":32:14 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 83 [ _2 ])
                (minus:SI (reg:SI 120)
                    (reg:SI 82 [ _1 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":32:14 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
            (reg:SI 82 [ _1 ]))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":32:34 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 84 [ _3 ])
        (mem:SI (reg/f:DI 121) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":32:34 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "mlx_xpm.c":32:34 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":32:14 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg/f:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":32:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 85 [ _4 ]))
        (nil)))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (reg:SI 83 [ _2 ])) "mlx_xpm.c":32:14 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 123)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fca55079bd0 *.LC0>)) "mlx_xpm.c":32:14 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 123)) "mlx_xpm.c":32:14 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fca55079bd0 *.LC0>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "mlx_xpm.c":32:14 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str") [flags 0x41]  <function_decl 0x7fca55037400 mlx_int_str_str>) [0 mlx_int_str_str S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":32:14 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:SI 124)
        (reg:SI 0 ax)) "mlx_xpm.c":32:14 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])
        (reg:SI 124)) "mlx_xpm.c":32:14 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":32:5 discrim 1 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "mlx_xpm.c":32:5 discrim 1 -1
     (nil)
 -> 30)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 117 [ _36 ])
        (const_int 0 [0])) "mlx_xpm.c":33:10 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref 103)) "mlx_xpm.c":33:10 -1
     (nil)
 -> 103)
(barrier 29 28 30)
(code_label 30 29 31 5 2 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":34:56 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 87 [ _6 ])
        (mem:SI (reg/f:DI 125) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":34:56 -1
     (nil))
(insn 34 33 35 5 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])) "mlx_xpm.c":34:55 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 88 [ _7 ])
                (minus:SI (reg:SI 126)
                    (reg:SI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:55 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
            (reg:SI 87 [ _6 ]))
        (nil)))
(insn 36 35 37 5 (parallel [
            (set (reg:SI 89 [ _8 ])
                (minus:SI (reg:SI 88 [ _7 ])
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:60 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:SI 90 [ _9 ])
                (plus:SI (reg:SI 89 [ _8 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:14 -1
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":34:34 -1
     (nil))
(insn 39 38 40 5 (set (reg:SI 91 [ _10 ])
        (mem:SI (reg/f:DI 127) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":34:34 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 91 [ _10 ]))) "mlx_xpm.c":34:34 -1
     (nil))
(insn 41 40 42 5 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])) "mlx_xpm.c":34:38 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 93 [ _12 ])
        (sign_extend:DI (reg:SI 128))) "mlx_xpm.c":34:38 -1
     (nil))
(insn 43 42 44 5 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (reg:DI 93 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:38 -1
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:43 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":34:14 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 96 [ _15 ])
                (plus:DI (reg:DI 95 [ _14 ])
                    (reg/f:DI 129)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":34:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 95 [ _14 ]))
        (nil)))
(insn 47 46 48 5 (set (reg:SI 1 dx)
        (reg:SI 90 [ _9 ])) "mlx_xpm.c":34:14 -1
     (nil))
(insn 48 47 49 5 (set (reg:DI 130)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fca55079bd0 *.LC0>)) "mlx_xpm.c":34:14 -1
     (nil))
(insn 49 48 50 5 (set (reg:DI 4 si)
        (reg:DI 130)) "mlx_xpm.c":34:14 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fca55079bd0 *.LC0>)
        (nil)))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _15 ])) "mlx_xpm.c":34:14 -1
     (nil))
(call_insn 51 50 52 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str") [flags 0x41]  <function_decl 0x7fca55037400 mlx_int_str_str>) [0 mlx_int_str_str S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":34:14 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 52 51 53 5 (set (reg:SI 131)
        (reg:SI 0 ax)) "mlx_xpm.c":34:14 -1
     (nil))
(insn 53 52 54 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 pos3+0 S4 A64])
        (reg:SI 131)) "mlx_xpm.c":34:14 -1
     (nil))
(insn 54 53 55 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 pos3+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":34:5 discrim 1 -1
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "mlx_xpm.c":34:5 discrim 1 -1
     (nil)
 -> 60)
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 6 (set (reg/f:DI 117 [ _36 ])
        (const_int 0 [0])) "mlx_xpm.c":35:10 -1
     (nil))
(jump_insn 58 57 59 6 (set (pc)
        (label_ref 103)) "mlx_xpm.c":35:10 -1
     (nil)
 -> 103)
(barrier 59 58 60)
(code_label 60 59 61 7 4 (nil) [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":36:8 -1
     (nil))
(insn 63 62 64 7 (set (reg:SI 97 [ _16 ])
        (mem:SI (reg/f:DI 132) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":36:8 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 98 [ _17 ])
        (sign_extend:DI (reg:SI 97 [ _16 ]))) "mlx_xpm.c":36:8 -1
     (nil))
(insn 65 64 66 7 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])) "mlx_xpm.c":36:12 -1
     (nil))
(insn 66 65 67 7 (set (reg:DI 99 [ _18 ])
        (sign_extend:DI (reg:SI 133))) "mlx_xpm.c":36:12 -1
     (nil))
(insn 67 66 68 7 (parallel [
            (set (reg:DI 100 [ _19 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (reg:DI 99 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":36:12 -1
     (nil))
(insn 68 67 69 7 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":36:12 -1
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg:DI 100 [ _19 ])
                    (reg/f:DI 134)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":36:12 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 100 [ _19 ]))
        (nil)))
(insn 70 69 71 7 (set (mem:QI (reg/f:DI 101 [ _20 ]) [0 *_20+0 S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":36:19 -1
     (nil))
(insn 71 70 72 7 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":37:8 -1
     (nil))
(insn 72 71 73 7 (set (reg:SI 102 [ _21 ])
        (mem:SI (reg/f:DI 135) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":37:8 -1
     (nil))
(insn 73 72 74 7 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 102 [ _21 ]))) "mlx_xpm.c":37:8 -1
     (nil))
(insn 74 73 75 7 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])) "mlx_xpm.c":37:12 -1
     (nil))
(insn 75 74 76 7 (set (reg:DI 104 [ _23 ])
        (sign_extend:DI (reg:SI 136))) "mlx_xpm.c":37:12 -1
     (nil))
(insn 76 75 77 7 (parallel [
            (set (reg:DI 105 [ _24 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (reg:DI 104 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":37:12 -1
     (nil))
(insn 77 76 78 7 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 pos3+0 S4 A64])) "mlx_xpm.c":37:19 -1
     (nil))
(insn 78 77 79 7 (set (reg:DI 106 [ _25 ])
        (sign_extend:DI (reg:SI 137))) "mlx_xpm.c":37:19 -1
     (nil))
(insn 79 78 80 7 (parallel [
            (set (reg:DI 107 [ _26 ])
                (plus:DI (reg:DI 105 [ _24 ])
                    (reg:DI 106 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":37:19 -1
     (nil))
(insn 80 79 81 7 (parallel [
            (set (reg:DI 108 [ _27 ])
                (plus:DI (reg:DI 107 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":37:19 -1
     (nil))
(insn 81 80 82 7 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":37:19 -1
     (nil))
(insn 82 81 83 7 (parallel [
            (set (reg/f:DI 109 [ _28 ])
                (plus:DI (reg:DI 108 [ _27 ])
                    (reg/f:DI 138)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":37:19 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 108 [ _27 ]))
        (nil)))
(insn 83 82 84 7 (set (mem:QI (reg/f:DI 109 [ _28 ]) [0 *_28+0 S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":37:26 -1
     (nil))
(insn 84 83 85 7 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":38:9 -1
     (nil))
(insn 85 84 86 7 (set (reg:SI 110 [ _29 ])
        (mem:SI (reg/f:DI 139) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":38:9 -1
     (nil))
(insn 86 85 87 7 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])) "mlx_xpm.c":38:13 -1
     (nil))
(insn 87 86 88 7 (parallel [
            (set (reg:SI 111 [ _30 ])
                (plus:SI (reg:SI 110 [ _29 ])
                    (reg:SI 140)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":38:13 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 110 [ _29 ])
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32]))
        (nil)))
(insn 88 87 89 7 (parallel [
            (set (reg:SI 141)
                (plus:SI (reg:SI 111 [ _30 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":38:7 -1
     (nil))
(insn 89 88 90 7 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 pos4+0 S4 A32])
        (reg:SI 141)) "mlx_xpm.c":38:7 -1
     (nil))
(insn 90 89 91 7 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":39:2 -1
     (nil))
(insn 91 90 92 7 (set (reg:SI 112 [ _31 ])
        (mem:SI (reg/f:DI 142) [1 *pos_39(D)+0 S4 A32])) "mlx_xpm.c":39:2 -1
     (nil))
(insn 92 91 93 7 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])) "mlx_xpm.c":39:14 -1
     (nil))
(insn 93 92 94 7 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 pos3+0 S4 A64])) "mlx_xpm.c":39:14 -1
     (nil))
(insn 94 93 95 7 (parallel [
            (set (reg:SI 113 [ _32 ])
                (plus:SI (reg:SI 143)
                    (reg:SI 144)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":39:14 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 pos2+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 pos3+0 S4 A64]))
        (nil)))
(insn 95 94 96 7 (parallel [
            (set (reg:SI 114 [ _33 ])
                (plus:SI (reg:SI 113 [ _32 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":39:19 -1
     (nil))
(insn 96 95 97 7 (parallel [
            (set (reg:SI 115 [ _34 ])
                (plus:SI (reg:SI 112 [ _31 ])
                    (reg:SI 114 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":39:7 -1
     (nil))
(insn 97 96 98 7 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":39:7 -1
     (nil))
(insn 98 97 99 7 (set (mem:SI (reg/f:DI 145) [1 *pos_39(D)+0 S4 A32])
        (reg:SI 115 [ _34 ])) "mlx_xpm.c":39:7 -1
     (nil))
(insn 99 98 100 7 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 pos4+0 S4 A32])) "mlx_xpm.c":40:13 -1
     (nil))
(insn 100 99 101 7 (set (reg:DI 116 [ _35 ])
        (sign_extend:DI (reg:SI 146))) "mlx_xpm.c":40:13 -1
     (nil))
(insn 101 100 102 7 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":40:13 -1
     (nil))
(insn 102 101 103 7 (parallel [
            (set (reg/f:DI 117 [ _36 ])
                (plus:DI (reg:DI 116 [ _35 ])
                    (reg/f:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":40:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 116 [ _35 ]))
        (nil)))
(code_label 103 102 104 8 3 (nil) [2 uses])
(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 109 8 (set (reg/f:DI 118 [ <retval> ])
        (reg/f:DI 117 [ _36 ])) "mlx_xpm.c":41:1 -1
     (nil))
(insn 109 105 110 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 118 [ <retval> ])) "mlx_xpm.c":41:1 -1
     (nil))
(insn 110 109 0 8 (use (reg/i:DI 0 ax)) "mlx_xpm.c":41:1 -1
     (nil))

;; Function strlcpy_is_not_posix (strlcpy_is_not_posix, funcdef_no=7, decl_uid=9195, cgraph_uid=8, symbol_order=7)

Partition 1: size 4 align 4
	i_16
Partition 0: size 4 align 4
	count_15

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 60.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 dest+0 S8 A64])
        (reg:DI 5 di [ dest ])) "mlx_xpm.c":45:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])
        (reg:DI 4 si [ src ])) "mlx_xpm.c":45:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
        (reg:SI 1 dx [ size ])) "mlx_xpm.c":45:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 count+0 S4 A64])
        (const_int 0 [0])) "mlx_xpm.c":49:8 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 13)) "mlx_xpm.c":50:8 -1
     (nil)
 -> 13)
(barrier 10 9 19)
(code_label 19 10 11 4 7 (nil) [1 uses])
(note 11 19 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 count+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 count+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":51:3 -1
     (nil))
(code_label 13 12 14 5 6 (nil) [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:DI 82 [ _1 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 count+0 S4 A64]))) "mlx_xpm.c":50:12 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])) "mlx_xpm.c":50:12 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (reg/f:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":50:12 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])
            (reg:DI 82 [ _1 ]))
        (nil)))
(insn 18 17 20 5 (set (reg:QI 84 [ _3 ])
        (mem:QI (reg/f:DI 83 [ _2 ]) [0 *_2+0 S1 A8])) "mlx_xpm.c":50:12 -1
     (nil))
(insn 20 18 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _3 ])
            (const_int 0 [0]))) "mlx_xpm.c":50:20 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "mlx_xpm.c":50:20 -1
     (nil)
 -> 19)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "mlx_xpm.c":52:4 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (label_ref 36)) "mlx_xpm.c":53:8 -1
     (nil)
 -> 36)
(barrier 25 24 47)
(code_label 47 25 26 7 10 (nil) [1 uses])
(note 26 47 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:DI 85 [ _4 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))) "mlx_xpm.c":55:16 -1
     (nil))
(insn 28 27 29 7 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])) "mlx_xpm.c":55:16 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":55:16 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])
            (reg:DI 85 [ _4 ]))
        (nil)))
(insn 30 29 31 7 (set (reg:DI 87 [ _6 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))) "mlx_xpm.c":55:7 -1
     (nil))
(insn 31 30 32 7 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 dest+0 S8 A64])) "mlx_xpm.c":55:7 -1
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (reg/f:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":55:7 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 dest+0 S8 A64])
            (reg:DI 87 [ _6 ]))
        (nil)))
(insn 33 32 34 7 (set (reg:QI 89 [ _8 ])
        (mem:QI (reg/f:DI 86 [ _5 ]) [0 *_5+0 S1 A8])) "mlx_xpm.c":55:16 -1
     (nil))
(insn 34 33 35 7 (set (mem:QI (reg/f:DI 88 [ _7 ]) [0 *_7+0 S1 A8])
        (reg:QI 89 [ _8 ])) "mlx_xpm.c":55:11 -1
     (nil))
(insn 35 34 36 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":56:3 -1
     (nil))
(code_label 36 35 37 8 8 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:DI 90 [ _9 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))) "mlx_xpm.c":53:12 -1
     (nil))
(insn 39 38 40 8 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])) "mlx_xpm.c":53:12 -1
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg/f:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":53:12 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 src+0 S8 A64])
            (reg:DI 90 [ _9 ]))
        (nil)))
(insn 41 40 42 8 (set (reg:QI 92 [ _11 ])
        (mem:QI (reg/f:DI 91 [ _10 ]) [0 *_10+0 S1 A8])) "mlx_xpm.c":53:12 -1
     (nil))
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ _11 ])
            (const_int 0 [0]))) "mlx_xpm.c":53:24 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "mlx_xpm.c":53:24 -1
     (nil)
 -> 50)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])) "mlx_xpm.c":53:37 discrim 1 -1
     (nil))
(insn 46 45 48 9 (parallel [
            (set (reg:SI 93 [ _12 ])
                (plus:SI (reg:SI 102)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":53:37 discrim 1 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 48 46 49 9 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 93 [ _12 ]))) "mlx_xpm.c":53:24 discrim 1 -1
     (nil))
(jump_insn 49 48 50 9 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "mlx_xpm.c":53:24 discrim 1 -1
     (nil)
 -> 47)
(code_label 50 49 51 10 9 (nil) [1 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (set (reg:DI 94 [ _13 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))) "mlx_xpm.c":58:6 -1
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 dest+0 S8 A64])) "mlx_xpm.c":58:6 -1
     (nil))
(insn 54 53 55 10 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":58:6 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 dest+0 S8 A64])
            (reg:DI 94 [ _13 ]))
        (nil)))
(insn 55 54 56 10 (set (mem:QI (reg/f:DI 95 [ _14 ]) [0 *_14+0 S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":58:10 -1
     (nil))
(insn 56 55 59 10 (set (reg:SI 96 [ _27 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 count+0 S4 A64])) "mlx_xpm.c":59:9 -1
     (nil))
(insn 59 56 63 10 (set (reg:SI 97 [ <retval> ])
        (reg:SI 96 [ _27 ])) "mlx_xpm.c":59:9 discrim 1 -1
     (nil))
(insn 63 59 64 10 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) "mlx_xpm.c":60:1 -1
     (nil))
(insn 64 63 0 10 (use (reg/i:SI 0 ax)) "mlx_xpm.c":60:1 -1
     (nil))

;; Function mlx_int_static_line (mlx_int_static_line, funcdef_no=8, decl_uid=9208, cgraph_uid=9, symbol_order=8)

Partition 0: size 8 align 8
	str_25
Partition 1: size 4 align 4
	len2_26

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 69.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 xpm_data+0 S8 A64])
        (reg:DI 5 di [ xpm_data ])) "mlx_xpm.c":63:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])
        (reg:DI 4 si [ pos ])) "mlx_xpm.c":63:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 size+0 S4 A32])
        (reg:SI 1 dx [ size ])) "mlx_xpm.c":63:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":69:18 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (reg/f:DI 99) [1 *pos_22(D)+0 S4 A32])) "mlx_xpm.c":69:18 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 83 [ _3 ])
                (plus:SI (reg:SI 82 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":69:23 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 pos+0 S8 A64])) "mlx_xpm.c":69:23 -1
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg/f:DI 100) [1 *pos_22(D)+0 S4 A32])
        (reg:SI 83 [ _3 ])) "mlx_xpm.c":69:23 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 84 [ _4 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "mlx_xpm.c":69:23 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 85 [ _5 ])
                (ashift:DI (reg:DI 84 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":69:16 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 xpm_data+0 S8 A64])) "mlx_xpm.c":69:16 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 86 [ _6 ])
                (plus:DI (reg:DI 85 [ _5 ])
                    (reg/f:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":69:16 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [4 xpm_data+0 S8 A64])
            (reg:DI 85 [ _5 ]))
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 102)
        (mem/f:DI (reg/f:DI 86 [ _6 ]) [2 *_6+0 S8 A64])) "mlx_xpm.c":69:6 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 str+0 S8 A64])
        (reg/f:DI 102)) "mlx_xpm.c":69:6 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 str+0 S8 A64])) "mlx_xpm.c":70:14 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 103)) "mlx_xpm.c":70:14 -1
     (nil))
(call_insn/i 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fca554ed000 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":70:14 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg:DI 87 [ _7 ])
        (reg:DI 0 ax)) "mlx_xpm.c":70:14 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])
        (subreg:SI (reg:DI 87 [ _7 ]) 0)) "mlx_xpm.c":70:12 discrim 1 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 88 [ len.0_8 ])
        (mem/c:SI (symbol_ref:DI ("len.1") [flags 0x2]  <var_decl 0x7fca5503a360 len>) [1 len+0 S4 A32])) "mlx_xpm.c":70:26 discrim 1 -1
     (nil))
(insn 25 24 26 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])
            (reg:SI 88 [ len.0_8 ]))) "mlx_xpm.c":70:5 discrim 1 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "mlx_xpm.c":70:5 discrim 1 -1
     (nil)
 -> 56)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 89 [ copy.1_9 ])
        (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])) "mlx_xpm.c":72:8 -1
     (nil))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ copy.1_9 ])
            (const_int 0 [0]))) "mlx_xpm.c":72:7 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "mlx_xpm.c":72:7 -1
     (nil)
 -> 35)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 90 [ copy.2_10 ])
        (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])) "mlx_xpm.c":73:6 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 5 di)
        (reg/f:DI 90 [ copy.2_10 ])) "mlx_xpm.c":73:6 -1
     (nil))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":73:6 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 35 34 36 6 14 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])) "mlx_xpm.c":74:28 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg:SI 91 [ _11 ])
                (plus:SI (reg:SI 104)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":74:28 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 39 38 40 6 (set (reg:DI 92 [ _12 ])
        (sign_extend:DI (reg:SI 91 [ _11 ]))) "mlx_xpm.c":74:17 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 5 di)
        (reg:DI 92 [ _12 ])) "mlx_xpm.c":74:17 -1
     (nil))
(call_insn 41 40 42 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fca55514200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":74:17 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 6 (set (reg/f:DI 105)
        (reg:DI 0 ax)) "mlx_xpm.c":74:17 -1
     (expr_list:REG_NOALIAS (reg/f:DI 105)
        (nil)))
(insn 43 42 44 6 (set (reg/f:DI 93 [ _13 ])
        (reg/f:DI 105)) "mlx_xpm.c":74:17 -1
     (nil))
(insn 44 43 45 6 (set (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])
        (reg/f:DI 93 [ _13 ])) "mlx_xpm.c":74:15 discrim 1 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 94 [ copy.3_14 ])
        (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])) "mlx_xpm.c":74:15 discrim 1 -1
     (nil))
(insn 46 45 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ copy.3_14 ])
            (const_int 0 [0]))) "mlx_xpm.c":74:7 discrim 1 -1
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "mlx_xpm.c":74:7 discrim 1 -1
     (nil)
 -> 52)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:DI 97 [ _17 ])
        (const_int 0 [0])) "mlx_xpm.c":75:13 -1
     (nil))
(jump_insn 50 49 51 7 (set (pc)
        (label_ref 66)) "mlx_xpm.c":75:13 -1
     (nil)
 -> 66)
(barrier 51 50 52)
(code_label 52 51 53 8 15 (nil) [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])) "mlx_xpm.c":76:8 -1
     (nil))
(insn 55 54 56 8 (set (mem/c:SI (symbol_ref:DI ("len.1") [flags 0x2]  <var_decl 0x7fca5503a360 len>) [1 len+0 S4 A32])
        (reg:SI 106)) "mlx_xpm.c":76:8 -1
     (nil))
(code_label 56 55 57 9 13 (nil) [1 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg:SI 95 [ len2.4_15 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 len2+0 S4 A32])) "mlx_xpm.c":78:2 -1
     (nil))
(insn 59 58 60 9 (set (reg/f:DI 96 [ copy.5_16 ])
        (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])) "mlx_xpm.c":78:2 -1
     (nil))
(insn 60 59 61 9 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 str+0 S8 A64])) "mlx_xpm.c":78:2 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 1 dx)
        (reg:SI 95 [ len2.4_15 ])) "mlx_xpm.c":78:2 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 4 si)
        (reg:DI 107)) "mlx_xpm.c":78:2 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 5 di)
        (reg/f:DI 96 [ copy.5_16 ])) "mlx_xpm.c":78:2 -1
     (nil))
(call_insn 64 63 65 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlcpy_is_not_posix") [flags 0x3]  <function_decl 0x7fca55037700 strlcpy_is_not_posix>) [0 strlcpy_is_not_posix S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":78:2 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 65 64 66 9 (set (reg/f:DI 97 [ _17 ])
        (mem/f/c:DI (symbol_ref:DI ("copy.0") [flags 0x2]  <var_decl 0x7fca5503a2d0 copy>) [2 copy+0 S8 A64])) "mlx_xpm.c":80:9 -1
     (nil))
(code_label 66 65 67 10 16 (nil) [1 uses])
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 10 (set (reg/f:DI 98 [ <retval> ])
        (reg/f:DI 97 [ _17 ])) "mlx_xpm.c":81:1 -1
     (nil))
(insn 72 68 73 10 (set (reg/i:DI 0 ax)
        (reg/f:DI 98 [ <retval> ])) "mlx_xpm.c":81:1 -1
     (nil))
(insn 73 72 0 10 (use (reg/i:DI 0 ax)) "mlx_xpm.c":81:1 -1
     (nil))

;; Function mlx_int_get_col_name (mlx_int_get_col_name, funcdef_no=9, decl_uid=9216, cgraph_uid=10, symbol_order=9)

Partition 0: size 4 align 4
	result_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 33.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 str+0 S8 A64])
        (reg:DI 5 di [ str ])) "mlx_xpm.c":85:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
        (reg:SI 4 si [ size ])) "mlx_xpm.c":85:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 result+0 S4 A32])
        (const_int 0 [0])) "mlx_xpm.c":88:9 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 20)) "mlx_xpm.c":89:8 -1
     (nil)
 -> 20)
(barrier 9 8 25)
(code_label 25 9 10 4 19 (nil) [1 uses])
(note 10 25 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 result+0 S4 A32])) "mlx_xpm.c":90:19 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (reg:SI 82 [ _1 ])
                (ashift:SI (reg:SI 89)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":90:19 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 result+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 13 12 14 4 (set (reg/f:DI 83 [ str.6_2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 str+0 S8 A64])) "mlx_xpm.c":90:29 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 83 [ str.6_2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":90:29 -1
     (nil))
(insn 15 14 16 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 str+0 S8 A64])
        (reg:DI 90)) "mlx_xpm.c":90:29 -1
     (nil))
(insn 16 15 17 4 (set (reg:QI 84 [ _3 ])
        (mem:QI (reg/f:DI 83 [ str.6_2 ]) [0 *str.6_2+0 S1 A8])) "mlx_xpm.c":90:24 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 85 [ _4 ])
        (sign_extend:SI (reg:QI 84 [ _3 ]))) "mlx_xpm.c":90:24 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg:SI 82 [ _1 ])
                    (reg:SI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":90:10 -1
     (nil))
(insn 19 18 20 4 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 result+0 S4 A32])
        (reg:SI 91)) "mlx_xpm.c":90:10 -1
     (nil))
(code_label 20 19 21 5 18 (nil) [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:SI 86 [ size.7_5 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])) "mlx_xpm.c":89:13 -1
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg:SI 86 [ size.7_5 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":89:13 -1
     (nil))
(insn 24 23 26 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
        (reg:SI 92)) "mlx_xpm.c":89:13 -1
     (nil))
(insn 26 24 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ size.7_5 ])
            (const_int 0 [0]))) "mlx_xpm.c":89:9 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "mlx_xpm.c":89:9 -1
     (nil)
 -> 25)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 32 6 (set (reg:SI 87 [ _13 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 result+0 S4 A32])) "mlx_xpm.c":92:9 -1
     (nil))
(insn 32 29 36 6 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _13 ])) "mlx_xpm.c":92:9 discrim 1 -1
     (nil))
(insn 36 32 37 6 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "mlx_xpm.c":93:1 -1
     (nil))
(insn 37 36 0 6 (use (reg/i:SI 0 ax)) "mlx_xpm.c":93:1 -1
     (nil))

;; Function mlx_int_get_text_rgb (mlx_int_get_text_rgb, funcdef_no=10, decl_uid=9224, cgraph_uid=11, symbol_order=10)

Partition 1: size 64 align 16
	buff
Partition 0: size 4 align 4
	i_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 21 from 13 to 14.
Redirecting jump 65 from 13 to 14.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Removing jump 87.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])
        (reg:DI 5 di [ name ])) "mlx_xpm.c":96:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 end+0 S8 A64])
        (reg:DI 4 si [ end ])) "mlx_xpm.c":96:1 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.9473+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":96:1 -1
     (nil))
(insn 8 5 9 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])) "mlx_xpm.c":100:6 -1
     (nil))
(insn 9 8 10 2 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 90) [0 *name_13(D)+0 S1 A8])) "mlx_xpm.c":100:6 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 35 [0x23]))) "mlx_xpm.c":100:5 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "mlx_xpm.c":100:5 -1
     (nil)
 -> 23)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])) "mlx_xpm.c":101:23 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":101:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 15 14 16 4 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) "mlx_xpm.c":101:12 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (const_int 0 [0])) "mlx_xpm.c":101:12 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "mlx_xpm.c":101:12 -1
     (nil))
(call_insn 18 17 19 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7fca555b0800 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":101:12 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 4 (set (reg:DI 84 [ _3 ])
        (reg:DI 0 ax)) "mlx_xpm.c":101:12 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 88 [ _9 ])
        (subreg:SI (reg:DI 84 [ _3 ]) 0)) "mlx_xpm.c":101:12 discrim 1 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (label_ref:DI 84)) "mlx_xpm.c":101:12 997 {jump}
     (nil)
 -> 84)
(barrier 22 21 23)
(code_label 23 22 24 5 22 (nil) [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [2 end+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":102:5 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "mlx_xpm.c":102:5 -1
     (nil)
 -> 41)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 end+0 S8 A64])) "mlx_xpm.c":104:4 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])) "mlx_xpm.c":104:4 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":104:4 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 36 r8)
        (reg:DI 92)) "mlx_xpm.c":104:4 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 2 cx)
        (reg:DI 93)) "mlx_xpm.c":104:4 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fca550bb900 *.LC1>)) "mlx_xpm.c":104:4 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx)
        (reg:DI 95)) "mlx_xpm.c":104:4 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fca550bb900 *.LC1>)
        (nil)))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "mlx_xpm.c":104:4 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg:DI 94)) "mlx_xpm.c":104:4 -1
     (nil))
(insn 37 36 38 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":104:4 -1
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x7fca554f5800 snprintf>) [0 __builtin_snprintf S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":104:4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 36 r8))
                            (nil))))))))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":105:9 -1
     (nil))
(insn 40 39 41 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])
        (reg:DI 96)) "mlx_xpm.c":105:9 -1
     (nil))
(code_label 41 40 42 7 24 (nil) [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])
        (const_int 0 [0])) "mlx_xpm.c":107:4 -1
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (label_ref 70)) "mlx_xpm.c":108:8 -1
     (nil)
 -> 70)
(barrier 45 44 77)
(code_label 77 45 46 8 27 (nil) [1 uses])
(note 46 77 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])) "mlx_xpm.c":110:35 -1
     (nil))
(insn 48 47 49 8 (set (reg:DI 97)
        (sign_extend:DI (reg:SI 98))) "mlx_xpm.c":110:35 -1
     (nil))
(insn 49 48 50 8 (parallel [
            (set (reg:DI 99)
                (ashift:DI (reg:DI 97)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":110:35 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 100)
        (symbol_ref:DI ("mlx_col_name") [flags 0x40]  <var_decl 0x7fca54fcaf30 mlx_col_name>)) "mlx_xpm.c":110:35 -1
     (nil))
(insn 51 50 52 8 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg:DI 99)
                (reg:DI 100)) [2 mlx_col_name[i_8].name+0 S8 A64])) "mlx_xpm.c":110:35 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [2 name+0 S8 A64])) "mlx_xpm.c":110:9 -1
     (nil))
(insn 53 52 54 8 (set (reg:DI 4 si)
        (reg:DI 101)) "mlx_xpm.c":110:9 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "mlx_xpm.c":110:9 -1
     (nil))
(call_insn/i 55 54 56 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x7fca554ea000 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":110:9 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 56 55 57 8 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "mlx_xpm.c":110:9 -1
     (nil))
(insn 57 56 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "mlx_xpm.c":110:7 discrim 1 -1
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "mlx_xpm.c":110:7 discrim 1 -1
     (nil)
 -> 67)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])) "mlx_xpm.c":111:29 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 102)
        (sign_extend:DI (reg:SI 103))) "mlx_xpm.c":111:29 -1
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg:DI 104)
                (ashift:DI (reg:DI 102)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":111:29 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 105)
        (const:DI (plus:DI (symbol_ref:DI ("mlx_col_name") [flags 0x40]  <var_decl 0x7fca54fcaf30 mlx_col_name>)
                (const_int 8 [0x8])))) "mlx_xpm.c":111:29 -1
     (nil))
(insn 64 63 65 9 (set (reg:SI 88 [ _9 ])
        (mem:SI (plus:DI (reg:DI 104)
                (reg:DI 105)) [1 mlx_col_name[i_8].color+0 S4 A64])) "mlx_xpm.c":111:29 -1
     (nil))
(jump_insn 65 64 66 9 (set (pc)
        (label_ref:DI 84)) "mlx_xpm.c":111:29 997 {jump}
     (nil)
 -> 84)
(barrier 66 65 67)
(code_label 67 66 68 10 26 (nil) [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":112:6 -1
     (nil))
(code_label 70 69 71 11 25 (nil) [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [1 i+0 S4 A32])) "mlx_xpm.c":108:24 -1
     (nil))
(insn 73 72 74 11 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 107))) "mlx_xpm.c":108:24 -1
     (nil))
(insn 74 73 75 11 (parallel [
            (set (reg:DI 108)
                (ashift:DI (reg:DI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":108:24 -1
     (nil))
(insn 75 74 76 11 (set (reg:DI 109)
        (symbol_ref:DI ("mlx_col_name") [flags 0x40]  <var_decl 0x7fca54fcaf30 mlx_col_name>)) "mlx_xpm.c":108:24 -1
     (nil))
(insn 76 75 78 11 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg:DI 108)
                (reg:DI 109)) [2 mlx_col_name[i_8].name+0 S8 A64])) "mlx_xpm.c":108:24 -1
     (nil))
(insn 78 76 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ _6 ])
            (const_int 0 [0]))) "mlx_xpm.c":108:9 -1
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "mlx_xpm.c":108:9 -1
     (nil)
 -> 77)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 84 12 (set (reg:SI 88 [ _9 ])
        (const_int 0 [0])) "mlx_xpm.c":114:9 -1
     (nil))
(code_label 84 81 85 14 28 (nil) [2 uses])
(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 14 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _9 ])) "mlx_xpm.c":115:1 -1
     (nil))
(insn 90 86 91 14 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.9473+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "mlx_xpm.c":115:1 -1
     (nil))
(jump_insn 91 90 98 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "mlx_xpm.c":115:1 -1
     (nil)
 -> 94)
(note 98 91 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 92 98 93 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fca550a5700 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":115:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 93 92 94)
(code_label 94 93 99 17 29 (nil) [1 uses])
(note 99 94 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 99 96 17 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) "mlx_xpm.c":115:1 -1
     (nil))
(insn 96 95 0 17 (use (reg/i:SI 0 ax)) "mlx_xpm.c":115:1 -1
     (nil))

;; Function mlx_int_xpm_set_pixel (mlx_int_xpm_set_pixel, funcdef_no=11, decl_uid=9236, cgraph_uid=12, symbol_order=11)

Partition 0: size 4 align 4
	dec_20

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 img+0 S8 A64])
        (reg:DI 5 di [ img ])) "mlx_xpm.c":119:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 data+0 S8 A64])
        (reg:DI 4 si [ data ])) "mlx_xpm.c":119:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 opp+0 S4 A32])
        (reg:SI 1 dx [ opp ])) "mlx_xpm.c":119:1 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 col+0 S4 A32])
        (reg:SI 2 cx [ col ])) "mlx_xpm.c":119:1 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 x+0 S4 A32])
        (reg:SI 36 r8 [ x ])) "mlx_xpm.c":119:1 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 opp+0 S4 A32])) "mlx_xpm.c":122:6 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 dec+0 S4 A32])
        (reg:SI 101)) "mlx_xpm.c":122:6 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 54)) "mlx_xpm.c":123:10 -1
     (nil)
 -> 54)
(barrier 13 12 59)
(code_label 59 13 14 4 34 (nil) [1 uses])
(note 14 59 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [7 img+0 S8 A64])) "mlx_xpm.c":125:13 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 102) [9 img_28(D)->image+0 S8 A64])) "mlx_xpm.c":125:13 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 83 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 82 [ _1 ])
                (const_int 24 [0x18])) [1 _1->byte_order+0 S4 A64])) "mlx_xpm.c":125:20 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 0 [0]))) "mlx_xpm.c":125:9 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "mlx_xpm.c":125:9 -1
     (nil)
 -> 34)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 x+0 S4 A32])) "mlx_xpm.c":126:12 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 84 [ _3 ])
                (mult:SI (reg:SI 103)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [1 opp+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":126:12 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "mlx_xpm.c":126:12 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 dec+0 S4 A32])) "mlx_xpm.c":126:16 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 104))) "mlx_xpm.c":126:16 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 87 [ _6 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg:DI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":126:16 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 data+0 S8 A64])) "mlx_xpm.c":126:16 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (reg/f:DI 105)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":126:16 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 data+0 S8 A64])
            (reg:DI 87 [ _6 ]))
        (nil)))
(insn 29 28 30 5 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 col+0 S4 A32])) "mlx_xpm.c":126:22 -1
     (nil))
(insn 30 29 31 5 (set (reg:QI 89 [ _8 ])
        (subreg:QI (reg:SI 106) 0)) "mlx_xpm.c":126:22 -1
     (nil))
(insn 31 30 32 5 (set (mem:QI (reg/f:DI 88 [ _7 ]) [0 *_7+0 S1 A8])
        (reg:QI 89 [ _8 ])) "mlx_xpm.c":126:22 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (label_ref 51)) -1
     (nil)
 -> 51)
(barrier 33 32 34)
(code_label 34 33 35 6 32 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [1 x+0 S4 A32])) "mlx_xpm.c":128:12 -1
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:SI 90 [ _9 ])
                (mult:SI (reg:SI 107)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [1 opp+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":128:12 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 91 [ _10 ])
        (sign_extend:DI (reg:SI 90 [ _9 ]))) "mlx_xpm.c":128:12 -1
     (nil))
(insn 39 38 40 6 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [1 opp+0 S4 A32])) "mlx_xpm.c":128:16 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 108))) "mlx_xpm.c":128:16 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 93 [ _12 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg:DI 92 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":128:16 -1
     (nil))
(insn 42 41 43 6 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 dec+0 S4 A32])) "mlx_xpm.c":128:20 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 94 [ _13 ])
        (sign_extend:DI (reg:SI 109))) "mlx_xpm.c":128:20 -1
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 95 [ _14 ])
                (minus:DI (reg:DI 93 [ _12 ])
                    (reg:DI 94 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":128:20 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 96 [ _15 ])
                (plus:DI (reg:DI 95 [ _14 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":128:24 -1
     (nil))
(insn 46 45 47 6 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 data+0 S8 A64])) "mlx_xpm.c":128:24 -1
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:DI 97 [ _16 ])
                (plus:DI (reg:DI 96 [ _15 ])
                    (reg/f:DI 110)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":128:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 data+0 S8 A64])
            (reg:DI 96 [ _15 ]))
        (nil)))
(insn 48 47 49 6 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 col+0 S4 A32])) "mlx_xpm.c":128:28 -1
     (nil))
(insn 49 48 50 6 (set (reg:QI 98 [ _17 ])
        (subreg:QI (reg:SI 111) 0)) "mlx_xpm.c":128:28 -1
     (nil))
(insn 50 49 51 6 (set (mem:QI (reg/f:DI 97 [ _16 ]) [0 *_16+0 S1 A8])
        (reg:QI 98 [ _17 ])) "mlx_xpm.c":128:28 -1
     (nil))
(code_label 51 50 52 7 33 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [1 col+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [1 col+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":129:12 -1
     (nil))
(code_label 54 53 55 8 31 (nil) [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg:SI 99 [ dec.8_18 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 dec+0 S4 A32])) "mlx_xpm.c":123:14 -1
     (nil))
(insn 57 56 58 8 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 99 [ dec.8_18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":123:14 -1
     (nil))
(insn 58 57 60 8 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 dec+0 S4 A32])
        (reg:SI 112)) "mlx_xpm.c":123:14 -1
     (nil))
(insn 60 58 61 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ dec.8_18 ])
            (const_int 0 [0]))) "mlx_xpm.c":123:11 -1
     (nil))
(jump_insn 61 60 62 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "mlx_xpm.c":123:11 -1
     (nil)
 -> 59)
(note 62 61 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 62 66 9 (clobber (reg/i:SI 0 ax)) "mlx_xpm.c":131:1 -1
     (nil))
(insn 66 65 69 9 (clobber (reg:SI 100 [ <retval> ])) "mlx_xpm.c":131:1 -1
     (nil))
(insn 69 66 64 9 (const_int 0 [0]) "mlx_xpm.c":131:1 -1
     (nil))
(insn 64 69 67 9 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "mlx_xpm.c":131:1 -1
     (nil))
(insn 67 64 0 9 (use (reg/i:SI 0 ax)) "mlx_xpm.c":131:1 -1
     (nil))

;; Function mlx_int_parse_xpm (mlx_int_parse_xpm, funcdef_no=12, decl_uid=9246, cgraph_uid=13, symbol_order=12)

Partition 20: size 128 align 16
	xgcv	pos
Partition 15: size 8 align 8
	clip_data_200
Partition 10: size 8 align 8
	line_166
Partition 9: size 8 align 8
	img_158
Partition 8: size 8 align 8
	colors_direct_115
Partition 7: size 8 align 8
	colors_114
Partition 1: size 8 align 8
	data_103
Partition 0: size 8 align 8
	tab_100
Partition 18: size 4 align 4
	rgb_col_250
Partition 17: size 4 align 4
	col_name_218
Partition 16: size 4 align 4
	opp_205
Partition 14: size 4 align 4
	cpp_172
Partition 13: size 4 align 4
	nc_171
Partition 12: size 4 align 4
	height_170
Partition 11: size 4 align 4
	width_169
Partition 6: size 4 align 4
	j_111
Partition 5: size 4 align 4
	i_109
Partition 4: size 4 align 4
	x_108
Partition 3: size 4 align 4
	method_107
Partition 2: size 4 align 4
	col_104

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 126 from 111 to 112.
Redirecting jump 207 from 111 to 112.
Redirecting jump 269 from 111 to 112.
Redirecting jump 354 from 111 to 112.
Redirecting jump 444 from 111 to 112.
Redirecting jump 580 from 111 to 112.
Redirecting jump 664 from 111 to 112.
Merging block 111 into block 110...
Merged blocks 110 and 111.
Merged 110 and 111 without moving.
Removing jump 790.
Merging block 113 into block 112...
Merged blocks 112 and 113.
Merged 112 and 113 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_xpm.c":135:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [5 info+0 S8 A64])
        (reg:DI 4 si [ info ])) "mlx_xpm.c":135:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [1 info_size+0 S4 A32])
        (reg:SI 1 dx [ info_size ])) "mlx_xpm.c":135:1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [24 f+0 S8 A64])
        (reg:DI 2 cx [ f ])) "mlx_xpm.c":135:1 -1
     (nil))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.9477+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":135:1 -1
     (nil))
(insn 10 7 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":160:10 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
        (const_int 0 [0])) "mlx_xpm.c":161:17 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":162:7 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":163:7 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [1 MEM[(int *)_286]+0 S4 A128])
        (const_int 0 [0])) "mlx_xpm.c":164:7 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [1 info_size+0 S4 A32])) "mlx_xpm.c":165:16 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":165:16 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [5 info+0 S8 A64])) "mlx_xpm.c":165:16 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [24 f+0 S8 A64])) "mlx_xpm.c":165:16 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (reg:SI 184)) "mlx_xpm.c":165:16 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 185)) "mlx_xpm.c":165:16 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 186)) "mlx_xpm.c":165:16 -1
     (nil))
(insn 22 21 23 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":165:16 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 187) [0 *f_162(D) S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":165:16 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 24 23 25 2 (set (reg:DI 188)
        (reg:DI 0 ax)) "mlx_xpm.c":165:16 -1
     (nil))
(insn 25 24 26 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
        (reg:DI 188)) "mlx_xpm.c":165:16 -1
     (nil))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":165:6 discrim 1 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "mlx_xpm.c":165:6 discrim 1 -1
     (nil)
 -> 76)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])) "mlx_xpm.c":166:15 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 189)) "mlx_xpm.c":166:15 -1
     (nil))
(insn 31 30 32 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":166:15 -1
     (nil))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_to_wordtab") [flags 0x41]  <function_decl 0x7fca55030e00 mlx_int_str_to_wordtab>) [0 mlx_int_str_to_wordtab S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":166:15 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 33 32 34 4 (set (reg:DI 190)
        (reg:DI 0 ax)) "mlx_xpm.c":166:15 -1
     (nil))
(insn 34 33 35 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (reg:DI 190)) "mlx_xpm.c":166:15 -1
     (nil))
(insn 35 34 36 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":165:40 discrim 1 -1
     (nil))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "mlx_xpm.c":165:40 discrim 1 -1
     (nil)
 -> 76)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":166:58 -1
     (nil))
(insn 39 38 40 5 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 191) [2 *tab_168+0 S8 A64])) "mlx_xpm.c":166:58 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "mlx_xpm.c":166:58 -1
     (nil))
(call_insn/i 41 40 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fca555b0200 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":166:58 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 5 (set (reg:SI 192)
        (reg:SI 0 ax)) "mlx_xpm.c":166:58 -1
     (nil))
(insn 43 42 44 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [1 width+0 S4 A32])
        (reg:SI 192)) "mlx_xpm.c":166:58 -1
     (nil))
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [1 width+0 S4 A32])
            (const_int 0 [0]))) "mlx_xpm.c":166:45 discrim 1 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "mlx_xpm.c":166:45 discrim 1 -1
     (nil)
 -> 76)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":167:26 -1
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg/f:DI 83 [ _2 ])
                (plus:DI (reg/f:DI 193)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":167:26 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 49 48 50 6 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (reg/f:DI 83 [ _2 ]) [2 *_2+0 S8 A64])) "mlx_xpm.c":167:18 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg/f:DI 84 [ _3 ])) "mlx_xpm.c":167:18 -1
     (nil))
(call_insn/i 51 50 52 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fca555b0200 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":167:18 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 6 (set (reg:SI 194)
        (reg:SI 0 ax)) "mlx_xpm.c":167:18 -1
     (nil))
(insn 53 52 54 6 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [1 height+0 S4 A128])
        (reg:SI 194)) "mlx_xpm.c":167:18 -1
     (nil))
(insn 54 53 55 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])) [1 height+0 S4 A128])
            (const_int 0 [0]))) "mlx_xpm.c":166:72 discrim 1 -1
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "mlx_xpm.c":166:72 discrim 1 -1
     (nil)
 -> 76)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":167:50 -1
     (nil))
(insn 58 57 59 7 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 195)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":167:50 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 59 58 60 7 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [2 *_4+0 S8 A64])) "mlx_xpm.c":167:42 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "mlx_xpm.c":167:42 -1
     (nil))
(call_insn/i 61 60 62 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fca555b0200 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":167:42 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 7 (set (reg:SI 196)
        (reg:SI 0 ax)) "mlx_xpm.c":167:42 -1
     (nil))
(insn 63 62 64 7 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [1 nc+0 S4 A32])
        (reg:SI 196)) "mlx_xpm.c":167:42 -1
     (nil))
(insn 64 63 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -220 [0xffffffffffffff24])) [1 nc+0 S4 A32])
            (const_int 0 [0]))) "mlx_xpm.c":167:32 discrim 1 -1
     (nil))
(jump_insn 65 64 66 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "mlx_xpm.c":167:32 discrim 1 -1
     (nil)
 -> 76)
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":168:23 -1
     (nil))
(insn 68 67 69 8 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 197)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":168:23 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 24 [0x18]))
        (nil)))
(insn 69 68 70 8 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (reg/f:DI 87 [ _6 ]) [2 *_6+0 S8 A64])) "mlx_xpm.c":168:15 -1
     (nil))
(insn 70 69 71 8 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _7 ])) "mlx_xpm.c":168:15 -1
     (nil))
(call_insn/i 71 70 72 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fca555b0200 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":168:15 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 72 71 73 8 (set (reg:SI 198)
        (reg:SI 0 ax)) "mlx_xpm.c":168:15 -1
     (nil))
(insn 73 72 74 8 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])
        (reg:SI 198)) "mlx_xpm.c":168:15 -1
     (nil))
(insn 74 73 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])
            (const_int 0 [0]))) "mlx_xpm.c":167:56 discrim 1 -1
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "mlx_xpm.c":167:56 discrim 1 -1
     (nil)
 -> 128)
(code_label 76 75 77 9 36 (nil) [5 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 -1
     (nil))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "mlx_xpm.c":169:5 -1
     (nil)
 -> 84)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (reg:DI 199)) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(call_insn 83 82 84 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 84 83 85 11 38 (nil) [1 uses])
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 discrim 3 -1
     (nil))
(jump_insn 87 86 88 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "mlx_xpm.c":169:5 discrim 3 -1
     (nil)
 -> 92)
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (set (reg:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":169:5 discrim 4 -1
     (nil))
(insn 90 89 91 12 (set (reg:DI 5 di)
        (reg:DI 200)) "mlx_xpm.c":169:5 discrim 4 -1
     (nil))
(call_insn 91 90 92 12 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 92 91 93 13 39 (nil) [1 uses])
(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 6 -1
     (nil))
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 discrim 6 -1
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "mlx_xpm.c":169:5 discrim 6 -1
     (nil)
 -> 101)
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":169:5 discrim 7 -1
     (nil))
(insn 99 98 100 14 (set (reg:DI 5 di)
        (reg:DI 201)) "mlx_xpm.c":169:5 discrim 7 -1
     (nil))
(call_insn 100 99 101 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 101 100 102 15 40 (nil) [1 uses])
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 discrim 9 -1
     (nil))
(jump_insn 104 103 105 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "mlx_xpm.c":169:5 discrim 9 -1
     (nil)
 -> 123)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(insn 107 106 108 16 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (reg/f:DI 202) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(insn 108 107 109 16 (set (reg/f:DI 90 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 89 [ _8 ])
                (const_int 96 [0x60])) [16 _8->f.destroy_image+0 S8 A64])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(insn 109 108 110 16 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(insn 110 109 111 16 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (reg/f:DI 203) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(insn 111 110 112 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _10 ])) "mlx_xpm.c":169:5 discrim 10 -1
     (nil))
(call_insn 112 111 113 16 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 90 [ _9 ]) [0 *_9 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 113 112 114 16 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 114 113 115 16 (set (reg:DI 92 [ _11 ])
        (mem:DI (plus:DI (reg/f:DI 204)
                (const_int 8 [0x8])) [10 img_158->pix+0 S8 A64])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 115 114 116 16 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 116 115 117 16 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (reg/f:DI 205) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 117 116 118 16 (set (reg:DI 4 si)
        (reg:DI 92 [ _11 ])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(insn 118 117 119 16 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "mlx_xpm.c":169:5 discrim 1 -1
     (nil))
(call_insn 119 118 120 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":169:5 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 120 119 121 16 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":169:5 discrim 2 -1
     (nil))
(insn 121 120 122 16 (set (reg:DI 5 di)
        (reg:DI 206)) "mlx_xpm.c":169:5 discrim 2 -1
     (nil))
(call_insn 122 121 123 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 123 122 124 17 41 (nil) [1 uses])
(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 17 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":169:5 discrim 12 -1
     (nil))
(jump_insn 126 125 127 17 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":169:5 997 {jump}
     (nil)
 -> 787)
(barrier 127 126 128)
(code_label 128 127 129 18 37 (nil) [1 uses])
(note 129 128 130 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 18 (set (reg:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":170:3 -1
     (nil))
(insn 131 130 132 18 (set (reg:DI 5 di)
        (reg:DI 207)) "mlx_xpm.c":170:3 -1
     (nil))
(call_insn 132 131 133 18 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":170:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":171:7 -1
     (nil))
(insn 134 133 137 18 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [1 method+0 S4 A32])
        (const_int 0 [0])) "mlx_xpm.c":173:10 -1
     (nil))
(insn 137 134 138 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])
            (const_int 2 [0x2]))) "mlx_xpm.c":174:6 -1
     (nil))
(jump_insn 138 137 139 18 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "mlx_xpm.c":174:6 -1
     (nil)
 -> 209)
(note 139 138 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 19 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -244 [0xffffffffffffff0c])) [1 method+0 S4 A32])
        (const_int 1 [0x1])) "mlx_xpm.c":176:12 -1
     (nil))
(insn 141 140 142 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])
            (const_int 2 [0x2]))) "mlx_xpm.c":177:27 -1
     (nil))
(jump_insn 142 141 143 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "mlx_xpm.c":177:27 -1
     (nil)
 -> 147)
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 20 (set (reg:DI 182 [ iftmp.9_117 ])
        (const_int 262144 [0x40000])) "mlx_xpm.c":177:27 discrim 1 -1
     (nil))
(jump_insn 145 144 146 20 (set (pc)
        (label_ref 150)) -1
     (nil)
 -> 150)
(barrier 146 145 147)
(code_label 147 146 148 21 44 (nil) [1 uses])
(note 148 147 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 21 (set (reg:DI 182 [ iftmp.9_117 ])
        (const_int 1024 [0x400])) "mlx_xpm.c":177:27 discrim 2 -1
     (nil))
(code_label 150 149 151 22 45 (nil) [1 uses])
(note 151 150 152 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 22 (set (reg:DI 5 di)
        (reg:DI 182 [ iftmp.9_117 ])) "mlx_xpm.c":177:27 discrim 4 -1
     (nil))
(call_insn 153 152 154 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fca55514200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":177:27 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 154 153 155 22 (set (reg/f:DI 208)
        (reg:DI 0 ax)) "mlx_xpm.c":177:27 discrim 4 -1
     (expr_list:REG_NOALIAS (reg/f:DI 208)
        (nil)))
(insn 155 154 156 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
        (reg/f:DI 208)) "mlx_xpm.c":177:27 discrim 4 -1
     (nil))
(insn 156 155 157 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":177:8 discrim 1 -1
     (nil))
(jump_insn 157 156 158 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) "mlx_xpm.c":177:8 discrim 1 -1
     (nil)
 -> 271)
(note 158 157 159 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 -1
     (nil))
(jump_insn 160 159 161 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "mlx_xpm.c":178:7 -1
     (nil)
 -> 165)
(note 161 160 162 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 24 (set (reg:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 163 162 164 24 (set (reg:DI 5 di)
        (reg:DI 209)) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(call_insn 164 163 165 24 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 165 164 166 25 47 (nil) [1 uses])
(note 166 165 167 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 discrim 3 -1
     (nil))
(jump_insn 168 167 169 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "mlx_xpm.c":178:7 discrim 3 -1
     (nil)
 -> 173)
(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 26 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":178:7 discrim 4 -1
     (nil))
(insn 171 170 172 26 (set (reg:DI 5 di)
        (reg:DI 210)) "mlx_xpm.c":178:7 discrim 4 -1
     (nil))
(call_insn 172 171 173 26 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 173 172 174 27 48 (nil) [1 uses])
(note 174 173 175 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 6 -1
     (nil))
(insn 176 175 177 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 discrim 6 -1
     (nil))
(jump_insn 177 176 178 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "mlx_xpm.c":178:7 discrim 6 -1
     (nil)
 -> 182)
(note 178 177 179 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 28 (set (reg:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":178:7 discrim 7 -1
     (nil))
(insn 180 179 181 28 (set (reg:DI 5 di)
        (reg:DI 211)) "mlx_xpm.c":178:7 discrim 7 -1
     (nil))
(call_insn 181 180 182 28 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 182 181 183 29 49 (nil) [1 uses])
(note 183 182 184 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 discrim 9 -1
     (nil))
(jump_insn 185 184 186 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "mlx_xpm.c":178:7 discrim 9 -1
     (nil)
 -> 204)
(note 186 185 187 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 30 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(insn 188 187 189 30 (set (reg/f:DI 94 [ _13 ])
        (mem/f:DI (reg/f:DI 212) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(insn 189 188 190 30 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _13 ])
                (const_int 96 [0x60])) [16 _13->f.destroy_image+0 S8 A64])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(insn 190 189 191 30 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(insn 191 190 192 30 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 213) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(insn 192 191 193 30 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _15 ])) "mlx_xpm.c":178:7 discrim 10 -1
     (nil))
(call_insn 193 192 194 30 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 95 [ _14 ]) [0 *_14 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 194 193 195 30 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 195 194 196 30 (set (reg:DI 97 [ _16 ])
        (mem:DI (plus:DI (reg/f:DI 214)
                (const_int 8 [0x8])) [10 img_158->pix+0 S8 A64])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 196 195 197 30 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 197 196 198 30 (set (reg/f:DI 98 [ _17 ])
        (mem/f:DI (reg/f:DI 215) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 198 197 199 30 (set (reg:DI 4 si)
        (reg:DI 97 [ _16 ])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(insn 199 198 200 30 (set (reg:DI 5 di)
        (reg/f:DI 98 [ _17 ])) "mlx_xpm.c":178:7 discrim 1 -1
     (nil))
(call_insn 200 199 201 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":178:7 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 201 200 202 30 (set (reg:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":178:7 discrim 2 -1
     (nil))
(insn 202 201 203 30 (set (reg:DI 5 di)
        (reg:DI 216)) "mlx_xpm.c":178:7 discrim 2 -1
     (nil))
(call_insn 203 202 204 30 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 204 203 205 31 50 (nil) [1 uses])
(note 205 204 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 31 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":178:7 discrim 12 -1
     (nil))
(jump_insn 207 206 208 31 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":178:7 997 {jump}
     (nil)
 -> 787)
(barrier 208 207 209)
(code_label 209 208 210 32 43 (nil) [1 uses])
(note 210 209 211 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 32 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [1 nc+0 S4 A32])) "mlx_xpm.c":181:20 -1
     (nil))
(insn 212 211 213 32 (set (reg:DI 99 [ _18 ])
        (sign_extend:DI (reg:SI 217))) "mlx_xpm.c":181:20 -1
     (nil))
(insn 213 212 214 32 (parallel [
            (set (reg:DI 100 [ _19 ])
                (ashift:DI (reg:DI 99 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":181:20 -1
     (nil))
(insn 214 213 215 32 (set (reg:DI 5 di)
        (reg:DI 100 [ _19 ])) "mlx_xpm.c":181:20 -1
     (nil))
(call_insn 215 214 216 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fca55514200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":181:20 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 216 215 217 32 (set (reg/f:DI 218)
        (reg:DI 0 ax)) "mlx_xpm.c":181:20 -1
     (expr_list:REG_NOALIAS (reg/f:DI 218)
        (nil)))
(insn 217 216 218 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
        (reg/f:DI 218)) "mlx_xpm.c":181:20 -1
     (nil))
(insn 218 217 219 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":181:8 discrim 1 -1
     (nil))
(jump_insn 219 218 220 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) "mlx_xpm.c":181:8 discrim 1 -1
     (nil)
 -> 271)
(note 220 219 221 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 -1
     (nil))
(jump_insn 222 221 223 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) "mlx_xpm.c":182:7 -1
     (nil)
 -> 227)
(note 223 222 224 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 34 (set (reg:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 225 224 226 34 (set (reg:DI 5 di)
        (reg:DI 219)) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(call_insn 226 225 227 34 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 227 226 228 35 51 (nil) [1 uses])
(note 228 227 229 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 discrim 3 -1
     (nil))
(jump_insn 230 229 231 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "mlx_xpm.c":182:7 discrim 3 -1
     (nil)
 -> 235)
(note 231 230 232 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 36 (set (reg:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":182:7 discrim 4 -1
     (nil))
(insn 233 232 234 36 (set (reg:DI 5 di)
        (reg:DI 220)) "mlx_xpm.c":182:7 discrim 4 -1
     (nil))
(call_insn 234 233 235 36 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 235 234 236 37 52 (nil) [1 uses])
(note 236 235 237 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 37 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 6 -1
     (nil))
(insn 238 237 239 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 discrim 6 -1
     (nil))
(jump_insn 239 238 240 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) "mlx_xpm.c":182:7 discrim 6 -1
     (nil)
 -> 244)
(note 240 239 241 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 38 (set (reg:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":182:7 discrim 7 -1
     (nil))
(insn 242 241 243 38 (set (reg:DI 5 di)
        (reg:DI 221)) "mlx_xpm.c":182:7 discrim 7 -1
     (nil))
(call_insn 243 242 244 38 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 244 243 245 39 53 (nil) [1 uses])
(note 245 244 246 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 discrim 9 -1
     (nil))
(jump_insn 247 246 248 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "mlx_xpm.c":182:7 discrim 9 -1
     (nil)
 -> 266)
(note 248 247 249 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 40 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(insn 250 249 251 40 (set (reg/f:DI 101 [ _20 ])
        (mem/f:DI (reg/f:DI 222) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(insn 251 250 252 40 (set (reg/f:DI 102 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _20 ])
                (const_int 96 [0x60])) [16 _20->f.destroy_image+0 S8 A64])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(insn 252 251 253 40 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(insn 253 252 254 40 (set (reg/f:DI 103 [ _22 ])
        (mem/f:DI (reg/f:DI 223) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(insn 254 253 255 40 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _22 ])) "mlx_xpm.c":182:7 discrim 10 -1
     (nil))
(call_insn 255 254 256 40 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 102 [ _21 ]) [0 *_21 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 256 255 257 40 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 257 256 258 40 (set (reg:DI 104 [ _23 ])
        (mem:DI (plus:DI (reg/f:DI 224)
                (const_int 8 [0x8])) [10 img_158->pix+0 S8 A64])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 258 257 259 40 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 259 258 260 40 (set (reg/f:DI 105 [ _24 ])
        (mem/f:DI (reg/f:DI 225) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 260 259 261 40 (set (reg:DI 4 si)
        (reg:DI 104 [ _23 ])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(insn 261 260 262 40 (set (reg:DI 5 di)
        (reg/f:DI 105 [ _24 ])) "mlx_xpm.c":182:7 discrim 1 -1
     (nil))
(call_insn 262 261 263 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":182:7 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 263 262 264 40 (set (reg:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":182:7 discrim 2 -1
     (nil))
(insn 264 263 265 40 (set (reg:DI 5 di)
        (reg:DI 226)) "mlx_xpm.c":182:7 discrim 2 -1
     (nil))
(call_insn 265 264 266 40 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 266 265 267 41 54 (nil) [1 uses])
(note 267 266 268 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 41 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":182:7 discrim 12 -1
     (nil))
(jump_insn 269 268 270 41 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":182:7 997 {jump}
     (nil)
 -> 787)
(barrier 270 269 271)
(code_label 271 270 272 42 46 (nil) [2 uses])
(note 272 271 273 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [2 clip_data+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":184:13 -1
     (nil))
(insn 274 273 275 42 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [1 nc+0 S4 A32])) "mlx_xpm.c":186:5 -1
     (nil))
(insn 275 274 276 42 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])
        (reg:SI 227)) "mlx_xpm.c":186:5 -1
     (nil))
(jump_insn 276 275 277 42 (set (pc)
        (label_ref 510)) "mlx_xpm.c":187:9 -1
     (nil)
 -> 510)
(barrier 277 276 515)
(code_label 515 277 278 43 71 (nil) [1 uses])
(note 278 515 279 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 43 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [1 info_size+0 S4 A32])) "mlx_xpm.c":189:18 -1
     (nil))
(insn 280 279 281 43 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":189:18 -1
     (nil))
(insn 281 280 282 43 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [5 info+0 S8 A64])) "mlx_xpm.c":189:18 -1
     (nil))
(insn 282 281 283 43 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [24 f+0 S8 A64])) "mlx_xpm.c":189:18 -1
     (nil))
(insn 283 282 284 43 (set (reg:SI 1 dx)
        (reg:SI 228)) "mlx_xpm.c":189:18 -1
     (nil))
(insn 284 283 285 43 (set (reg:DI 4 si)
        (reg:DI 229)) "mlx_xpm.c":189:18 -1
     (nil))
(insn 285 284 286 43 (set (reg:DI 5 di)
        (reg:DI 230)) "mlx_xpm.c":189:18 -1
     (nil))
(insn 286 285 287 43 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":189:18 -1
     (nil))
(call_insn 287 286 288 43 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 231) [0 *f_162(D) S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":189:18 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 288 287 289 43 (set (reg:DI 232)
        (reg:DI 0 ax)) "mlx_xpm.c":189:18 -1
     (nil))
(insn 289 288 290 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
        (reg:DI 232)) "mlx_xpm.c":189:18 -1
     (nil))
(insn 290 289 291 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":189:8 discrim 1 -1
     (nil))
(jump_insn 291 290 292 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) "mlx_xpm.c":189:8 discrim 1 -1
     (nil)
 -> 304)
(note 292 291 293 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 44 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])) "mlx_xpm.c":190:17 -1
     (nil))
(insn 294 293 295 44 (set (reg:DI 106 [ _25 ])
        (sign_extend:DI (reg:SI 233))) "mlx_xpm.c":190:17 -1
     (nil))
(insn 295 294 296 44 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])) "mlx_xpm.c":190:17 -1
     (nil))
(insn 296 295 297 44 (parallel [
            (set (reg/f:DI 107 [ _26 ])
                (plus:DI (reg:DI 106 [ _25 ])
                    (reg/f:DI 234)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":190:17 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
            (reg:DI 106 [ _25 ]))
        (nil)))
(insn 297 296 298 44 (set (reg:DI 5 di)
        (reg/f:DI 107 [ _26 ])) "mlx_xpm.c":190:17 -1
     (nil))
(insn 298 297 299 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":190:17 -1
     (nil))
(call_insn 299 298 300 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_to_wordtab") [flags 0x41]  <function_decl 0x7fca55030e00 mlx_int_str_to_wordtab>) [0 mlx_int_str_to_wordtab S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":190:17 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 300 299 301 44 (set (reg:DI 235)
        (reg:DI 0 ax)) "mlx_xpm.c":190:17 -1
     (nil))
(insn 301 300 302 44 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (reg:DI 235)) "mlx_xpm.c":190:17 -1
     (nil))
(insn 302 301 303 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":189:42 discrim 1 -1
     (nil))
(jump_insn 303 302 304 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "mlx_xpm.c":189:42 discrim 1 -1
     (nil)
 -> 356)
(code_label 304 303 305 45 56 (nil) [1 uses])
(note 305 304 306 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 -1
     (nil))
(jump_insn 307 306 308 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) "mlx_xpm.c":191:7 -1
     (nil)
 -> 312)
(note 308 307 309 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 46 (set (reg:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 310 309 311 46 (set (reg:DI 5 di)
        (reg:DI 236)) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(call_insn 311 310 312 46 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 312 311 313 47 58 (nil) [1 uses])
(note 313 312 314 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 discrim 3 -1
     (nil))
(jump_insn 315 314 316 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) "mlx_xpm.c":191:7 discrim 3 -1
     (nil)
 -> 320)
(note 316 315 317 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 48 (set (reg:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":191:7 discrim 4 -1
     (nil))
(insn 318 317 319 48 (set (reg:DI 5 di)
        (reg:DI 237)) "mlx_xpm.c":191:7 discrim 4 -1
     (nil))
(call_insn 319 318 320 48 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 320 319 321 49 59 (nil) [1 uses])
(note 321 320 322 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 49 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 6 -1
     (nil))
(insn 323 322 324 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 discrim 6 -1
     (nil))
(jump_insn 324 323 325 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "mlx_xpm.c":191:7 discrim 6 -1
     (nil)
 -> 329)
(note 325 324 326 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 50 (set (reg:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":191:7 discrim 7 -1
     (nil))
(insn 327 326 328 50 (set (reg:DI 5 di)
        (reg:DI 238)) "mlx_xpm.c":191:7 discrim 7 -1
     (nil))
(call_insn 328 327 329 50 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 329 328 330 51 60 (nil) [1 uses])
(note 330 329 331 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 discrim 9 -1
     (nil))
(jump_insn 332 331 333 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 351)
            (pc))) "mlx_xpm.c":191:7 discrim 9 -1
     (nil)
 -> 351)
(note 333 332 334 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 52 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(insn 335 334 336 52 (set (reg/f:DI 108 [ _27 ])
        (mem/f:DI (reg/f:DI 239) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(insn 336 335 337 52 (set (reg/f:DI 109 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 108 [ _27 ])
                (const_int 96 [0x60])) [16 _27->f.destroy_image+0 S8 A64])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(insn 337 336 338 52 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(insn 338 337 339 52 (set (reg/f:DI 110 [ _29 ])
        (mem/f:DI (reg/f:DI 240) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(insn 339 338 340 52 (set (reg:DI 5 di)
        (reg/f:DI 110 [ _29 ])) "mlx_xpm.c":191:7 discrim 10 -1
     (nil))
(call_insn 340 339 341 52 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 109 [ _28 ]) [0 *_28 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 341 340 342 52 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 342 341 343 52 (set (reg:DI 111 [ _30 ])
        (mem:DI (plus:DI (reg/f:DI 241)
                (const_int 8 [0x8])) [10 img_158->pix+0 S8 A64])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 343 342 344 52 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 344 343 345 52 (set (reg/f:DI 112 [ _31 ])
        (mem/f:DI (reg/f:DI 242) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 345 344 346 52 (set (reg:DI 4 si)
        (reg:DI 111 [ _30 ])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(insn 346 345 347 52 (set (reg:DI 5 di)
        (reg/f:DI 112 [ _31 ])) "mlx_xpm.c":191:7 discrim 1 -1
     (nil))
(call_insn 347 346 348 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":191:7 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 348 347 349 52 (set (reg:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":191:7 discrim 2 -1
     (nil))
(insn 349 348 350 52 (set (reg:DI 5 di)
        (reg:DI 243)) "mlx_xpm.c":191:7 discrim 2 -1
     (nil))
(call_insn 350 349 351 52 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 351 350 352 53 61 (nil) [1 uses])
(note 352 351 353 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 53 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":191:7 discrim 12 -1
     (nil))
(jump_insn 354 353 355 53 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":191:7 997 {jump}
     (nil)
 -> 787)
(barrier 355 354 356)
(code_label 356 355 357 54 57 (nil) [1 uses])
(note 357 356 358 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 382 54 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])
        (const_int 0 [0])) "mlx_xpm.c":192:7 -1
     (nil))
(code_label 382 358 359 55 63 (nil) [1 uses])
(note 359 382 360 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 55 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":193:15 discrim 2 -1
     (nil))
(insn 361 360 362 55 (set (reg:DI 113 [ _32 ])
        (sign_extend:DI (reg:SI 244))) "mlx_xpm.c":193:15 discrim 2 -1
     (nil))
(insn 362 361 363 55 (parallel [
            (set (reg:DI 114 [ _33 ])
                (ashift:DI (reg:DI 113 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":193:15 discrim 2 -1
     (nil))
(insn 363 362 364 55 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":193:15 discrim 2 -1
     (nil))
(insn 364 363 365 55 (parallel [
            (set (reg/f:DI 115 [ _34 ])
                (plus:DI (reg:DI 114 [ _33 ])
                    (reg/f:DI 245)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":193:15 discrim 2 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (reg:DI 114 [ _33 ]))
        (nil)))
(insn 365 364 366 55 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (reg/f:DI 115 [ _34 ]) [2 *_34+0 S8 A64])) "mlx_xpm.c":193:15 discrim 2 -1
     (nil))
(insn 366 365 367 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 116 [ _35 ])
            (const_int 0 [0]))) "mlx_xpm.c":193:19 discrim 2 -1
     (nil))
(jump_insn 367 366 368 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) "mlx_xpm.c":193:19 discrim 2 -1
     (nil)
 -> 385)
(note 368 367 369 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 56 (set (reg:SI 117 [ j.10_36 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":193:34 discrim 1 -1
     (nil))
(insn 370 369 371 56 (parallel [
            (set (reg:SI 246)
                (plus:SI (reg:SI 117 [ j.10_36 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":193:34 discrim 1 -1
     (nil))
(insn 371 370 372 56 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])
        (reg:SI 246)) "mlx_xpm.c":193:34 discrim 1 -1
     (nil))
(insn 372 371 373 56 (set (reg:DI 118 [ _37 ])
        (sign_extend:DI (reg:SI 117 [ j.10_36 ]))) "mlx_xpm.c":193:34 discrim 1 -1
     (nil))
(insn 373 372 374 56 (parallel [
            (set (reg:DI 119 [ _38 ])
                (ashift:DI (reg:DI 118 [ _37 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":193:32 discrim 1 -1
     (nil))
(insn 374 373 375 56 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":193:32 discrim 1 -1
     (nil))
(insn 375 374 376 56 (parallel [
            (set (reg/f:DI 120 [ _39 ])
                (plus:DI (reg:DI 119 [ _38 ])
                    (reg/f:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":193:32 discrim 1 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (reg:DI 119 [ _38 ]))
        (nil)))
(insn 376 375 377 56 (set (reg/f:DI 121 [ _40 ])
        (mem/f:DI (reg/f:DI 120 [ _39 ]) [2 *_39+0 S8 A64])) "mlx_xpm.c":193:22 discrim 1 -1
     (nil))
(insn 377 376 378 56 (set (reg:DI 248)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fca550c7ea0 *.LC2>)) "mlx_xpm.c":193:22 discrim 1 -1
     (nil))
(insn 378 377 379 56 (set (reg:DI 4 si)
        (reg:DI 248)) "mlx_xpm.c":193:22 discrim 1 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fca550c7ea0 *.LC2>)
        (nil)))
(insn 379 378 380 56 (set (reg:DI 5 di)
        (reg/f:DI 121 [ _40 ])) "mlx_xpm.c":193:22 discrim 1 -1
     (nil))
(call_insn/i 380 379 381 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fca554ea600 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":193:22 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 381 380 383 56 (set (reg:SI 122 [ _41 ])
        (reg:SI 0 ax)) "mlx_xpm.c":193:22 discrim 1 -1
     (nil))
(insn 383 381 384 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ _41 ])
            (const_int 0 [0]))) "mlx_xpm.c":193:19 discrim 1 -1
     (nil))
(jump_insn 384 383 385 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) "mlx_xpm.c":193:19 discrim 1 -1
     (nil)
 -> 382)
(code_label 385 384 386 57 62 (nil) [1 uses])
(note 386 385 387 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 388 57 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":195:13 -1
     (nil))
(insn 388 387 389 57 (set (reg:DI 123 [ _42 ])
        (sign_extend:DI (reg:SI 249))) "mlx_xpm.c":195:13 -1
     (nil))
(insn 389 388 390 57 (parallel [
            (set (reg:DI 124 [ _43 ])
                (ashift:DI (reg:DI 123 [ _42 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":195:13 -1
     (nil))
(insn 390 389 391 57 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":195:13 -1
     (nil))
(insn 391 390 392 57 (parallel [
            (set (reg/f:DI 125 [ _44 ])
                (plus:DI (reg:DI 124 [ _43 ])
                    (reg/f:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":195:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (reg:DI 124 [ _43 ]))
        (nil)))
(insn 392 391 393 57 (set (reg/f:DI 126 [ _45 ])
        (mem/f:DI (reg/f:DI 125 [ _44 ]) [2 *_44+0 S8 A64])) "mlx_xpm.c":195:13 -1
     (nil))
(insn 393 392 394 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 126 [ _45 ])
            (const_int 0 [0]))) "mlx_xpm.c":195:8 -1
     (nil))
(jump_insn 394 393 395 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 446)
            (pc))) "mlx_xpm.c":195:8 -1
     (nil)
 -> 446)
(note 395 394 396 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 -1
     (nil))
(jump_insn 397 396 398 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 402)
            (pc))) "mlx_xpm.c":196:7 -1
     (nil)
 -> 402)
(note 398 397 399 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 59 (set (reg:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 400 399 401 59 (set (reg:DI 5 di)
        (reg:DI 251)) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(call_insn 401 400 402 59 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 402 401 403 60 65 (nil) [1 uses])
(note 403 402 404 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 discrim 3 -1
     (nil))
(jump_insn 405 404 406 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) "mlx_xpm.c":196:7 discrim 3 -1
     (nil)
 -> 410)
(note 406 405 407 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 61 (set (reg:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":196:7 discrim 4 -1
     (nil))
(insn 408 407 409 61 (set (reg:DI 5 di)
        (reg:DI 252)) "mlx_xpm.c":196:7 discrim 4 -1
     (nil))
(call_insn 409 408 410 61 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 410 409 411 62 66 (nil) [1 uses])
(note 411 410 412 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 6 -1
     (nil))
(insn 413 412 414 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 discrim 6 -1
     (nil))
(jump_insn 414 413 415 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 419)
            (pc))) "mlx_xpm.c":196:7 discrim 6 -1
     (nil)
 -> 419)
(note 415 414 416 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 63 (set (reg:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":196:7 discrim 7 -1
     (nil))
(insn 417 416 418 63 (set (reg:DI 5 di)
        (reg:DI 253)) "mlx_xpm.c":196:7 discrim 7 -1
     (nil))
(call_insn 418 417 419 63 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 419 418 420 64 67 (nil) [1 uses])
(note 420 419 421 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 discrim 9 -1
     (nil))
(jump_insn 422 421 423 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) "mlx_xpm.c":196:7 discrim 9 -1
     (nil)
 -> 441)
(note 423 422 424 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 65 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(insn 425 424 426 65 (set (reg/f:DI 127 [ _46 ])
        (mem/f:DI (reg/f:DI 254) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(insn 426 425 427 65 (set (reg/f:DI 128 [ _47 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _46 ])
                (const_int 96 [0x60])) [16 _46->f.destroy_image+0 S8 A64])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(insn 427 426 428 65 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(insn 428 427 429 65 (set (reg/f:DI 129 [ _48 ])
        (mem/f:DI (reg/f:DI 255) [9 img_158->image+0 S8 A64])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(insn 429 428 430 65 (set (reg:DI 5 di)
        (reg/f:DI 129 [ _48 ])) "mlx_xpm.c":196:7 discrim 10 -1
     (nil))
(call_insn 430 429 431 65 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 128 [ _47 ]) [0 *_47 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 431 430 432 65 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 432 431 433 65 (set (reg:DI 130 [ _49 ])
        (mem:DI (plus:DI (reg/f:DI 256)
                (const_int 8 [0x8])) [10 img_158->pix+0 S8 A64])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 433 432 434 65 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 434 433 435 65 (set (reg/f:DI 131 [ _50 ])
        (mem/f:DI (reg/f:DI 257) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 435 434 436 65 (set (reg:DI 4 si)
        (reg:DI 130 [ _49 ])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(insn 436 435 437 65 (set (reg:DI 5 di)
        (reg/f:DI 131 [ _50 ])) "mlx_xpm.c":196:7 discrim 1 -1
     (nil))
(call_insn 437 436 438 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":196:7 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 438 437 439 65 (set (reg:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":196:7 discrim 2 -1
     (nil))
(insn 439 438 440 65 (set (reg:DI 5 di)
        (reg:DI 258)) "mlx_xpm.c":196:7 discrim 2 -1
     (nil))
(call_insn 440 439 441 65 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 441 440 442 66 68 (nil) [1 uses])
(note 442 441 443 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 444 66 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":196:7 discrim 12 -1
     (nil))
(jump_insn 444 443 445 66 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":196:7 997 {jump}
     (nil)
 -> 787)
(barrier 445 444 446)
(code_label 446 445 447 67 64 (nil) [1 uses])
(note 447 446 448 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 67 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":197:47 -1
     (nil))
(insn 449 448 450 67 (set (reg:DI 132 [ _51 ])
        (sign_extend:DI (reg:SI 259))) "mlx_xpm.c":197:47 -1
     (nil))
(insn 450 449 451 67 (parallel [
            (set (reg:DI 133 [ _52 ])
                (plus:DI (reg:DI 132 [ _51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":197:47 -1
     (nil))
(insn 451 450 452 67 (parallel [
            (set (reg:DI 134 [ _53 ])
                (ashift:DI (reg:DI 133 [ _52 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":197:47 -1
     (nil))
(insn 452 451 453 67 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":197:47 -1
     (nil))
(insn 453 452 454 67 (parallel [
            (set (reg/f:DI 135 [ _54 ])
                (plus:DI (reg:DI 134 [ _53 ])
                    (reg/f:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":197:47 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (reg:DI 134 [ _53 ]))
        (nil)))
(insn 454 453 455 67 (set (reg/f:DI 136 [ _55 ])
        (mem/f:DI (reg/f:DI 135 [ _54 ]) [2 *_54+0 S8 A64])) "mlx_xpm.c":197:15 -1
     (nil))
(insn 455 454 456 67 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":197:39 -1
     (nil))
(insn 456 455 457 67 (set (reg:DI 137 [ _56 ])
        (sign_extend:DI (reg:SI 261))) "mlx_xpm.c":197:39 -1
     (nil))
(insn 457 456 458 67 (parallel [
            (set (reg:DI 138 [ _57 ])
                (ashift:DI (reg:DI 137 [ _56 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":197:39 -1
     (nil))
(insn 458 457 459 67 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":197:39 -1
     (nil))
(insn 459 458 460 67 (parallel [
            (set (reg/f:DI 139 [ _58 ])
                (plus:DI (reg:DI 138 [ _57 ])
                    (reg/f:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":197:39 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (reg:DI 138 [ _57 ]))
        (nil)))
(insn 460 459 461 67 (set (reg/f:DI 140 [ _59 ])
        (mem/f:DI (reg/f:DI 139 [ _58 ]) [2 *_58+0 S8 A64])) "mlx_xpm.c":197:15 -1
     (nil))
(insn 461 460 462 67 (set (reg:DI 4 si)
        (reg/f:DI 136 [ _55 ])) "mlx_xpm.c":197:15 -1
     (nil))
(insn 462 461 463 67 (set (reg:DI 5 di)
        (reg/f:DI 140 [ _59 ])) "mlx_xpm.c":197:15 -1
     (nil))
(call_insn 463 462 464 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_get_text_rgb") [flags 0x3]  <function_decl 0x7fca55037d00 mlx_int_get_text_rgb>) [0 mlx_int_get_text_rgb S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":197:15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 464 463 465 67 (set (reg:SI 263)
        (reg:SI 0 ax)) "mlx_xpm.c":197:15 -1
     (nil))
(insn 465 464 466 67 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -204 [0xffffffffffffff34])) [1 rgb_col+0 S4 A32])
        (reg:SI 263)) "mlx_xpm.c":197:15 -1
     (nil))
(insn 466 465 467 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -244 [0xffffffffffffff0c])) [1 method+0 S4 A32])
            (const_int 0 [0]))) "mlx_xpm.c":209:8 -1
     (nil))
(jump_insn 467 466 468 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) "mlx_xpm.c":209:8 -1
     (nil)
 -> 483)
(note 468 467 469 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 68 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])) "mlx_xpm.c":210:21 -1
     (nil))
(insn 470 469 471 68 (set (reg:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])) "mlx_xpm.c":210:21 -1
     (nil))
(insn 471 470 472 68 (set (reg:SI 4 si)
        (reg:SI 264)) "mlx_xpm.c":210:21 -1
     (nil))
(insn 472 471 473 68 (set (reg:DI 5 di)
        (reg:DI 265)) "mlx_xpm.c":210:21 -1
     (nil))
(call_insn 473 472 474 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_get_col_name") [flags 0x3]  <function_decl 0x7fca55037b00 mlx_int_get_col_name>) [0 mlx_int_get_col_name S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":210:21 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 474 473 475 68 (set (reg:SI 141 [ _60 ])
        (reg:SI 0 ax)) "mlx_xpm.c":210:21 -1
     (nil))
(insn 475 474 476 68 (set (reg:DI 142 [ _61 ])
        (sign_extend:DI (reg:SI 141 [ _60 ]))) "mlx_xpm.c":210:21 discrim 1 -1
     (nil))
(insn 476 475 477 68 (parallel [
            (set (reg:DI 143 [ _62 ])
                (ashift:DI (reg:DI 142 [ _61 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":210:20 discrim 1 -1
     (nil))
(insn 477 476 478 68 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":210:20 discrim 1 -1
     (nil))
(insn 478 477 479 68 (parallel [
            (set (reg/f:DI 144 [ _63 ])
                (plus:DI (reg:DI 143 [ _62 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":210:20 discrim 1 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (reg:DI 143 [ _62 ]))
        (nil)))
(insn 479 478 480 68 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -204 [0xffffffffffffff34])) [1 rgb_col+0 S4 A32])) "mlx_xpm.c":210:53 discrim 1 -1
     (nil))
(insn 480 479 481 68 (set (mem:SI (reg/f:DI 144 [ _63 ]) [1 *_63+0 S4 A32])
        (reg:SI 267)) "mlx_xpm.c":210:53 discrim 1 -1
     (nil))
(jump_insn 481 480 482 68 (set (pc)
        (label_ref 504)) -1
     (nil)
 -> 504)
(barrier 482 481 483)
(code_label 483 482 484 69 69 (nil) [1 uses])
(note 484 483 485 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 69 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])) "mlx_xpm.c":214:13 -1
     (nil))
(insn 486 485 487 69 (set (reg:DI 145 [ _64 ])
        (sign_extend:DI (reg:SI 268))) "mlx_xpm.c":214:13 -1
     (nil))
(insn 487 486 488 69 (parallel [
            (set (reg:DI 146 [ _65 ])
                (ashift:DI (reg:DI 145 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":214:13 -1
     (nil))
(insn 488 487 489 69 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":214:13 -1
     (nil))
(insn 489 488 490 69 (parallel [
            (set (reg/f:DI 147 [ _66 ])
                (plus:DI (reg:DI 146 [ _65 ])
                    (reg/f:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":214:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (reg:DI 146 [ _65 ]))
        (nil)))
(insn 490 489 491 69 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])) "mlx_xpm.c":214:24 -1
     (nil))
(insn 491 490 492 69 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])) "mlx_xpm.c":214:24 -1
     (nil))
(insn 492 491 493 69 (set (reg:SI 4 si)
        (reg:SI 270)) "mlx_xpm.c":214:24 -1
     (nil))
(insn 493 492 494 69 (set (reg:DI 5 di)
        (reg:DI 271)) "mlx_xpm.c":214:24 -1
     (nil))
(call_insn 494 493 495 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_get_col_name") [flags 0x3]  <function_decl 0x7fca55037b00 mlx_int_get_col_name>) [0 mlx_int_get_col_name S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":214:24 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 495 494 496 69 (set (reg:SI 148 [ _67 ])
        (reg:SI 0 ax)) "mlx_xpm.c":214:24 -1
     (nil))
(insn 496 495 497 69 (set (mem:SI (reg/f:DI 147 [ _66 ]) [1 _66->name+0 S4 A32])
        (reg:SI 148 [ _67 ])) "mlx_xpm.c":214:22 discrim 1 -1
     (nil))
(insn 497 496 498 69 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])) "mlx_xpm.c":215:13 -1
     (nil))
(insn 498 497 499 69 (set (reg:DI 149 [ _68 ])
        (sign_extend:DI (reg:SI 272))) "mlx_xpm.c":215:13 -1
     (nil))
(insn 499 498 500 69 (parallel [
            (set (reg:DI 150 [ _69 ])
                (ashift:DI (reg:DI 149 [ _68 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":215:13 -1
     (nil))
(insn 500 499 501 69 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":215:13 -1
     (nil))
(insn 501 500 502 69 (parallel [
            (set (reg/f:DI 151 [ _70 ])
                (plus:DI (reg:DI 150 [ _69 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":215:13 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (reg:DI 150 [ _69 ]))
        (nil)))
(insn 502 501 503 69 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -204 [0xffffffffffffff34])) [1 rgb_col+0 S4 A32])) "mlx_xpm.c":215:21 -1
     (nil))
(insn 503 502 504 69 (set (mem:SI (plus:DI (reg/f:DI 151 [ _70 ])
                (const_int 4 [0x4])) [1 _70->col+0 S4 A32])
        (reg:SI 274)) "mlx_xpm.c":215:21 -1
     (nil))
(code_label 504 503 505 70 70 (nil) [1 uses])
(note 505 504 506 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 70 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":217:5 -1
     (nil))
(insn 507 506 508 70 (set (reg:DI 5 di)
        (reg:DI 275)) "mlx_xpm.c":217:5 -1
     (nil))
(call_insn 508 507 509 70 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":217:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 509 508 510 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":218:9 -1
     (nil))
(code_label 510 509 511 71 55 (nil) [1 uses])
(note 511 510 512 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 71 (set (reg:SI 152 [ i.11_71 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])) "mlx_xpm.c":187:11 -1
     (nil))
(insn 513 512 514 71 (parallel [
            (set (reg:SI 276)
                (plus:SI (reg:SI 152 [ i.11_71 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":187:11 -1
     (nil))
(insn 514 513 516 71 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])
        (reg:SI 276)) "mlx_xpm.c":187:11 -1
     (nil))
(insn 516 514 517 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ i.11_71 ])
            (const_int 0 [0]))) "mlx_xpm.c":187:10 -1
     (nil))
(jump_insn 517 516 518 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) "mlx_xpm.c":187:10 -1
     (nil)
 -> 515)
(note 518 517 519 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 72 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [1 height+0 S4 A128])) "mlx_xpm.c":221:15 -1
     (nil))
(insn 520 519 521 72 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -228 [0xffffffffffffff1c])) [1 width+0 S4 A32])) "mlx_xpm.c":221:15 -1
     (nil))
(insn 521 520 522 72 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":221:15 -1
     (nil))
(insn 522 521 523 72 (set (reg:SI 1 dx)
        (reg:SI 277)) "mlx_xpm.c":221:15 -1
     (nil))
(insn 523 522 524 72 (set (reg:SI 4 si)
        (reg:SI 278)) "mlx_xpm.c":221:15 -1
     (nil))
(insn 524 523 525 72 (set (reg:DI 5 di)
        (reg:DI 279)) "mlx_xpm.c":221:15 -1
     (nil))
(insn 525 524 526 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":221:15 -1
     (nil))
(call_insn 526 525 527 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_new_image") [flags 0x41]  <function_decl 0x7fca55030f00 mlx_new_image>) [0 mlx_new_image S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":221:15 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 527 526 528 72 (set (reg:DI 280)
        (reg:DI 0 ax)) "mlx_xpm.c":221:15 -1
     (nil))
(insn 528 527 529 72 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
        (reg:DI 280)) "mlx_xpm.c":221:15 -1
     (nil))
(insn 529 528 530 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":221:6 discrim 1 -1
     (nil))
(jump_insn 530 529 531 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 582)
            (pc))) "mlx_xpm.c":221:6 discrim 1 -1
     (nil)
 -> 582)
(note 531 530 532 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 -1
     (nil))
(jump_insn 533 532 534 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 538)
            (pc))) "mlx_xpm.c":222:5 -1
     (nil)
 -> 538)
(note 534 533 535 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 74 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 536 535 537 74 (set (reg:DI 5 di)
        (reg:DI 281)) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(call_insn 537 536 538 74 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 538 537 539 75 73 (nil) [1 uses])
(note 539 538 540 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 discrim 3 -1
     (nil))
(jump_insn 541 540 542 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) "mlx_xpm.c":222:5 discrim 3 -1
     (nil)
 -> 546)
(note 542 541 543 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 76 (set (reg:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":222:5 discrim 4 -1
     (nil))
(insn 544 543 545 76 (set (reg:DI 5 di)
        (reg:DI 282)) "mlx_xpm.c":222:5 discrim 4 -1
     (nil))
(call_insn 545 544 546 76 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 546 545 547 77 74 (nil) [1 uses])
(note 547 546 548 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 549 77 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 6 -1
     (nil))
(insn 549 548 550 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 discrim 6 -1
     (nil))
(jump_insn 550 549 551 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 555)
            (pc))) "mlx_xpm.c":222:5 discrim 6 -1
     (nil)
 -> 555)
(note 551 550 552 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 78 (set (reg:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":222:5 discrim 7 -1
     (nil))
(insn 553 552 554 78 (set (reg:DI 5 di)
        (reg:DI 283)) "mlx_xpm.c":222:5 discrim 7 -1
     (nil))
(call_insn 554 553 555 78 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 555 554 556 79 75 (nil) [1 uses])
(note 556 555 557 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 discrim 9 -1
     (nil))
(jump_insn 558 557 559 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) "mlx_xpm.c":222:5 discrim 9 -1
     (nil)
 -> 577)
(note 559 558 560 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 561 80 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(insn 561 560 562 80 (set (reg/f:DI 153 [ _72 ])
        (mem/f:DI (reg/f:DI 284) [9 img_204->image+0 S8 A64])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(insn 562 561 563 80 (set (reg/f:DI 154 [ _73 ])
        (mem/f:DI (plus:DI (reg/f:DI 153 [ _72 ])
                (const_int 96 [0x60])) [16 _72->f.destroy_image+0 S8 A64])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(insn 563 562 564 80 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(insn 564 563 565 80 (set (reg/f:DI 155 [ _74 ])
        (mem/f:DI (reg/f:DI 285) [9 img_204->image+0 S8 A64])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(insn 565 564 566 80 (set (reg:DI 5 di)
        (reg/f:DI 155 [ _74 ])) "mlx_xpm.c":222:5 discrim 10 -1
     (nil))
(call_insn 566 565 567 80 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 154 [ _73 ]) [0 *_73 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 567 566 568 80 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 568 567 569 80 (set (reg:DI 156 [ _75 ])
        (mem:DI (plus:DI (reg/f:DI 286)
                (const_int 8 [0x8])) [10 img_204->pix+0 S8 A64])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 569 568 570 80 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 570 569 571 80 (set (reg/f:DI 157 [ _76 ])
        (mem/f:DI (reg/f:DI 287) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 571 570 572 80 (set (reg:DI 4 si)
        (reg:DI 156 [ _75 ])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(insn 572 571 573 80 (set (reg:DI 5 di)
        (reg/f:DI 157 [ _76 ])) "mlx_xpm.c":222:5 discrim 1 -1
     (nil))
(call_insn 573 572 574 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":222:5 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 574 573 575 80 (set (reg:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":222:5 discrim 2 -1
     (nil))
(insn 575 574 576 80 (set (reg:DI 5 di)
        (reg:DI 288)) "mlx_xpm.c":222:5 discrim 2 -1
     (nil))
(call_insn 576 575 577 80 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 577 576 578 81 76 (nil) [1 uses])
(note 578 577 579 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 81 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":222:5 discrim 12 -1
     (nil))
(jump_insn 580 579 581 81 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":222:5 997 {jump}
     (nil)
 -> 787)
(barrier 581 580 582)
(code_label 582 581 583 82 72 (nil) [1 uses])
(note 583 582 584 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 82 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":223:12 -1
     (nil))
(insn 585 584 586 82 (set (reg:SI 158 [ _77 ])
        (mem:SI (plus:DI (reg/f:DI 289)
                (const_int 28 [0x1c])) [1 img_204->bpp+0 S4 A32])) "mlx_xpm.c":223:12 -1
     (nil))
(insn 586 585 587 82 (set (reg:SI 290)
        (reg:SI 158 [ _77 ])) "mlx_xpm.c":223:7 -1
     (nil))
(insn 587 586 590 82 (parallel [
            (set (reg:SI 291)
                (plus:SI (reg:SI 290)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":223:7 -1
     (nil))
(insn 590 587 591 82 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 290)
            (const_int 0 [0]))) "mlx_xpm.c":223:7 -1
     (nil))
(insn 591 590 592 82 (set (reg:SI 290)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 291)
            (reg:SI 290))) "mlx_xpm.c":223:7 -1
     (nil))
(insn 592 591 593 82 (parallel [
            (set (reg:SI 292)
                (ashiftrt:SI (reg:SI 290)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":223:7 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 158 [ _77 ])
            (const_int 8 [0x8]))
        (nil)))
(insn 593 592 594 82 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [1 opp+0 S4 A32])
        (reg:SI 292)) "mlx_xpm.c":223:7 -1
     (nil))
(insn 594 593 595 82 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [1 height+0 S4 A128])) "mlx_xpm.c":226:5 -1
     (nil))
(insn 595 594 596 82 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])
        (reg:SI 293)) "mlx_xpm.c":226:5 -1
     (nil))
(insn 596 595 597 82 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":227:8 -1
     (nil))
(insn 597 596 598 82 (set (reg/f:DI 295)
        (mem/f:DI (plus:DI (reg/f:DI 294)
                (const_int 48 [0x30])) [2 img_204->data+0 S8 A64])) "mlx_xpm.c":227:8 -1
     (nil))
(insn 598 597 599 82 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [2 data+0 S8 A128])
        (reg/f:DI 295)) "mlx_xpm.c":227:8 -1
     (nil))
(jump_insn 599 598 600 82 (set (pc)
        (label_ref 759)) "mlx_xpm.c":228:9 -1
     (nil)
 -> 759)
(barrier 600 599 764)
(code_label 764 600 601 83 90 (nil) [1 uses])
(note 601 764 602 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 83 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -276 [0xfffffffffffffeec])) [1 info_size+0 S4 A32])) "mlx_xpm.c":230:18 -1
     (nil))
(insn 603 602 604 83 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":230:18 -1
     (nil))
(insn 604 603 605 83 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [5 info+0 S8 A64])) "mlx_xpm.c":230:18 -1
     (nil))
(insn 605 604 606 83 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [24 f+0 S8 A64])) "mlx_xpm.c":230:18 -1
     (nil))
(insn 606 605 607 83 (set (reg:SI 1 dx)
        (reg:SI 296)) "mlx_xpm.c":230:18 -1
     (nil))
(insn 607 606 608 83 (set (reg:DI 4 si)
        (reg:DI 297)) "mlx_xpm.c":230:18 -1
     (nil))
(insn 608 607 609 83 (set (reg:DI 5 di)
        (reg:DI 298)) "mlx_xpm.c":230:18 -1
     (nil))
(insn 609 608 610 83 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":230:18 -1
     (nil))
(call_insn 610 609 611 83 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 299) [0 *f_162(D) S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":230:18 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 611 610 612 83 (set (reg:DI 300)
        (reg:DI 0 ax)) "mlx_xpm.c":230:18 -1
     (nil))
(insn 612 611 613 83 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
        (reg:DI 300)) "mlx_xpm.c":230:18 -1
     (nil))
(insn 613 612 614 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":230:8 discrim 1 -1
     (nil))
(jump_insn 614 613 615 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 666)
            (pc))) "mlx_xpm.c":230:8 discrim 1 -1
     (nil)
 -> 666)
(note 615 614 616 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 616 615 617 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 -1
     (nil))
(jump_insn 617 616 618 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) "mlx_xpm.c":231:7 -1
     (nil)
 -> 622)
(note 618 617 619 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 85 (set (reg:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 620 619 621 85 (set (reg:DI 5 di)
        (reg:DI 301)) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(call_insn 621 620 622 85 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 622 621 623 86 79 (nil) [1 uses])
(note 623 622 624 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 discrim 3 -1
     (nil))
(jump_insn 625 624 626 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) "mlx_xpm.c":231:7 discrim 3 -1
     (nil)
 -> 630)
(note 626 625 627 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 87 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])) "mlx_xpm.c":231:7 discrim 4 -1
     (nil))
(insn 628 627 629 87 (set (reg:DI 5 di)
        (reg:DI 302)) "mlx_xpm.c":231:7 discrim 4 -1
     (nil))
(call_insn 629 628 630 87 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 4 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 630 629 631 88 80 (nil) [1 uses])
(note 631 630 632 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 88 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [4 tab+0 S8 A64])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 6 -1
     (nil))
(insn 633 632 634 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 discrim 6 -1
     (nil))
(jump_insn 634 633 635 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) "mlx_xpm.c":231:7 discrim 6 -1
     (nil)
 -> 639)
(note 635 634 636 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 89 (set (reg:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":231:7 discrim 7 -1
     (nil))
(insn 637 636 638 89 (set (reg:DI 5 di)
        (reg:DI 303)) "mlx_xpm.c":231:7 discrim 7 -1
     (nil))
(call_insn 638 637 639 89 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 639 638 640 90 81 (nil) [1 uses])
(note 640 639 641 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 discrim 9 -1
     (nil))
(jump_insn 642 641 643 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) "mlx_xpm.c":231:7 discrim 9 -1
     (nil)
 -> 661)
(note 643 642 644 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 644 643 645 91 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(insn 645 644 646 91 (set (reg/f:DI 159 [ _78 ])
        (mem/f:DI (reg/f:DI 304) [9 img_204->image+0 S8 A64])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(insn 646 645 647 91 (set (reg/f:DI 160 [ _79 ])
        (mem/f:DI (plus:DI (reg/f:DI 159 [ _78 ])
                (const_int 96 [0x60])) [16 _78->f.destroy_image+0 S8 A64])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(insn 647 646 648 91 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(insn 648 647 649 91 (set (reg/f:DI 161 [ _80 ])
        (mem/f:DI (reg/f:DI 305) [9 img_204->image+0 S8 A64])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(insn 649 648 650 91 (set (reg:DI 5 di)
        (reg/f:DI 161 [ _80 ])) "mlx_xpm.c":231:7 discrim 10 -1
     (nil))
(call_insn 650 649 651 91 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 160 [ _79 ]) [0 *_79 S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 discrim 10 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 651 650 652 91 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 652 651 653 91 (set (reg:DI 162 [ _81 ])
        (mem:DI (plus:DI (reg/f:DI 306)
                (const_int 8 [0x8])) [10 img_204->pix+0 S8 A64])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 653 652 654 91 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 654 653 655 91 (set (reg/f:DI 163 [ _82 ])
        (mem/f:DI (reg/f:DI 307) [26 xvar_183(D)->display+0 S8 A64])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 655 654 656 91 (set (reg:DI 4 si)
        (reg:DI 162 [ _81 ])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(insn 656 655 657 91 (set (reg:DI 5 di)
        (reg/f:DI 163 [ _82 ])) "mlx_xpm.c":231:7 discrim 1 -1
     (nil))
(call_insn 657 656 658 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7fca55341800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":231:7 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 658 657 659 91 (set (reg:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":231:7 discrim 2 -1
     (nil))
(insn 659 658 660 91 (set (reg:DI 5 di)
        (reg:DI 308)) "mlx_xpm.c":231:7 discrim 2 -1
     (nil))
(call_insn 660 659 661 91 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 661 660 662 92 82 (nil) [1 uses])
(note 662 661 663 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 92 (set (reg/f:DI 181 [ _116 ])
        (const_int 0 [0])) "mlx_xpm.c":231:7 discrim 12 -1
     (nil))
(jump_insn 664 663 665 92 (set (pc)
        (label_ref:DI 787)) "mlx_xpm.c":231:7 997 {jump}
     (nil)
 -> 787)
(barrier 665 664 666)
(code_label 666 665 667 93 78 (nil) [1 uses])
(note 667 666 668 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 93 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])
        (const_int 0 [0])) "mlx_xpm.c":232:7 -1
     (nil))
(jump_insn 669 668 670 93 (set (pc)
        (label_ref 748)) "mlx_xpm.c":233:11 -1
     (nil)
 -> 748)
(barrier 670 669 750)
(code_label 750 670 671 94 89 (nil) [1 uses])
(note 671 750 672 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 672 671 673 94 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])
        (const_int 0 [0])) "mlx_xpm.c":235:11 -1
     (nil))
(insn 673 672 674 94 (set (reg:SI 309)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])) "mlx_xpm.c":236:47 -1
     (nil))
(insn 674 673 675 94 (parallel [
            (set (reg:SI 164 [ _83 ])
                (mult:SI (reg:SI 309)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":236:47 -1
     (nil))
(insn 675 674 676 94 (set (reg:DI 165 [ _84 ])
        (sign_extend:DI (reg:SI 164 [ _83 ]))) "mlx_xpm.c":236:47 -1
     (nil))
(insn 676 675 677 94 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])) "mlx_xpm.c":236:18 -1
     (nil))
(insn 677 676 678 94 (parallel [
            (set (reg/f:DI 166 [ _85 ])
                (plus:DI (reg:DI 165 [ _84 ])
                    (reg/f:DI 310)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":236:18 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])) [2 line+0 S8 A128])
            (reg:DI 165 [ _84 ]))
        (nil)))
(insn 678 677 679 94 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [1 cpp+0 S4 A64])) "mlx_xpm.c":236:18 -1
     (nil))
(insn 679 678 680 94 (set (reg:SI 4 si)
        (reg:SI 311)) "mlx_xpm.c":236:18 -1
     (nil))
(insn 680 679 681 94 (set (reg:DI 5 di)
        (reg/f:DI 166 [ _85 ])) "mlx_xpm.c":236:18 -1
     (nil))
(call_insn 681 680 682 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_get_col_name") [flags 0x3]  <function_decl 0x7fca55037b00 mlx_int_get_col_name>) [0 mlx_int_get_col_name S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":236:18 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 682 681 683 94 (set (reg:SI 312)
        (reg:SI 0 ax)) "mlx_xpm.c":236:18 -1
     (nil))
(insn 683 682 684 94 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [1 col_name+0 S4 A128])
        (reg:SI 312)) "mlx_xpm.c":236:18 -1
     (nil))
(insn 684 683 685 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -244 [0xffffffffffffff0c])) [1 method+0 S4 A32])
            (const_int 0 [0]))) "mlx_xpm.c":237:10 -1
     (nil))
(jump_insn 685 684 686 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 696)
            (pc))) "mlx_xpm.c":237:10 -1
     (nil)
 -> 696)
(note 686 685 687 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 687 686 688 95 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [1 col_name+0 S4 A128])) "mlx_xpm.c":238:28 -1
     (nil))
(insn 688 687 689 95 (set (reg:DI 167 [ _86 ])
        (sign_extend:DI (reg:SI 313))) "mlx_xpm.c":238:28 -1
     (nil))
(insn 689 688 690 95 (parallel [
            (set (reg:DI 168 [ _87 ])
                (ashift:DI (reg:DI 167 [ _86 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":238:28 -1
     (nil))
(insn 690 689 691 95 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":238:28 -1
     (nil))
(insn 691 690 692 95 (parallel [
            (set (reg/f:DI 169 [ _88 ])
                (plus:DI (reg:DI 168 [ _87 ])
                    (reg/f:DI 314)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":238:28 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (reg:DI 168 [ _87 ]))
        (nil)))
(insn 692 691 693 95 (set (reg:SI 315)
        (mem:SI (reg/f:DI 169 [ _88 ]) [1 *_88+0 S4 A32])) "mlx_xpm.c":238:13 -1
     (nil))
(insn 693 692 694 95 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])
        (reg:SI 315)) "mlx_xpm.c":238:13 -1
     (nil))
(jump_insn 694 693 695 95 (set (pc)
        (label_ref 728)) -1
     (nil)
 -> 728)
(barrier 695 694 696)
(code_label 696 695 697 96 84 (nil) [1 uses])
(note 697 696 698 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 96 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -220 [0xffffffffffffff24])) [1 nc+0 S4 A32])) "mlx_xpm.c":241:11 -1
     (nil))
(insn 699 698 700 96 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])
        (reg:SI 316)) "mlx_xpm.c":241:11 -1
     (nil))
(jump_insn 700 699 701 96 (set (pc)
        (label_ref 720)) "mlx_xpm.c":242:15 -1
     (nil)
 -> 720)
(barrier 701 700 725)
(code_label 725 701 702 97 87 (nil) [1 uses])
(note 702 725 703 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 97 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":243:21 -1
     (nil))
(insn 704 703 705 97 (set (reg:DI 170 [ _89 ])
        (sign_extend:DI (reg:SI 317))) "mlx_xpm.c":243:21 -1
     (nil))
(insn 705 704 706 97 (parallel [
            (set (reg:DI 171 [ _90 ])
                (ashift:DI (reg:DI 170 [ _89 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":243:21 -1
     (nil))
(insn 706 705 707 97 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":243:21 -1
     (nil))
(insn 707 706 708 97 (parallel [
            (set (reg/f:DI 172 [ _91 ])
                (plus:DI (reg:DI 171 [ _90 ])
                    (reg/f:DI 318)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":243:21 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (reg:DI 171 [ _90 ]))
        (nil)))
(insn 708 707 709 97 (set (reg:SI 173 [ _92 ])
        (mem:SI (reg/f:DI 172 [ _91 ]) [1 _91->name+0 S4 A32])) "mlx_xpm.c":243:24 -1
     (nil))
(insn 709 708 710 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])) [1 col_name+0 S4 A128])
            (reg:SI 173 [ _92 ]))) "mlx_xpm.c":243:14 -1
     (nil))
(jump_insn 710 709 711 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 720)
            (pc))) "mlx_xpm.c":243:14 -1
     (nil)
 -> 720)
(note 711 710 712 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 713 98 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":245:25 -1
     (nil))
(insn 713 712 714 98 (set (reg:DI 174 [ _93 ])
        (sign_extend:DI (reg:SI 319))) "mlx_xpm.c":245:25 -1
     (nil))
(insn 714 713 715 98 (parallel [
            (set (reg:DI 175 [ _94 ])
                (ashift:DI (reg:DI 174 [ _93 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":245:25 -1
     (nil))
(insn 715 714 716 98 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":245:25 -1
     (nil))
(insn 716 715 717 98 (parallel [
            (set (reg/f:DI 176 [ _95 ])
                (plus:DI (reg:DI 175 [ _94 ])
                    (reg/f:DI 320)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":245:25 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (reg:DI 175 [ _94 ]))
        (nil)))
(insn 717 716 718 98 (set (reg:SI 321)
        (mem:SI (plus:DI (reg/f:DI 176 [ _95 ])
                (const_int 4 [0x4])) [1 _95->col+0 S4 A32])) "mlx_xpm.c":245:17 -1
     (nil))
(insn 718 717 719 98 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])
        (reg:SI 321)) "mlx_xpm.c":245:17 -1
     (nil))
(insn 719 718 720 98 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])
        (const_int 0 [0])) "mlx_xpm.c":246:15 -1
     (nil))
(code_label 720 719 721 99 86 (nil) [2 uses])
(note 721 720 722 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 99 (set (reg:SI 177 [ j.12_96 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])) "mlx_xpm.c":242:17 -1
     (nil))
(insn 723 722 724 99 (parallel [
            (set (reg:SI 322)
                (plus:SI (reg:SI 177 [ j.12_96 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":242:17 -1
     (nil))
(insn 724 723 726 99 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [1 j+0 S4 A64])
        (reg:SI 322)) "mlx_xpm.c":242:17 -1
     (nil))
(insn 726 724 727 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 177 [ j.12_96 ])
            (const_int 0 [0]))) "mlx_xpm.c":242:16 -1
     (nil))
(jump_insn 727 726 728 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 725)
            (pc))) "mlx_xpm.c":242:16 -1
     (nil)
 -> 725)
(code_label 728 727 729 100 85 (nil) [1 uses])
(note 729 728 730 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":256:10 -1
     (nil))
(jump_insn 731 730 732 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) "mlx_xpm.c":256:10 -1
     (nil)
 -> 734)
(note 732 731 733 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 101 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])
        (const_int -16777216 [0xffffffffff000000])) "mlx_xpm.c":257:12 -1
     (nil))
(code_label 734 733 735 102 88 (nil) [1 uses])
(note 735 734 736 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 102 (set (reg:SI 323)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])) "mlx_xpm.c":258:7 -1
     (nil))
(insn 737 736 738 102 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [1 col+0 S4 A64])) "mlx_xpm.c":258:7 -1
     (nil))
(insn 738 737 739 102 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -212 [0xffffffffffffff2c])) [1 opp+0 S4 A32])) "mlx_xpm.c":258:7 -1
     (nil))
(insn 739 738 740 102 (set (reg:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [2 data+0 S8 A128])) "mlx_xpm.c":258:7 -1
     (nil))
(insn 740 739 741 102 (set (reg:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":258:7 -1
     (nil))
(insn 741 740 742 102 (set (reg:SI 36 r8)
        (reg:SI 323)) "mlx_xpm.c":258:7 -1
     (nil))
(insn 742 741 743 102 (set (reg:SI 2 cx)
        (reg:SI 324)) "mlx_xpm.c":258:7 -1
     (nil))
(insn 743 742 744 102 (set (reg:SI 1 dx)
        (reg:SI 325)) "mlx_xpm.c":258:7 -1
     (nil))
(insn 744 743 745 102 (set (reg:DI 4 si)
        (reg:DI 326)) "mlx_xpm.c":258:7 -1
     (nil))
(insn 745 744 746 102 (set (reg:DI 5 di)
        (reg:DI 327)) "mlx_xpm.c":258:7 -1
     (nil))
(call_insn 746 745 747 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_xpm_set_pixel") [flags 0x3]  <function_decl 0x7fca55037f00 mlx_int_xpm_set_pixel>) [0 mlx_int_xpm_set_pixel S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":258:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (nil)))))))
(insn 747 746 748 102 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":259:7 -1
     (nil))
(code_label 748 747 749 103 83 (nil) [1 uses])
(note 749 748 751 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 751 749 752 103 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [1 x+0 S4 A128])) "mlx_xpm.c":233:13 -1
     (nil))
(insn 752 751 753 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 328)
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -228 [0xffffffffffffff1c])) [1 width+0 S4 A32]))) "mlx_xpm.c":233:13 -1
     (nil))
(jump_insn 753 752 754 103 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 750)
            (pc))) "mlx_xpm.c":233:13 -1
     (nil)
 -> 750)
(note 754 753 755 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 755 754 756 104 (set (reg/f:DI 329)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":261:16 -1
     (nil))
(insn 756 755 757 104 (set (reg:SI 178 [ _97 ])
        (mem:SI (plus:DI (reg/f:DI 329)
                (const_int 24 [0x18])) [1 img_204->size_line+0 S4 A64])) "mlx_xpm.c":261:16 -1
     (nil))
(insn 757 756 758 104 (set (reg:DI 179 [ _98 ])
        (sign_extend:DI (reg:SI 178 [ _97 ]))) "mlx_xpm.c":261:16 -1
     (nil))
(insn 758 757 759 104 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -192 [0xffffffffffffff40])) [2 data+0 S8 A128])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -192 [0xffffffffffffff40])) [2 data+0 S8 A128])
                    (reg:DI 179 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":261:10 -1
     (nil))
(code_label 759 758 760 105 77 (nil) [1 uses])
(note 760 759 761 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 761 760 762 105 (set (reg:SI 180 [ i.13_99 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])) "mlx_xpm.c":228:11 -1
     (nil))
(insn 762 761 763 105 (parallel [
            (set (reg:SI 330)
                (plus:SI (reg:SI 180 [ i.13_99 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":228:11 -1
     (nil))
(insn 763 762 765 105 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -236 [0xffffffffffffff14])) [1 i+0 S4 A32])
        (reg:SI 330)) "mlx_xpm.c":228:11 -1
     (nil))
(insn 765 763 766 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ i.13_99 ])
            (const_int 0 [0]))) "mlx_xpm.c":228:10 -1
     (nil))
(jump_insn 766 765 767 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 764)
            (pc))) "mlx_xpm.c":228:10 -1
     (nil)
 -> 764)
(note 767 766 768 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 768 767 769 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":282:6 -1
     (nil))
(jump_insn 769 768 770 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) "mlx_xpm.c":282:6 -1
     (nil)
 -> 774)
(note 770 769 771 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 107 (set (reg:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [22 colors+0 S8 A64])) "mlx_xpm.c":283:5 -1
     (nil))
(insn 772 771 773 107 (set (reg:DI 5 di)
        (reg:DI 331)) "mlx_xpm.c":283:5 -1
     (nil))
(call_insn 773 772 774 107 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":283:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 774 773 775 108 91 (nil) [1 uses])
(note 775 774 776 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])
            (const_int 0 [0]))) "mlx_xpm.c":284:6 -1
     (nil))
(jump_insn 777 776 778 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) "mlx_xpm.c":284:6 -1
     (nil)
 -> 782)
(note 778 777 779 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 779 778 780 109 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [3 colors_direct+0 S8 A128])) "mlx_xpm.c":285:5 -1
     (nil))
(insn 780 779 781 109 (set (reg:DI 5 di)
        (reg:DI 332)) "mlx_xpm.c":285:5 -1
     (nil))
(call_insn 781 780 782 109 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fca5550b600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":285:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 782 781 783 110 92 (nil) [1 uses])
(note 783 782 784 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 787 110 (set (reg/f:DI 181 [ _116 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [7 img+0 S8 A64])) "mlx_xpm.c":286:10 -1
     (nil))
(code_label 787 784 788 112 93 (nil) [7 uses])
(note 788 787 789 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 793 112 (set (reg/f:DI 183 [ <retval> ])
        (reg/f:DI 181 [ _116 ])) "mlx_xpm.c":287:1 -1
     (nil))
(insn 793 789 794 112 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.9477+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "mlx_xpm.c":287:1 -1
     (nil))
(jump_insn 794 793 801 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) "mlx_xpm.c":287:1 -1
     (nil)
 -> 797)
(note 801 794 795 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(call_insn 795 801 796 114 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fca550a5700 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "mlx_xpm.c":287:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 796 795 797)
(code_label 797 796 802 115 94 (nil) [1 uses])
(note 802 797 798 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 798 802 799 115 (set (reg/i:DI 0 ax)
        (reg/f:DI 183 [ <retval> ])) "mlx_xpm.c":287:1 -1
     (nil))
(insn 799 798 0 115 (use (reg/i:DI 0 ax)) "mlx_xpm.c":287:1 -1
     (nil))

;; Function mlx_int_file_get_rid_comment (mlx_int_file_get_rid_comment, funcdef_no=13, decl_uid=9288, cgraph_uid=14, symbol_order=13)

Partition 1: size 4 align 4
	com_end_29
Partition 0: size 4 align 4
	com_begin_25

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
        (reg:DI 5 di [ ptr ])) "mlx_xpm.c":291:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
        (reg:SI 4 si [ size ])) "mlx_xpm.c":291:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 7 4 8 2 (set (pc)
        (label_ref 36)) "mlx_xpm.c":295:9 -1
     (nil)
 -> 36)
(barrier 8 7 47)
(code_label 47 8 9 4 97 (nil) [1 uses])
(note 9 47 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])) "mlx_xpm.c":297:56 -1
     (nil))
(insn 11 10 12 4 (parallel [
            (set (reg:SI 82 [ _1 ])
                (minus:SI (reg:SI 101)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":297:56 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64]))
        (nil)))
(insn 12 11 13 4 (parallel [
            (set (reg:SI 83 [ _2 ])
                (plus:SI (reg:SI 82 [ _1 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":297:15 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])) "mlx_xpm.c":297:44 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 84 [ _3 ])
        (sign_extend:DI (reg:SI 102))) "mlx_xpm.c":297:44 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":297:44 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":297:15 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":297:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 85 [ _4 ]))
        (nil)))
(insn 18 17 19 4 (set (reg:SI 1 dx)
        (reg:SI 83 [ _2 ])) "mlx_xpm.c":297:15 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 104)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fca551032d0 *.LC3>)) "mlx_xpm.c":297:15 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 104)) "mlx_xpm.c":297:15 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fca551032d0 *.LC3>)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "mlx_xpm.c":297:15 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str") [flags 0x41]  <function_decl 0x7fca55037400 mlx_int_str_str>) [0 mlx_int_str_str S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":297:15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 23 22 24 4 (set (reg:SI 105)
        (reg:SI 0 ax)) "mlx_xpm.c":297:15 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])
        (reg:SI 105)) "mlx_xpm.c":297:15 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])) "mlx_xpm.c":298:37 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 87 [ _6 ])
                (plus:SI (reg:SI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":298:37 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 27 26 28 4 (set (reg:DI 88 [ _7 ])
        (sign_extend:DI (reg:SI 87 [ _6 ]))) "mlx_xpm.c":298:5 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])) "mlx_xpm.c":298:5 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 107))) "mlx_xpm.c":298:5 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":298:15 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg:DI 89 [ _8 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":298:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 89 [ _8 ]))
        (nil)))
(insn 32 31 33 4 (set (reg:DI 1 dx)
        (reg:DI 88 [ _7 ])) "mlx_xpm.c":298:5 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "mlx_xpm.c":298:5 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _9 ])) "mlx_xpm.c":298:5 -1
     (nil))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fca554e6800 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":298:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 36 35 37 5 96 (nil) [1 uses])
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])) "mlx_xpm.c":295:23 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":295:23 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 1 dx)
        (reg:SI 109)) "mlx_xpm.c":295:23 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 111)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fca55103360 *.LC4>)) "mlx_xpm.c":295:23 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 4 si)
        (reg:DI 111)) "mlx_xpm.c":295:23 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fca55103360 *.LC4>)
        (nil)))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (reg:DI 110)) "mlx_xpm.c":295:23 -1
     (nil))
(call_insn 44 43 45 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str_cote") [flags 0x41]  <function_decl 0x7fca55037300 mlx_int_str_str_cote>) [0 mlx_int_str_str_cote S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":295:23 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 45 44 46 5 (set (reg:SI 112)
        (reg:SI 0 ax)) "mlx_xpm.c":295:23 -1
     (nil))
(insn 46 45 48 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])
        (reg:SI 112)) "mlx_xpm.c":295:23 -1
     (nil))
(insn 48 46 49 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":295:59 discrim 1 -1
     (nil))
(jump_insn 49 48 50 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "mlx_xpm.c":295:59 discrim 1 -1
     (nil)
 -> 47)
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 51 50 52 6 (set (pc)
        (label_ref 80)) "mlx_xpm.c":300:9 -1
     (nil)
 -> 80)
(barrier 52 51 91)
(code_label 91 52 53 7 99 (nil) [1 uses])
(note 53 91 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])) "mlx_xpm.c":302:56 -1
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:SI 91 [ _10 ])
                (minus:SI (reg:SI 113)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":302:56 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64]))
        (nil)))
(insn 56 55 57 7 (parallel [
            (set (reg:SI 92 [ _11 ])
                (plus:SI (reg:SI 91 [ _10 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":302:15 -1
     (nil))
(insn 57 56 58 7 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])) "mlx_xpm.c":302:44 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 93 [ _12 ])
        (sign_extend:DI (reg:SI 114))) "mlx_xpm.c":302:44 -1
     (nil))
(insn 59 58 60 7 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 93 [ _12 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":302:44 -1
     (nil))
(insn 60 59 61 7 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":302:15 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (reg/f:DI 115)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":302:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 94 [ _13 ]))
        (nil)))
(insn 62 61 63 7 (set (reg:SI 1 dx)
        (reg:SI 92 [ _11 ])) "mlx_xpm.c":302:15 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 116)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fca551033f0 *.LC5>)) "mlx_xpm.c":302:15 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 4 si)
        (reg:DI 116)) "mlx_xpm.c":302:15 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fca551033f0 *.LC5>)
        (nil)))
(insn 65 64 66 7 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _14 ])) "mlx_xpm.c":302:15 -1
     (nil))
(call_insn 66 65 67 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str") [flags 0x41]  <function_decl 0x7fca55037400 mlx_int_str_str>) [0 mlx_int_str_str S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":302:15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 67 66 68 7 (set (reg:SI 117)
        (reg:SI 0 ax)) "mlx_xpm.c":302:15 -1
     (nil))
(insn 68 67 69 7 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])
        (reg:SI 117)) "mlx_xpm.c":302:15 -1
     (nil))
(insn 69 68 70 7 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])) "mlx_xpm.c":303:37 -1
     (nil))
(insn 70 69 71 7 (parallel [
            (set (reg:SI 96 [ _15 ])
                (plus:SI (reg:SI 118)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":303:37 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 com_end+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 71 70 72 7 (set (reg:DI 97 [ _16 ])
        (sign_extend:DI (reg:SI 96 [ _15 ]))) "mlx_xpm.c":303:5 -1
     (nil))
(insn 72 71 73 7 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])) "mlx_xpm.c":303:5 -1
     (nil))
(insn 73 72 74 7 (set (reg:DI 98 [ _17 ])
        (sign_extend:DI (reg:SI 119))) "mlx_xpm.c":303:5 -1
     (nil))
(insn 74 73 75 7 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":303:15 -1
     (nil))
(insn 75 74 76 7 (parallel [
            (set (reg/f:DI 99 [ _18 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (reg/f:DI 120)))
            (clobber (reg:CC 17 flags))
        ]) "mlx_xpm.c":303:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])
            (reg:DI 98 [ _17 ]))
        (nil)))
(insn 76 75 77 7 (set (reg:DI 1 dx)
        (reg:DI 97 [ _16 ])) "mlx_xpm.c":303:5 -1
     (nil))
(insn 77 76 78 7 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "mlx_xpm.c":303:5 -1
     (nil))
(insn 78 77 79 7 (set (reg:DI 5 di)
        (reg/f:DI 99 [ _18 ])) "mlx_xpm.c":303:5 -1
     (nil))
(call_insn 79 78 80 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fca554e6800 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":303:5 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 80 79 81 8 98 (nil) [1 uses])
(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 8 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])) "mlx_xpm.c":300:23 -1
     (nil))
(insn 83 82 84 8 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ptr+0 S8 A64])) "mlx_xpm.c":300:23 -1
     (nil))
(insn 84 83 85 8 (set (reg:SI 1 dx)
        (reg:SI 121)) "mlx_xpm.c":300:23 -1
     (nil))
(insn 85 84 86 8 (set (reg:DI 123)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fca55103480 *.LC6>)) "mlx_xpm.c":300:23 -1
     (nil))
(insn 86 85 87 8 (set (reg:DI 4 si)
        (reg:DI 123)) "mlx_xpm.c":300:23 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fca55103480 *.LC6>)
        (nil)))
(insn 87 86 88 8 (set (reg:DI 5 di)
        (reg:DI 122)) "mlx_xpm.c":300:23 -1
     (nil))
(call_insn 88 87 89 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_str_str_cote") [flags 0x41]  <function_decl 0x7fca55037300 mlx_int_str_str_cote>) [0 mlx_int_str_str_cote S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":300:23 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 89 88 90 8 (set (reg:SI 124)
        (reg:SI 0 ax)) "mlx_xpm.c":300:23 -1
     (nil))
(insn 90 89 92 8 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])
        (reg:SI 124)) "mlx_xpm.c":300:23 -1
     (nil))
(insn 92 90 93 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 com_begin+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":300:59 discrim 1 -1
     (nil))
(jump_insn 93 92 94 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "mlx_xpm.c":300:59 discrim 1 -1
     (nil)
 -> 91)
(note 94 93 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 94 98 9 (clobber (reg/i:SI 0 ax)) "mlx_xpm.c":305:1 -1
     (nil))
(insn 98 97 101 9 (clobber (reg:SI 100 [ <retval> ])) "mlx_xpm.c":305:1 -1
     (nil))
(insn 101 98 96 9 (const_int 0 [0]) "mlx_xpm.c":305:1 -1
     (nil))
(insn 96 101 99 9 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "mlx_xpm.c":305:1 -1
     (nil))
(insn 99 96 0 9 (use (reg/i:SI 0 ax)) "mlx_xpm.c":305:1 -1
     (nil))

;; Function mlx_xpm_file_to_image (mlx_xpm_file_to_image, funcdef_no=14, decl_uid=9302, cgraph_uid=15, symbol_order=14)

Partition 3: size 8 align 8
	img_23
Partition 2: size 8 align 8
	ptr_19
Partition 1: size 4 align 4
	size_17
Partition 0: size 4 align 4
	fd_11

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 103.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [23 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_xpm.c":309:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 file+0 S8 A64])
        (reg:DI 4 si [ file ])) "mlx_xpm.c":309:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 width+0 S8 A64])
        (reg:DI 1 dx [ width ])) "mlx_xpm.c":309:1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 height+0 S8 A64])
        (reg:DI 2 cx [ height ])) "mlx_xpm.c":309:1 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) "mlx_xpm.c":315:6 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 file+0 S8 A64])) "mlx_xpm.c":316:13 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "mlx_xpm.c":316:13 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 89)) "mlx_xpm.c":316:13 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "mlx_xpm.c":316:13 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("open") [flags 0x41]  <function_decl 0x7fca55293200 open>) [0 open S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":316:13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 90)
        (reg:SI 0 ax)) "mlx_xpm.c":316:13 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])
        (reg:SI 90)) "mlx_xpm.c":316:13 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":316:6 discrim 1 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "mlx_xpm.c":316:6 discrim 1 -1
     (nil)
 -> 44)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])) "mlx_xpm.c":316:49 discrim 1 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "mlx_xpm.c":316:49 discrim 1 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (const_int 0 [0])) "mlx_xpm.c":316:49 discrim 1 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 5 di)
        (reg:SI 91)) "mlx_xpm.c":316:49 discrim 1 -1
     (nil))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lseek") [flags 0x41]  <function_decl 0x7fca5523e800 lseek>) [0 lseek S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":316:49 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 4 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "mlx_xpm.c":316:49 discrim 1 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "mlx_xpm.c":316:47 discrim 1 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":316:38 discrim 1 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "mlx_xpm.c":316:38 discrim 1 -1
     (nil)
 -> 44)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 92))) "mlx_xpm.c":317:14 -1
     (nil))
(insn 32 31 33 5 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 37 r9)
        (const_int 0 [0])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 34 33 35 5 (set (reg:SI 36 r8)
        (reg:SI 93)) "mlx_xpm.c":317:14 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 2 cx)
        (const_int 2 [0x2])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg:DI 83 [ _2 ])) "mlx_xpm.c":317:14 -1
     (nil))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (const_int 0 [0])) "mlx_xpm.c":317:14 -1
     (nil))
(call_insn 39 38 40 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7fca55293800 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":317:14 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))
(insn 40 39 41 5 (set (reg:DI 94)
        (reg:DI 0 ax)) "mlx_xpm.c":317:14 -1
     (nil))
(insn 41 40 42 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ptr+0 S8 A64])
        (reg:DI 94)) "mlx_xpm.c":317:14 -1
     (nil))
(insn 42 41 43 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 ptr+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) "mlx_xpm.c":316:75 discrim 2 -1
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "mlx_xpm.c":316:75 discrim 2 -1
     (nil)
 -> 59)
(code_label 44 43 45 6 101 (nil) [2 uses])
(note 45 44 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 45 49 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])
            (const_int 0 [0]))) "mlx_xpm.c":320:8 -1
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "mlx_xpm.c":320:8 -1
     (nil)
 -> 54)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])) "mlx_xpm.c":321:7 -1
     (nil))
(insn 52 51 53 7 (set (reg:SI 5 di)
        (reg:SI 95)) "mlx_xpm.c":321:7 -1
     (nil))
(call_insn 53 52 54 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7fca5523e900 close>) [0 close S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":321:7 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 54 53 55 8 103 (nil) [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 87 [ _6 ])
        (const_int 0 [0])) "mlx_xpm.c":322:12 -1
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (label_ref 100)) "mlx_xpm.c":322:12 -1
     (nil)
 -> 100)
(barrier 58 57 59)
(code_label 59 58 60 9 102 (nil) [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])) "mlx_xpm.c":324:3 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ptr+0 S8 A64])) "mlx_xpm.c":324:3 -1
     (nil))
(insn 63 62 64 9 (set (reg:SI 4 si)
        (reg:SI 96)) "mlx_xpm.c":324:3 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 5 di)
        (reg:DI 97)) "mlx_xpm.c":324:3 -1
     (nil))
(call_insn 65 64 66 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_file_get_rid_comment") [flags 0x3]  <function_decl 0x7fca55045a00 mlx_int_file_get_rid_comment>) [0 mlx_int_file_get_rid_comment S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":324:3 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 66 65 67 9 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])) "mlx_xpm.c":325:13 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ptr+0 S8 A64])) "mlx_xpm.c":325:13 -1
     (nil))
(insn 68 67 69 9 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":325:13 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 101)
        (symbol_ref:DI ("mlx_int_get_line") [flags 0x3]  <function_decl 0x7fca55037500 mlx_int_get_line>)) "mlx_xpm.c":325:13 -1
     (nil))
(insn 70 69 71 9 (set (reg:DI 2 cx)
        (reg:DI 101)) "mlx_xpm.c":325:13 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("mlx_int_get_line") [flags 0x3]  <function_decl 0x7fca55037500 mlx_int_get_line>)
        (nil)))
(insn 71 70 72 9 (set (reg:SI 1 dx)
        (reg:SI 98)) "mlx_xpm.c":325:13 -1
     (nil))
(insn 72 71 73 9 (set (reg:DI 4 si)
        (reg:DI 99)) "mlx_xpm.c":325:13 -1
     (nil))
(insn 73 72 74 9 (set (reg:DI 5 di)
        (reg:DI 100)) "mlx_xpm.c":325:13 -1
     (nil))
(call_insn 74 73 75 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_parse_xpm") [flags 0x3]  <function_decl 0x7fca55045100 mlx_int_parse_xpm>) [0 mlx_int_parse_xpm S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":325:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 75 74 76 9 (set (reg:DI 102)
        (reg:DI 0 ax)) "mlx_xpm.c":325:13 -1
     (nil))
(insn 76 75 77 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])
        (reg:DI 102)) "mlx_xpm.c":325:13 -1
     (nil))
(insn 77 76 78 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":325:6 discrim 1 -1
     (nil))
(jump_insn 78 77 79 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "mlx_xpm.c":325:6 discrim 1 -1
     (nil)
 -> 88)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":327:17 -1
     (nil))
(insn 81 80 82 10 (set (reg:SI 84 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 103)
                (const_int 32 [0x20])) [1 img_23->width+0 S4 A64])) "mlx_xpm.c":327:17 -1
     (nil))
(insn 82 81 83 10 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 width+0 S8 A64])) "mlx_xpm.c":327:12 -1
     (nil))
(insn 83 82 84 10 (set (mem:SI (reg/f:DI 104) [1 *width_24(D)+0 S4 A32])
        (reg:SI 84 [ _3 ])) "mlx_xpm.c":327:12 -1
     (nil))
(insn 84 83 85 10 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":328:18 -1
     (nil))
(insn 85 84 86 10 (set (reg:SI 85 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 36 [0x24])) [1 img_23->height+0 S4 A32])) "mlx_xpm.c":328:18 -1
     (nil))
(insn 86 85 87 10 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 height+0 S8 A64])) "mlx_xpm.c":328:13 -1
     (nil))
(insn 87 86 88 10 (set (mem:SI (reg/f:DI 106) [1 *height_26(D)+0 S4 A32])
        (reg:SI 85 [ _4 ])) "mlx_xpm.c":328:13 -1
     (nil))
(code_label 88 87 89 11 105 (nil) [1 uses])
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 size+0 S4 A32])) "mlx_xpm.c":330:3 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 107))) "mlx_xpm.c":330:3 -1
     (nil))
(insn 92 91 93 11 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ptr+0 S8 A64])) "mlx_xpm.c":330:3 -1
     (nil))
(insn 93 92 94 11 (set (reg:DI 4 si)
        (reg:DI 86 [ _5 ])) "mlx_xpm.c":330:3 -1
     (nil))
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg:DI 108)) "mlx_xpm.c":330:3 -1
     (nil))
(call_insn 95 94 96 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7fca55293900 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":330:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 96 95 97 11 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fd+0 S4 A64])) "mlx_xpm.c":331:3 -1
     (nil))
(insn 97 96 98 11 (set (reg:SI 5 di)
        (reg:SI 109)) "mlx_xpm.c":331:3 -1
     (nil))
(call_insn 98 97 99 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7fca5523e900 close>) [0 close S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":331:3 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 99 98 100 11 (set (reg/f:DI 87 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":332:10 -1
     (nil))
(code_label 100 99 101 12 104 (nil) [1 uses])
(note 101 100 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 106 12 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _6 ])) "mlx_xpm.c":333:1 -1
     (nil))
(insn 106 102 107 12 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "mlx_xpm.c":333:1 -1
     (nil))
(insn 107 106 0 12 (use (reg/i:DI 0 ax)) "mlx_xpm.c":333:1 -1
     (nil))

;; Function mlx_xpm_to_image (mlx_xpm_to_image, funcdef_no=15, decl_uid=9312, cgraph_uid=16, symbol_order=15)

Partition 0: size 8 align 8
	img_8

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 36.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_xpm.c":336:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 xpm_data+0 S8 A64])
        (reg:DI 4 si [ xpm_data ])) "mlx_xpm.c":336:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 width+0 S8 A64])
        (reg:DI 1 dx [ width ])) "mlx_xpm.c":336:1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 height+0 S8 A64])
        (reg:DI 2 cx [ height ])) "mlx_xpm.c":336:1 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 xpm_data+0 S8 A64])) "mlx_xpm.c":339:13 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 xvar+0 S8 A64])) "mlx_xpm.c":339:13 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 88)
        (symbol_ref:DI ("mlx_int_static_line") [flags 0x3]  <function_decl 0x7fca55037900 mlx_int_static_line>)) "mlx_xpm.c":339:13 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg:DI 88)) "mlx_xpm.c":339:13 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("mlx_int_static_line") [flags 0x3]  <function_decl 0x7fca55037900 mlx_int_static_line>)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "mlx_xpm.c":339:13 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 86)) "mlx_xpm.c":339:13 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 87)) "mlx_xpm.c":339:13 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mlx_int_parse_xpm") [flags 0x3]  <function_decl 0x7fca55045100 mlx_int_parse_xpm>) [0 mlx_int_parse_xpm S1 A8])
            (const_int 0 [0]))) "mlx_xpm.c":339:13 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 17 16 18 2 (set (reg:DI 89)
        (reg:DI 0 ax)) "mlx_xpm.c":339:13 -1
     (nil))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])
        (reg:DI 89)) "mlx_xpm.c":339:13 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])
            (const_int 0 [0]))) "mlx_xpm.c":339:6 discrim 1 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "mlx_xpm.c":339:6 discrim 1 -1
     (nil)
 -> 30)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":341:17 -1
     (nil))
(insn 23 22 24 4 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 90)
                (const_int 32 [0x20])) [1 img_8->width+0 S4 A64])) "mlx_xpm.c":341:17 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 width+0 S8 A64])) "mlx_xpm.c":341:12 -1
     (nil))
(insn 25 24 26 4 (set (mem:SI (reg/f:DI 91) [1 *width_9(D)+0 S4 A32])
        (reg:SI 82 [ _1 ])) "mlx_xpm.c":341:12 -1
     (nil))
(insn 26 25 27 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":342:18 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 83 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 92)
                (const_int 36 [0x24])) [1 img_8->height+0 S4 A32])) "mlx_xpm.c":342:18 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 height+0 S8 A64])) "mlx_xpm.c":342:13 -1
     (nil))
(insn 29 28 30 4 (set (mem:SI (reg/f:DI 93) [1 *height_11(D)+0 S4 A32])
        (reg:SI 83 [ _2 ])) "mlx_xpm.c":342:13 -1
     (nil))
(code_label 30 29 31 5 107 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 35 5 (set (reg/f:DI 84 [ _13 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 img+0 S8 A64])) "mlx_xpm.c":344:10 -1
     (nil))
(insn 35 32 39 5 (set (reg/f:DI 85 [ <retval> ])
        (reg/f:DI 84 [ _13 ])) "mlx_xpm.c":344:10 discrim 1 -1
     (nil))
(insn 39 35 40 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 85 [ <retval> ])) "mlx_xpm.c":345:1 -1
     (nil))
(insn 40 39 0 5 (use (reg/i:DI 0 ax)) "mlx_xpm.c":345:1 -1
     (nil))
