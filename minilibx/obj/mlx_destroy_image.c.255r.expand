
;; Function mlx_destroy_image (mlx_destroy_image, funcdef_no=6, decl_uid=9185, cgraph_uid=7, symbol_order=6)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])
        (reg:DI 5 di [ xvar ])) "mlx_destroy_image.c":16:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])
        (reg:DI 4 si [ img ])) "mlx_destroy_image.c":16:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":17:10 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 40 [0x28])) [7 img_20(D)->type+0 S4 A64])) "mlx_destroy_image.c":17:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 3 [0x3]))) "mlx_destroy_image.c":17:6 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "mlx_destroy_image.c":17:6 -1
     (nil)
 -> 16)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":18:10 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 83 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 40 [0x28])) [7 img_20(D)->type+0 S4 A64])) "mlx_destroy_image.c":18:10 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 2 [0x2]))) "mlx_destroy_image.c":17:40 discrim 1 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "mlx_destroy_image.c":17:40 discrim 1 -1
     (nil)
 -> 29)
(code_label 16 15 17 5 2 (nil) [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":20:7 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "mlx_destroy_image.c":20:7 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 20 19 21 5 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_destroy_image.c":20:7 -1
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 101) [11 xvar_21(D)->display+0 S8 A64])) "mlx_destroy_image.c":20:7 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg/f:DI 84 [ _3 ])) "mlx_destroy_image.c":20:7 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "mlx_destroy_image.c":20:7 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XShmDetach") [flags 0x41]  <function_decl 0x7feed3edf500 XShmDetach>) [0 XShmDetach S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":20:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 25 24 26 5 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":21:21 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 72 [0x48])) [8 img_20(D)->shm.shmaddr+0 S8 A64])) "mlx_destroy_image.c":21:21 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg/f:DI 86 [ _5 ])) "mlx_destroy_image.c":21:7 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shmdt") [flags 0x41]  <function_decl 0x7feed3ed4f00 shmdt>) [0 shmdt S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":21:7 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 29 28 30 6 3 (nil) [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":24:3 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/f:DI 103) [4 img_20(D)->image+0 S8 A64])) "mlx_destroy_image.c":24:3 -1
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _6 ])
                (const_int 96 [0x60])) [19 _6->f.destroy_image+0 S8 A64])) "mlx_destroy_image.c":24:3 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":24:3 -1
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (reg/f:DI 104) [4 img_20(D)->image+0 S8 A64])) "mlx_destroy_image.c":24:3 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _8 ])) "mlx_destroy_image.c":24:3 -1
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 88 [ _7 ]) [0 *_7 S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":24:3 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":25:3 -1
     (nil))
(insn 39 38 40 6 (set (reg:DI 90 [ _9 ])
        (mem:DI (plus:DI (reg/f:DI 105)
                (const_int 8 [0x8])) [5 img_20(D)->pix+0 S8 A64])) "mlx_destroy_image.c":25:3 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_destroy_image.c":25:3 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (reg/f:DI 106) [11 xvar_21(D)->display+0 S8 A64])) "mlx_destroy_image.c":25:3 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 4 si)
        (reg:DI 90 [ _9 ])) "mlx_destroy_image.c":25:3 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _10 ])) "mlx_destroy_image.c":25:3 -1
     (nil))
(call_insn 44 43 45 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreePixmap") [flags 0x41]  <function_decl 0x7feed426d800 XFreePixmap>) [0 XFreePixmap S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":25:3 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 44 46 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":26:10 -1
     (nil))
(insn 46 45 47 6 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 107)
                (const_int 16 [0x10])) [6 img_20(D)->gc+0 S8 A64])) "mlx_destroy_image.c":26:10 -1
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ _11 ])
            (const_int 0 [0]))) "mlx_destroy_image.c":26:6 -1
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "mlx_destroy_image.c":26:6 -1
     (nil)
 -> 57)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":27:5 -1
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 108)
                (const_int 16 [0x10])) [6 img_20(D)->gc+0 S8 A64])) "mlx_destroy_image.c":27:5 -1
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_destroy_image.c":27:5 -1
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 94 [ _13 ])
        (mem/f:DI (reg/f:DI 109) [11 xvar_21(D)->display+0 S8 A64])) "mlx_destroy_image.c":27:5 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 4 si)
        (reg/f:DI 93 [ _12 ])) "mlx_destroy_image.c":27:5 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _13 ])) "mlx_destroy_image.c":27:5 -1
     (nil))
(call_insn 56 55 57 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFreeGC") [flags 0x41]  <function_decl 0x7feed426d600 XFreeGC>) [0 XFreeGC S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":27:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 57 56 58 8 4 (nil) [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 img+0 S8 A64])) "mlx_destroy_image.c":28:3 -1
     (nil))
(insn 60 59 61 8 (set (reg:DI 5 di)
        (reg:DI 110)) "mlx_destroy_image.c":28:3 -1
     (nil))
(call_insn 61 60 62 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7feed4437600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "mlx_destroy_image.c":28:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 62 61 63 8 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_destroy_image.c":29:11 -1
     (nil))
(insn 63 62 64 8 (set (reg:SI 95 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 111)
                (const_int 80 [0x50])) [7 xvar_21(D)->do_flush+0 S4 A64])) "mlx_destroy_image.c":29:11 -1
     (nil))
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _14 ])
            (const_int 0 [0]))) "mlx_destroy_image.c":29:6 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "mlx_destroy_image.c":29:6 -1
     (nil)
 -> 71)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 xvar+0 S8 A64])) "mlx_destroy_image.c":30:5 -1
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 112) [11 xvar_21(D)->display+0 S8 A64])) "mlx_destroy_image.c":30:5 -1
     (nil))
(insn 69 68 70 9 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _15 ])) "mlx_destroy_image.c":30:5 -1
     (nil))
(call_insn 70 69 71 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("XFlush") [flags 0x41]  <function_decl 0x7feed4267b00 XFlush>) [0 XFlush S1 A8])
            (const_int 0 [0]))) "mlx_destroy_image.c":30:5 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 71 70 72 10 5 (nil) [1 uses])
(note 72 71 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 72 76 10 (clobber (reg/i:SI 0 ax)) "mlx_destroy_image.c":31:1 -1
     (nil))
(insn 76 75 79 10 (clobber (reg:SI 97 [ <retval> ])) "mlx_destroy_image.c":31:1 -1
     (nil))
(insn 79 76 74 10 (const_int 0 [0]) "mlx_destroy_image.c":31:1 -1
     (nil))
(insn 74 79 77 10 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) "mlx_destroy_image.c":31:1 -1
     (nil))
(insn 77 74 0 10 (use (reg/i:SI 0 ax)) "mlx_destroy_image.c":31:1 -1
     (nil))
