
;; Function floor_ceil_part (floor_ceil_part, funcdef_no=6, decl_uid=8771, cgraph_uid=7, symbol_order=6)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 95.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 game+0 S8 A64])
        (reg:DI 5 di [ game ])) "srcs/floor_ceil_part.c":16:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "srcs/floor_ceil_part.c":16:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":17:10 -1
     (nil))
(insn 8 7 9 2 (set (reg:QI 82 [ _1 ])
        (mem:QI (reg/f:DI 101) [0 *line_23(D)+0 S1 A8])) "srcs/floor_ceil_part.c":17:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":17:5 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "srcs/floor_ceil_part.c":17:5 -1
     (nil)
 -> 49)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":17:21 discrim 1 -1
     (nil))
(insn 13 12 14 4 (set (reg:QI 83 [ _2 ])
        (mem:QI (reg/f:DI 102) [0 *line_23(D)+0 S1 A8])) "srcs/floor_ceil_part.c":17:21 discrim 1 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _2 ])
            (const_int 70 [0x46]))) "srcs/floor_ceil_part.c":17:14 discrim 1 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "srcs/floor_ceil_part.c":17:14 discrim 1 -1
     (nil)
 -> 49)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":18:6 -1
     (nil))
(insn 18 17 19 5 (set (reg:QI 84 [ _3 ])
        (mem:QI (reg/f:DI 103) [0 *line_23(D)+0 S1 A8])) "srcs/floor_ceil_part.c":18:6 -1
     (nil))
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _3 ])
            (const_int 67 [0x43]))) "srcs/floor_ceil_part.c":17:32 discrim 2 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "srcs/floor_ceil_part.c":17:32 discrim 2 -1
     (nil)
 -> 49)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":18:24 -1
     (nil))
(insn 23 22 24 6 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":18:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 24 23 25 6 (set (reg:QI 86 [ _5 ])
        (mem:QI (reg/f:DI 85 [ _4 ]) [0 *_4+0 S1 A8])) "srcs/floor_ceil_part.c":18:24 -1
     (nil))
(insn 25 24 26 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _5 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":18:17 -1
     (nil))
(jump_insn 26 25 27 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "srcs/floor_ceil_part.c":18:17 -1
     (nil)
 -> 49)
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":18:35 discrim 1 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":18:35 discrim 1 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 30 29 31 7 (set (reg:QI 88 [ _7 ])
        (mem:QI (reg/f:DI 87 [ _6 ]) [0 *_6+0 S1 A8])) "srcs/floor_ceil_part.c":18:35 discrim 1 -1
     (nil))
(insn 31 30 32 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _7 ])
            (const_int 32 [0x20]))) "srcs/floor_ceil_part.c":18:28 discrim 1 -1
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "srcs/floor_ceil_part.c":18:28 discrim 1 -1
     (nil)
 -> 49)
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":20:16 -1
     (nil))
(insn 35 34 36 8 (set (reg:QI 89 [ _8 ])
        (mem:QI (reg/f:DI 106) [0 *line_23(D)+0 S1 A8])) "srcs/floor_ceil_part.c":20:16 -1
     (nil))
(insn 36 35 37 8 (set (reg:SI 90 [ _9 ])
        (sign_extend:SI (reg:QI 89 [ _8 ]))) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(insn 37 36 38 8 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":20:7 -1
     (nil))
(insn 38 37 39 8 (set (reg:QI 91 [ _10 ])
        (mem:QI (reg/f:DI 107) [0 *line_23(D)+0 S1 A8])) "srcs/floor_ceil_part.c":20:7 -1
     (nil))
(insn 39 38 40 8 (set (reg:SI 92 [ _11 ])
        (sign_extend:SI (reg:QI 91 [ _10 ]))) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(insn 40 39 41 8 (set (reg:SI 1 dx)
        (reg:SI 90 [ _9 ])) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(insn 41 40 42 8 (set (reg:SI 4 si)
        (reg:SI 92 [ _11 ])) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f98a535bcf0 *.LC0>)) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg:DI 108)) "srcs/floor_ceil_part.c":19:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f98a535bcf0 *.LC0>)
        (nil)))
(insn 44 43 45 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "srcs/floor_ceil_part.c":19:11 -1
     (nil))
(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f98a57b6a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":19:11 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 46 45 47 8 (set (reg:SI 99 [ _18 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":20:20 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (label_ref 92)) "srcs/floor_ceil_part.c":20:20 -1
     (nil)
 -> 92)
(barrier 48 47 49)
(code_label 49 48 50 9 2 (nil) [5 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":21:10 -1
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 109)
                (const_int 24 [0x18])) [6 game_26(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":21:10 -1
     (nil))
(insn 53 52 54 9 (set (reg/f:DI 94 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ _12 ])
                (const_int 80 [0x50])) [12 _12->ceil+0 S8 A64])) "srcs/floor_ceil_part.c":21:15 -1
     (nil))
(insn 54 53 55 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ _13 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":21:5 -1
     (nil))
(jump_insn 55 54 56 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "srcs/floor_ceil_part.c":21:5 -1
     (nil)
 -> 69)
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 4 si)
        (reg:DI 110)) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 5 di)
        (reg:DI 111)) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil))
(call_insn 61 60 62 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_ceil") [flags 0x3]  <function_decl 0x7f98a5337800 check_ceil>) [0 check_ceil S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 10 (set (reg:SI 95 [ _14 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":21:33 discrim 1 -1
     (nil))
(insn 63 62 64 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _14 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":21:30 discrim 1 -1
     (nil))
(jump_insn 64 63 65 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "srcs/floor_ceil_part.c":21:30 discrim 1 -1
     (nil)
 -> 69)
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:SI 99 [ _18 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":22:10 -1
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (label_ref 92)) "srcs/floor_ceil_part.c":22:10 -1
     (nil)
 -> 92)
(barrier 68 67 69)
(code_label 69 68 70 12 4 (nil) [2 uses])
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":23:15 -1
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 112)
                (const_int 24 [0x18])) [6 game_26(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":23:15 -1
     (nil))
(insn 73 72 74 12 (set (reg/f:DI 97 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ _15 ])
                (const_int 72 [0x48])) [12 _15->floor+0 S8 A64])) "srcs/floor_ceil_part.c":23:20 -1
     (nil))
(insn 74 73 75 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ _16 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":23:10 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "srcs/floor_ceil_part.c":23:10 -1
     (nil)
 -> 89)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil))
(insn 78 77 79 13 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil))
(insn 79 78 80 13 (set (reg:DI 4 si)
        (reg:DI 113)) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil))
(insn 80 79 81 13 (set (reg:DI 5 di)
        (reg:DI 114)) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil))
(call_insn 81 80 82 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_floor") [flags 0x3]  <function_decl 0x7f98a5337a00 check_floor>) [0 check_floor S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 82 81 83 13 (set (reg:SI 98 [ _17 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":23:39 discrim 1 -1
     (nil))
(insn 83 82 84 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _17 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":23:36 discrim 1 -1
     (nil))
(jump_insn 84 83 85 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "srcs/floor_ceil_part.c":23:36 discrim 1 -1
     (nil)
 -> 89)
(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 14 (set (reg:SI 99 [ _18 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":24:10 -1
     (nil))
(jump_insn 87 86 88 14 (set (pc)
        (label_ref 92)) "srcs/floor_ceil_part.c":24:10 -1
     (nil)
 -> 92)
(barrier 88 87 89)
(code_label 89 88 90 15 5 (nil) [2 uses])
(note 90 89 91 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 15 (set (reg:SI 99 [ _18 ])
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":25:9 -1
     (nil))
(code_label 92 91 93 16 3 (nil) [3 uses])
(note 93 92 94 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 98 16 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _18 ])) "srcs/floor_ceil_part.c":26:1 -1
     (nil))
(insn 98 94 99 16 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "srcs/floor_ceil_part.c":26:1 -1
     (nil))
(insn 99 98 0 16 (use (reg/i:SI 0 ax)) "srcs/floor_ceil_part.c":26:1 -1
     (nil))

;; Function check_floor (check_floor, funcdef_no=7, decl_uid=8765, cgraph_uid=8, symbol_order=7)

Partition 0: size 8 align 8
	color

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 28 from 11 to 12.
Redirecting jump 59 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 69.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 game+0 S8 A64])
        (reg:DI 5 di [ game ])) "srcs/floor_ceil_part.c":29:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "srcs/floor_ceil_part.c":29:1 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.8966+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":29:1 -1
     (nil))
(insn 8 5 9 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":32:33 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 94)) "srcs/floor_ceil_part.c":32:33 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strlen") [flags 0x41]  <function_decl 0x7f98a52b3500 ft_strlen>) [0 ft_strlen S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":32:33 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":32:33 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 83 [ _2 ])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (reg:SI 83 [ _2 ])) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 95)) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strdup_len") [flags 0x41]  <function_decl 0x7f98a52b7900 ft_strdup_len>) [0 ft_strdup_len S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 84 [ _3 ])
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":32:10 discrim 1 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 color+0 S8 A64])
        (reg/f:DI 84 [ _3 ])) "srcs/floor_ceil_part.c":32:8 discrim 2 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 85 [ color.0_4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 color+0 S8 A64])) "srcs/floor_ceil_part.c":33:6 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ color.0_4 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":33:5 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "srcs/floor_ceil_part.c":33:5 -1
     (nil)
 -> 30)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f98a5378750 *.LC1>)) "srcs/floor_ceil_part.c":34:11 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 96)) "srcs/floor_ceil_part.c":34:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f98a5378750 *.LC1>)
        (nil)))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":34:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":34:43 discrim 1 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref:DI 66)) "srcs/floor_ceil_part.c":34:43 997 {jump}
     (nil)
 -> 66)
(barrier 29 28 30)
(code_label 30 29 31 5 7 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":35:10 -1
     (nil))
(insn 33 32 34 5 (set (reg:QI 86 [ _5 ])
        (mem:QI (reg/f:DI 97) [0 *line_15(D)+0 S1 A8])) "srcs/floor_ceil_part.c":35:10 -1
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _5 ])
            (const_int 70 [0x46]))) "srcs/floor_ceil_part.c":35:5 -1
     (nil))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":35:5 -1
     (nil)
 -> 61)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":35:28 discrim 1 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":35:28 discrim 1 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 39 38 40 6 (set (reg:QI 88 [ _7 ])
        (mem:QI (reg/f:DI 87 [ _6 ]) [0 *_6+0 S1 A8])) "srcs/floor_ceil_part.c":35:28 discrim 1 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _7 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":35:21 discrim 1 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":35:21 discrim 1 -1
     (nil)
 -> 61)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":35:39 discrim 2 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":35:39 discrim 2 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 45 44 46 7 (set (reg:QI 90 [ _9 ])
        (mem:QI (reg/f:DI 89 [ _8 ]) [0 *_8+0 S1 A8])) "srcs/floor_ceil_part.c":35:39 discrim 2 -1
     (nil))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _9 ])
            (const_int 32 [0x20]))) "srcs/floor_ceil_part.c":35:32 discrim 2 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":35:32 discrim 2 -1
     (nil)
 -> 61)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":37:7 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":37:7 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 4 si)
        (reg:DI 100)) "srcs/floor_ceil_part.c":37:7 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg:DI 101)) "srcs/floor_ceil_part.c":37:7 -1
     (nil))
(call_insn 53 52 54 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_floor_content") [flags 0x3]  <function_decl 0x7f98a5337b00 check_floor_content>) [0 check_floor_content S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":37:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 53 55 8 (set (reg:SI 91 [ _10 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":37:7 -1
     (nil))
(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _10 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":37:6 discrim 1 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":37:6 discrim 1 -1
     (nil)
 -> 61)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg:SI 92 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":38:11 -1
     (nil))
(jump_insn 59 58 60 9 (set (pc)
        (label_ref:DI 66)) "srcs/floor_ceil_part.c":38:11 997 {jump}
     (nil)
 -> 66)
(barrier 60 59 61)
(code_label 61 60 62 10 9 (nil) [4 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 66 10 (set (reg:SI 92 [ _11 ])
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":40:9 -1
     (nil))
(code_label 66 63 67 12 10 (nil) [2 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 12 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _11 ])) "srcs/floor_ceil_part.c":41:1 -1
     (nil))
(insn 72 68 73 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.8966+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "srcs/floor_ceil_part.c":41:1 -1
     (nil))
(jump_insn 73 72 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "srcs/floor_ceil_part.c":41:1 -1
     (nil)
 -> 76)
(note 80 73 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 80 75 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f98a536fc00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":41:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 75 74 76)
(code_label 76 75 81 15 11 (nil) [1 uses])
(note 81 76 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 81 78 15 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) "srcs/floor_ceil_part.c":41:1 -1
     (nil))
(insn 78 77 0 15 (use (reg/i:SI 0 ax)) "srcs/floor_ceil_part.c":41:1 -1
     (nil))

;; Function check_floor_content (check_floor_content, funcdef_no=8, decl_uid=8768, cgraph_uid=9, symbol_order=8)

Partition 2: size 8 align 8
	tab_tmp_55
Partition 1: size 8 align 8
	str_tmp_53
Partition 0: size 4 align 4
	rgb_45

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 174.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])
        (reg:DI 5 di [ game ])) "srcs/floor_ceil_part.c":44:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])
        (reg:DI 4 si [ color ])) "srcs/floor_ceil_part.c":44:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":49:6 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 128) [2 *color_51(D)+0 S8 A64])) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 129)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f98a5378f30 *.LC2>)) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 129)) "srcs/floor_ceil_part.c":50:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f98a5378f30 *.LC2>)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strtrim") [flags 0x41]  <function_decl 0x7f98a52b9200 ft_strtrim>) [0 ft_strtrim S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":50:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 130)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])
        (reg:DI 130)) "srcs/floor_ceil_part.c":50:12 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":51:12 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (const_int 44 [0x2c])) "srcs/floor_ceil_part.c":51:12 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 131)) "srcs/floor_ceil_part.c":51:12 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_split") [flags 0x41]  <function_decl 0x7f98a52b3b00 ft_split>) [0 ft_split S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":51:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 132)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":51:12 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
        (reg:DI 132)) "srcs/floor_ceil_part.c":51:12 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":52:10 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":52:10 -1
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 83 [ _2 ])
                (const_int 72 [0x48])) [12 _2->floor+0 S8 A64])) "srcs/floor_ceil_part.c":52:15 -1
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _3 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":52:5 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "srcs/floor_ceil_part.c":52:5 -1
     (nil)
 -> 39)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":54:7 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 134)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":54:7 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 40 [0x28])) [2 _4->wall_no+0 S8 A64])) "srcs/floor_ceil_part.c":53:11 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (reg/f:DI 86 [ _5 ])) "srcs/floor_ceil_part.c":53:11 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 135)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f98a5381000 *.LC3>)) "srcs/floor_ceil_part.c":53:11 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 135)) "srcs/floor_ceil_part.c":53:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f98a5381000 *.LC3>)
        (nil)))
(insn 34 33 35 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "srcs/floor_ceil_part.c":53:11 -1
     (nil))
(call_insn 35 34 36 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f98a57b6a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":53:11 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 36 35 37 4 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":54:22 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":54:22 -1
     (nil)
 -> 171)
(barrier 38 37 39)
(code_label 39 38 40 5 13 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":55:2 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg:DI 136)) "srcs/floor_ceil_part.c":55:2 -1
     (nil))
(call_insn 43 42 44 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":55:2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 5 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":56:6 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 137)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":56:6 -1
     (nil))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (const_int 12 [0xc])) "srcs/floor_ceil_part.c":56:21 -1
     (nil))
(call_insn 47 46 48 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f98a57d7200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":56:21 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 5 (set (reg/f:DI 138)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":56:21 -1
     (expr_list:REG_NOALIAS (reg/f:DI 138)
        (nil)))
(insn 49 48 50 5 (set (reg/f:DI 88 [ _7 ])
        (reg/f:DI 138)) "srcs/floor_ceil_part.c":56:21 -1
     (nil))
(insn 50 49 51 5 (set (mem/f:DI (plus:DI (reg/f:DI 87 [ _6 ])
                (const_int 72 [0x48])) [12 _6->floor+0 S8 A64])
        (reg/f:DI 88 [ _7 ])) "srcs/floor_ceil_part.c":56:19 discrim 1 -1
     (nil))
(insn 51 50 52 5 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":57:6 -1
     (nil))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg:DI 139)) "srcs/floor_ceil_part.c":57:6 -1
     (nil))
(call_insn 53 52 54 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tab_len") [flags 0x41]  <function_decl 0x7f98a533ad00 tab_len>) [0 tab_len S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":57:6 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 5 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":57:6 -1
     (nil))
(insn 55 54 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 3 [0x3]))) "srcs/floor_ceil_part.c":57:5 discrim 1 -1
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "srcs/floor_ceil_part.c":57:5 discrim 1 -1
     (nil)
 -> 64)
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:DI 140)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f98a5381090 *.LC4>)) "srcs/floor_ceil_part.c":58:11 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg:DI 140)) "srcs/floor_ceil_part.c":58:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f98a5381090 *.LC4>)
        (nil)))
(call_insn 60 59 61 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":58:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 6 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":58:42 discrim 1 -1
     (nil))
(jump_insn 62 61 63 6 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":58:42 -1
     (nil)
 -> 171)
(barrier 63 62 64)
(code_label 64 63 65 7 15 (nil) [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 66 65 67 7 (set (pc)
        (label_ref 150)) "srcs/floor_ceil_part.c":59:8 -1
     (nil)
 -> 150)
(barrier 67 66 159)
(code_label 159 67 68 8 19 (nil) [1 uses])
(note 68 159 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":61:24 -1
     (nil))
(insn 70 69 71 8 (set (reg:DI 90 [ _9 ])
        (sign_extend:DI (reg:SI 141))) "srcs/floor_ceil_part.c":61:24 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 91 [ _10 ])
                (ashift:DI (reg:DI 90 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":61:24 -1
     (nil))
(insn 72 71 73 8 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":61:24 -1
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg/f:DI 92 [ _11 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":61:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 91 [ _10 ]))
        (nil)))
(insn 74 73 75 8 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (reg/f:DI 92 [ _11 ]) [2 *_11+0 S8 A64])) "srcs/floor_ceil_part.c":61:7 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "srcs/floor_ceil_part.c":61:7 -1
     (nil))
(call_insn 76 75 77 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_nbr") [flags 0x41]  <function_decl 0x7f98a533aa00 check_nbr>) [0 check_nbr S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":61:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 8 (set (reg:SI 94 [ _13 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":61:7 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _13 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":61:6 discrim 1 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "srcs/floor_ceil_part.c":61:6 discrim 1 -1
     (nil)
 -> 87)
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg:DI 143)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f98a5381120 *.LC5>)) "srcs/floor_ceil_part.c":62:12 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg:DI 143)) "srcs/floor_ceil_part.c":62:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f98a5381120 *.LC5>)
        (nil)))
(call_insn 83 82 84 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":62:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 9 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":62:50 discrim 1 -1
     (nil))
(jump_insn 85 84 86 9 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":62:50 -1
     (nil)
 -> 171)
(barrier 86 85 87)
(code_label 87 86 88 10 17 (nil) [1 uses])
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":63:42 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 95 [ _14 ])
        (sign_extend:DI (reg:SI 144))) "srcs/floor_ceil_part.c":63:42 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:DI 96 [ _15 ])
                (ashift:DI (reg:DI 95 [ _14 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":63:42 -1
     (nil))
(insn 92 91 93 10 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":63:42 -1
     (nil))
(insn 93 92 94 10 (parallel [
            (set (reg/f:DI 97 [ _16 ])
                (plus:DI (reg:DI 96 [ _15 ])
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":63:42 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 96 [ _15 ]))
        (nil)))
(insn 94 93 95 10 (set (reg/f:DI 98 [ _17 ])
        (mem/f:DI (reg/f:DI 97 [ _16 ]) [2 *_16+0 S8 A64])) "srcs/floor_ceil_part.c":63:27 -1
     (nil))
(insn 95 94 96 10 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":63:7 -1
     (nil))
(insn 96 95 97 10 (set (reg/f:DI 99 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 146)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":63:7 -1
     (nil))
(insn 97 96 98 10 (set (reg/f:DI 100 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ _18 ])
                (const_int 72 [0x48])) [12 _18->floor+0 S8 A64])) "srcs/floor_ceil_part.c":63:12 -1
     (nil))
(insn 98 97 99 10 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":63:19 -1
     (nil))
(insn 99 98 100 10 (set (reg:DI 101 [ _20 ])
        (sign_extend:DI (reg:SI 147))) "srcs/floor_ceil_part.c":63:19 -1
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 102 [ _21 ])
                (ashift:DI (reg:DI 101 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":63:19 -1
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg/f:DI 103 [ _22 ])
                (plus:DI (reg/f:DI 100 [ _19 ])
                    (reg:DI 102 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":63:19 -1
     (nil))
(insn 102 101 103 10 (set (reg:DI 5 di)
        (reg/f:DI 98 [ _17 ])) "srcs/floor_ceil_part.c":63:27 -1
     (nil))
(call_insn 103 102 104 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_atoi") [flags 0x41]  <function_decl 0x7f98a52abf00 ft_atoi>) [0 ft_atoi S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":63:27 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 104 103 105 10 (set (reg:SI 104 [ _23 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":63:27 -1
     (nil))
(insn 105 104 106 10 (set (mem:SI (reg/f:DI 103 [ _22 ]) [4 *_22+0 S4 A32])
        (reg:SI 104 [ _23 ])) "srcs/floor_ceil_part.c":63:25 discrim 1 -1
     (nil))
(insn 106 105 107 10 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":64:15 -1
     (nil))
(insn 107 106 108 10 (set (reg:DI 105 [ _24 ])
        (sign_extend:DI (reg:SI 148))) "srcs/floor_ceil_part.c":64:15 -1
     (nil))
(insn 108 107 109 10 (parallel [
            (set (reg:DI 106 [ _25 ])
                (ashift:DI (reg:DI 105 [ _24 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":64:15 -1
     (nil))
(insn 109 108 110 10 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":64:15 -1
     (nil))
(insn 110 109 111 10 (parallel [
            (set (reg/f:DI 107 [ _26 ])
                (plus:DI (reg:DI 106 [ _25 ])
                    (reg/f:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":64:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 106 [ _25 ]))
        (nil)))
(insn 111 110 112 10 (set (reg/f:DI 108 [ _27 ])
        (mem/f:DI (reg/f:DI 107 [ _26 ]) [2 *_26+0 S8 A64])) "srcs/floor_ceil_part.c":64:3 -1
     (nil))
(insn 112 111 113 10 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _27 ])) "srcs/floor_ceil_part.c":64:3 -1
     (nil))
(call_insn 113 112 114 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":64:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 114 113 115 10 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":65:11 -1
     (nil))
(insn 115 114 116 10 (set (reg/f:DI 109 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 150)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":65:11 -1
     (nil))
(insn 116 115 117 10 (set (reg/f:DI 110 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 109 [ _28 ])
                (const_int 72 [0x48])) [12 _28->floor+0 S8 A64])) "srcs/floor_ceil_part.c":65:16 -1
     (nil))
(insn 117 116 118 10 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":65:23 -1
     (nil))
(insn 118 117 119 10 (set (reg:DI 111 [ _30 ])
        (sign_extend:DI (reg:SI 151))) "srcs/floor_ceil_part.c":65:23 -1
     (nil))
(insn 119 118 120 10 (parallel [
            (set (reg:DI 112 [ _31 ])
                (ashift:DI (reg:DI 111 [ _30 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":65:23 -1
     (nil))
(insn 120 119 121 10 (parallel [
            (set (reg/f:DI 113 [ _32 ])
                (plus:DI (reg/f:DI 110 [ _29 ])
                    (reg:DI 112 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":65:23 -1
     (nil))
(insn 121 120 124 10 (set (reg:SI 114 [ _33 ])
        (mem:SI (reg/f:DI 113 [ _32 ]) [4 *_32+0 S4 A32])) "srcs/floor_ceil_part.c":65:23 -1
     (nil))
(insn 124 121 125 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 114 [ _33 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":65:6 -1
     (nil))
(jump_insn 125 124 126 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "srcs/floor_ceil_part.c":65:6 -1
     (nil)
 -> 139)
(note 126 125 127 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 11 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":65:40 discrim 1 -1
     (nil))
(insn 128 127 129 11 (set (reg/f:DI 115 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":65:40 discrim 1 -1
     (nil))
(insn 129 128 130 11 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _34 ])
                (const_int 72 [0x48])) [12 _34->floor+0 S8 A64])) "srcs/floor_ceil_part.c":65:45 discrim 1 -1
     (nil))
(insn 130 129 131 11 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":65:52 discrim 1 -1
     (nil))
(insn 131 130 132 11 (set (reg:DI 117 [ _36 ])
        (sign_extend:DI (reg:SI 153))) "srcs/floor_ceil_part.c":65:52 discrim 1 -1
     (nil))
(insn 132 131 133 11 (parallel [
            (set (reg:DI 118 [ _37 ])
                (ashift:DI (reg:DI 117 [ _36 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":65:52 discrim 1 -1
     (nil))
(insn 133 132 134 11 (parallel [
            (set (reg/f:DI 119 [ _38 ])
                (plus:DI (reg/f:DI 116 [ _35 ])
                    (reg:DI 118 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":65:52 discrim 1 -1
     (nil))
(insn 134 133 137 11 (set (reg:SI 120 [ _39 ])
        (mem:SI (reg/f:DI 119 [ _38 ]) [4 *_38+0 S4 A32])) "srcs/floor_ceil_part.c":65:52 discrim 1 -1
     (nil))
(insn 137 134 138 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 120 [ _39 ])
            (const_int 255 [0xff]))) "srcs/floor_ceil_part.c":65:33 discrim 1 -1
     (nil))
(jump_insn 138 137 139 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "srcs/floor_ceil_part.c":65:33 discrim 1 -1
     (nil)
 -> 150)
(code_label 139 138 140 12 18 (nil) [1 uses])
(note 140 139 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 12 (set (reg:DI 154)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f98a53811b0 *.LC6>)) "srcs/floor_ceil_part.c":66:12 -1
     (nil))
(insn 142 141 143 12 (set (reg:DI 5 di)
        (reg:DI 154)) "srcs/floor_ceil_part.c":66:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f98a53811b0 *.LC6>)
        (nil)))
(call_insn 143 142 144 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":66:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 144 143 145 12 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":66:46 discrim 1 -1
     (nil))
(insn 145 144 146 12 (set (reg:DI 5 di)
        (reg:DI 155)) "srcs/floor_ceil_part.c":66:46 discrim 1 -1
     (nil))
(call_insn 146 145 147 12 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":66:46 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 147 146 148 12 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":66:59 discrim 2 -1
     (nil))
(jump_insn 148 147 149 12 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":66:59 -1
     (nil)
 -> 171)
(barrier 149 148 150)
(code_label 150 149 151 13 16 (nil) [2 uses])
(note 151 150 152 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":59:9 -1
     (nil))
(insn 153 152 154 13 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":59:17 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 121 [ _40 ])
        (sign_extend:DI (reg:SI 156))) "srcs/floor_ceil_part.c":59:17 -1
     (nil))
(insn 155 154 156 13 (parallel [
            (set (reg:DI 122 [ _41 ])
                (ashift:DI (reg:DI 121 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":59:16 -1
     (nil))
(insn 156 155 157 13 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":59:16 -1
     (nil))
(insn 157 156 158 13 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg:DI 122 [ _41 ])
                    (reg/f:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":59:16 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 122 [ _41 ]))
        (nil)))
(insn 158 157 160 13 (set (reg/f:DI 124 [ _43 ])
        (mem/f:DI (reg/f:DI 123 [ _42 ]) [2 *_42+0 S8 A64])) "srcs/floor_ceil_part.c":59:16 -1
     (nil))
(insn 160 158 161 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 124 [ _43 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":59:9 -1
     (nil))
(jump_insn 161 160 162 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "srcs/floor_ceil_part.c":59:9 -1
     (nil)
 -> 159)
(note 162 161 163 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 14 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])) "srcs/floor_ceil_part.c":68:2 -1
     (nil))
(insn 164 163 165 14 (set (reg/f:DI 125 [ _44 ])
        (mem/f:DI (reg/f:DI 158) [2 *color_51(D)+0 S8 A64])) "srcs/floor_ceil_part.c":68:2 -1
     (nil))
(insn 165 164 166 14 (set (reg:DI 5 di)
        (reg/f:DI 125 [ _44 ])) "srcs/floor_ceil_part.c":68:2 -1
     (nil))
(call_insn 166 165 167 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":68:2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 167 166 168 14 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":69:10 -1
     (nil))
(insn 168 167 169 14 (set (reg:DI 5 di)
        (reg:DI 159)) "srcs/floor_ceil_part.c":69:10 -1
     (nil))
(call_insn 169 168 170 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":69:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 14 (set (reg:SI 126 [ _46 ])
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":69:23 discrim 1 -1
     (nil))
(code_label 171 170 172 15 14 (nil) [4 uses])
(note 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 177 15 (set (reg:SI 127 [ <retval> ])
        (reg:SI 126 [ _46 ])) "srcs/floor_ceil_part.c":70:1 -1
     (nil))
(insn 177 173 178 15 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) "srcs/floor_ceil_part.c":70:1 -1
     (nil))
(insn 178 177 0 15 (use (reg/i:SI 0 ax)) "srcs/floor_ceil_part.c":70:1 -1
     (nil))

;; Function check_ceil (check_ceil, funcdef_no=9, decl_uid=8759, cgraph_uid=10, symbol_order=9)

Partition 0: size 8 align 8
	color

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 28 from 11 to 12.
Redirecting jump 59 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 69.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 game+0 S8 A64])
        (reg:DI 5 di [ game ])) "srcs/floor_ceil_part.c":73:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
        (reg:DI 4 si [ line ])) "srcs/floor_ceil_part.c":73:1 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.8974+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":73:1 -1
     (nil))
(insn 8 5 9 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":76:33 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 94)) "srcs/floor_ceil_part.c":76:33 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strlen") [flags 0x41]  <function_decl 0x7f98a52b3500 ft_strlen>) [0 ft_strlen S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":76:33 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":76:33 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 83 [ _2 ])
        (subreg:SI (reg:DI 82 [ _1 ]) 0)) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (reg:SI 83 [ _2 ])) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 95)) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strdup_len") [flags 0x41]  <function_decl 0x7f98a52b7900 ft_strdup_len>) [0 ft_strdup_len S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 84 [ _3 ])
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":76:10 discrim 1 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 color+0 S8 A64])
        (reg/f:DI 84 [ _3 ])) "srcs/floor_ceil_part.c":76:8 discrim 2 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 85 [ color.1_4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 color+0 S8 A64])) "srcs/floor_ceil_part.c":77:6 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 85 [ color.1_4 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":77:5 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "srcs/floor_ceil_part.c":77:5 -1
     (nil)
 -> 30)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f98a5378750 *.LC1>)) "srcs/floor_ceil_part.c":78:11 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 96)) "srcs/floor_ceil_part.c":78:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f98a5378750 *.LC1>)
        (nil)))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":78:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 4 (set (reg:SI 92 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":78:43 discrim 1 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref:DI 66)) "srcs/floor_ceil_part.c":78:43 997 {jump}
     (nil)
 -> 66)
(barrier 29 28 30)
(code_label 30 29 31 5 21 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":79:10 -1
     (nil))
(insn 33 32 34 5 (set (reg:QI 86 [ _5 ])
        (mem:QI (reg/f:DI 97) [0 *line_15(D)+0 S1 A8])) "srcs/floor_ceil_part.c":79:10 -1
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _5 ])
            (const_int 67 [0x43]))) "srcs/floor_ceil_part.c":79:5 -1
     (nil))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":79:5 -1
     (nil)
 -> 61)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":79:28 discrim 1 -1
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":79:28 discrim 1 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 39 38 40 6 (set (reg:QI 88 [ _7 ])
        (mem:QI (reg/f:DI 87 [ _6 ]) [0 *_6+0 S1 A8])) "srcs/floor_ceil_part.c":79:28 discrim 1 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _7 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":79:21 discrim 1 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":79:21 discrim 1 -1
     (nil)
 -> 61)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])) "srcs/floor_ceil_part.c":79:39 discrim 2 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:DI 89 [ _8 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":79:39 discrim 2 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [2 line+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 45 44 46 7 (set (reg:QI 90 [ _9 ])
        (mem:QI (reg/f:DI 89 [ _8 ]) [0 *_8+0 S1 A8])) "srcs/floor_ceil_part.c":79:39 discrim 2 -1
     (nil))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _9 ])
            (const_int 32 [0x20]))) "srcs/floor_ceil_part.c":79:32 discrim 2 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":79:32 discrim 2 -1
     (nil)
 -> 61)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":81:7 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":81:7 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 4 si)
        (reg:DI 100)) "srcs/floor_ceil_part.c":81:7 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg:DI 101)) "srcs/floor_ceil_part.c":81:7 -1
     (nil))
(call_insn 53 52 54 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_ceil_content") [flags 0x3]  <function_decl 0x7f98a5337900 check_ceil_content>) [0 check_ceil_content S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":81:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 53 55 8 (set (reg:SI 91 [ _10 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":81:7 -1
     (nil))
(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _10 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":81:6 discrim 1 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "srcs/floor_ceil_part.c":81:6 discrim 1 -1
     (nil)
 -> 61)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg:SI 92 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":82:11 -1
     (nil))
(jump_insn 59 58 60 9 (set (pc)
        (label_ref:DI 66)) "srcs/floor_ceil_part.c":82:11 997 {jump}
     (nil)
 -> 66)
(barrier 60 59 61)
(code_label 61 60 62 10 23 (nil) [4 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 66 10 (set (reg:SI 92 [ _11 ])
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":84:9 -1
     (nil))
(code_label 66 63 67 12 24 (nil) [2 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 12 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _11 ])) "srcs/floor_ceil_part.c":85:1 -1
     (nil))
(insn 72 68 73 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.8974+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "srcs/floor_ceil_part.c":85:1 -1
     (nil))
(jump_insn 73 72 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "srcs/floor_ceil_part.c":85:1 -1
     (nil)
 -> 76)
(note 80 73 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 80 75 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f98a536fc00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":85:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 75 74 76)
(code_label 76 75 81 15 25 (nil) [1 uses])
(note 81 76 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 81 78 15 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) "srcs/floor_ceil_part.c":85:1 -1
     (nil))
(insn 78 77 0 15 (use (reg/i:SI 0 ax)) "srcs/floor_ceil_part.c":85:1 -1
     (nil))

;; Function check_ceil_content (check_ceil_content, funcdef_no=10, decl_uid=8762, cgraph_uid=11, symbol_order=10)

Partition 2: size 8 align 8
	tab_tmp_55
Partition 1: size 8 align 8
	str_tmp_53
Partition 0: size 4 align 4
	rgb_45

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 174.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])
        (reg:DI 5 di [ game ])) "srcs/floor_ceil_part.c":88:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])
        (reg:DI 4 si [ color ])) "srcs/floor_ceil_part.c":88:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":93:6 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 128) [2 *color_51(D)+0 S8 A64])) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 129)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f98a5378f30 *.LC2>)) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 129)) "srcs/floor_ceil_part.c":94:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f98a5378f30 *.LC2>)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_strtrim") [flags 0x41]  <function_decl 0x7f98a52b9200 ft_strtrim>) [0 ft_strtrim S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":94:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 130)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])
        (reg:DI 130)) "srcs/floor_ceil_part.c":94:12 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":95:12 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (const_int 44 [0x2c])) "srcs/floor_ceil_part.c":95:12 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 131)) "srcs/floor_ceil_part.c":95:12 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_split") [flags 0x41]  <function_decl 0x7f98a52b3b00 ft_split>) [0 ft_split S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":95:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 132)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":95:12 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
        (reg:DI 132)) "srcs/floor_ceil_part.c":95:12 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":96:10 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":96:10 -1
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 83 [ _2 ])
                (const_int 80 [0x50])) [12 _2->ceil+0 S8 A64])) "srcs/floor_ceil_part.c":96:15 -1
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ _3 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":96:5 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "srcs/floor_ceil_part.c":96:5 -1
     (nil)
 -> 39)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":98:7 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 134)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":98:7 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 85 [ _4 ])
                (const_int 48 [0x30])) [2 _4->wall_ea+0 S8 A64])) "srcs/floor_ceil_part.c":97:11 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (reg/f:DI 86 [ _5 ])) "srcs/floor_ceil_part.c":97:11 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 135)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f98a5392480 *.LC7>)) "srcs/floor_ceil_part.c":97:11 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 135)) "srcs/floor_ceil_part.c":97:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f98a5392480 *.LC7>)
        (nil)))
(insn 34 33 35 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "srcs/floor_ceil_part.c":97:11 -1
     (nil))
(call_insn 35 34 36 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f98a57b6a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":97:11 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 36 35 37 4 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":98:22 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":98:22 -1
     (nil)
 -> 171)
(barrier 38 37 39)
(code_label 39 38 40 5 27 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 str_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":99:2 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 5 di)
        (reg:DI 136)) "srcs/floor_ceil_part.c":99:2 -1
     (nil))
(call_insn 43 42 44 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":99:2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 5 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":100:6 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 137)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":100:6 -1
     (nil))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (const_int 12 [0xc])) "srcs/floor_ceil_part.c":100:20 -1
     (nil))
(call_insn 47 46 48 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f98a57d7200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":100:20 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 5 (set (reg/f:DI 138)
        (reg:DI 0 ax)) "srcs/floor_ceil_part.c":100:20 -1
     (expr_list:REG_NOALIAS (reg/f:DI 138)
        (nil)))
(insn 49 48 50 5 (set (reg/f:DI 88 [ _7 ])
        (reg/f:DI 138)) "srcs/floor_ceil_part.c":100:20 -1
     (nil))
(insn 50 49 51 5 (set (mem/f:DI (plus:DI (reg/f:DI 87 [ _6 ])
                (const_int 80 [0x50])) [12 _6->ceil+0 S8 A64])
        (reg/f:DI 88 [ _7 ])) "srcs/floor_ceil_part.c":100:18 discrim 1 -1
     (nil))
(insn 51 50 52 5 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":101:6 -1
     (nil))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg:DI 139)) "srcs/floor_ceil_part.c":101:6 -1
     (nil))
(call_insn 53 52 54 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tab_len") [flags 0x41]  <function_decl 0x7f98a533ad00 tab_len>) [0 tab_len S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":101:6 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 5 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":101:6 -1
     (nil))
(insn 55 54 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 3 [0x3]))) "srcs/floor_ceil_part.c":101:5 discrim 1 -1
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "srcs/floor_ceil_part.c":101:5 discrim 1 -1
     (nil)
 -> 64)
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:DI 140)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f98a5381090 *.LC4>)) "srcs/floor_ceil_part.c":102:11 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg:DI 140)) "srcs/floor_ceil_part.c":102:11 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f98a5381090 *.LC4>)
        (nil)))
(call_insn 60 59 61 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":102:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 6 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":102:42 discrim 1 -1
     (nil))
(jump_insn 62 61 63 6 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":102:42 -1
     (nil)
 -> 171)
(barrier 63 62 64)
(code_label 64 63 65 7 29 (nil) [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 66 65 67 7 (set (pc)
        (label_ref 150)) "srcs/floor_ceil_part.c":103:8 -1
     (nil)
 -> 150)
(barrier 67 66 159)
(code_label 159 67 68 8 33 (nil) [1 uses])
(note 68 159 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":105:24 -1
     (nil))
(insn 70 69 71 8 (set (reg:DI 90 [ _9 ])
        (sign_extend:DI (reg:SI 141))) "srcs/floor_ceil_part.c":105:24 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 91 [ _10 ])
                (ashift:DI (reg:DI 90 [ _9 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":105:24 -1
     (nil))
(insn 72 71 73 8 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":105:24 -1
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg/f:DI 92 [ _11 ])
                (plus:DI (reg:DI 91 [ _10 ])
                    (reg/f:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":105:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 91 [ _10 ]))
        (nil)))
(insn 74 73 75 8 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (reg/f:DI 92 [ _11 ]) [2 *_11+0 S8 A64])) "srcs/floor_ceil_part.c":105:7 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _12 ])) "srcs/floor_ceil_part.c":105:7 -1
     (nil))
(call_insn 76 75 77 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_nbr") [flags 0x41]  <function_decl 0x7f98a533aa00 check_nbr>) [0 check_nbr S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":105:7 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 8 (set (reg:SI 94 [ _13 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":105:7 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ _13 ])
            (const_int -1 [0xffffffffffffffff]))) "srcs/floor_ceil_part.c":105:6 discrim 1 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "srcs/floor_ceil_part.c":105:6 discrim 1 -1
     (nil)
 -> 87)
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg:DI 143)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f98a5392510 *.LC8>)) "srcs/floor_ceil_part.c":106:12 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 5 di)
        (reg:DI 143)) "srcs/floor_ceil_part.c":106:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f98a5392510 *.LC8>)
        (nil)))
(call_insn 83 82 84 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":106:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 83 85 9 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":106:49 discrim 1 -1
     (nil))
(jump_insn 85 84 86 9 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":106:49 -1
     (nil)
 -> 171)
(barrier 86 85 87)
(code_label 87 86 88 10 31 (nil) [1 uses])
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":107:41 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 95 [ _14 ])
        (sign_extend:DI (reg:SI 144))) "srcs/floor_ceil_part.c":107:41 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:DI 96 [ _15 ])
                (ashift:DI (reg:DI 95 [ _14 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":107:41 -1
     (nil))
(insn 92 91 93 10 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":107:41 -1
     (nil))
(insn 93 92 94 10 (parallel [
            (set (reg/f:DI 97 [ _16 ])
                (plus:DI (reg:DI 96 [ _15 ])
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":107:41 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 96 [ _15 ]))
        (nil)))
(insn 94 93 95 10 (set (reg/f:DI 98 [ _17 ])
        (mem/f:DI (reg/f:DI 97 [ _16 ]) [2 *_16+0 S8 A64])) "srcs/floor_ceil_part.c":107:26 -1
     (nil))
(insn 95 94 96 10 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":107:7 -1
     (nil))
(insn 96 95 97 10 (set (reg/f:DI 99 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 146)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":107:7 -1
     (nil))
(insn 97 96 98 10 (set (reg/f:DI 100 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ _18 ])
                (const_int 80 [0x50])) [12 _18->ceil+0 S8 A64])) "srcs/floor_ceil_part.c":107:12 -1
     (nil))
(insn 98 97 99 10 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":107:18 -1
     (nil))
(insn 99 98 100 10 (set (reg:DI 101 [ _20 ])
        (sign_extend:DI (reg:SI 147))) "srcs/floor_ceil_part.c":107:18 -1
     (nil))
(insn 100 99 101 10 (parallel [
            (set (reg:DI 102 [ _21 ])
                (ashift:DI (reg:DI 101 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":107:18 -1
     (nil))
(insn 101 100 102 10 (parallel [
            (set (reg/f:DI 103 [ _22 ])
                (plus:DI (reg/f:DI 100 [ _19 ])
                    (reg:DI 102 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":107:18 -1
     (nil))
(insn 102 101 103 10 (set (reg:DI 5 di)
        (reg/f:DI 98 [ _17 ])) "srcs/floor_ceil_part.c":107:26 -1
     (nil))
(call_insn 103 102 104 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ft_atoi") [flags 0x41]  <function_decl 0x7f98a52abf00 ft_atoi>) [0 ft_atoi S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":107:26 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 104 103 105 10 (set (reg:SI 104 [ _23 ])
        (reg:SI 0 ax)) "srcs/floor_ceil_part.c":107:26 -1
     (nil))
(insn 105 104 106 10 (set (mem:SI (reg/f:DI 103 [ _22 ]) [4 *_22+0 S4 A32])
        (reg:SI 104 [ _23 ])) "srcs/floor_ceil_part.c":107:24 discrim 1 -1
     (nil))
(insn 106 105 107 10 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":108:15 -1
     (nil))
(insn 107 106 108 10 (set (reg:DI 105 [ _24 ])
        (sign_extend:DI (reg:SI 148))) "srcs/floor_ceil_part.c":108:15 -1
     (nil))
(insn 108 107 109 10 (parallel [
            (set (reg:DI 106 [ _25 ])
                (ashift:DI (reg:DI 105 [ _24 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":108:15 -1
     (nil))
(insn 109 108 110 10 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":108:15 -1
     (nil))
(insn 110 109 111 10 (parallel [
            (set (reg/f:DI 107 [ _26 ])
                (plus:DI (reg:DI 106 [ _25 ])
                    (reg/f:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":108:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 106 [ _25 ]))
        (nil)))
(insn 111 110 112 10 (set (reg/f:DI 108 [ _27 ])
        (mem/f:DI (reg/f:DI 107 [ _26 ]) [2 *_26+0 S8 A64])) "srcs/floor_ceil_part.c":108:3 -1
     (nil))
(insn 112 111 113 10 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _27 ])) "srcs/floor_ceil_part.c":108:3 -1
     (nil))
(call_insn 113 112 114 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":108:3 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 114 113 115 10 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":109:11 -1
     (nil))
(insn 115 114 116 10 (set (reg/f:DI 109 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 150)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":109:11 -1
     (nil))
(insn 116 115 117 10 (set (reg/f:DI 110 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 109 [ _28 ])
                (const_int 80 [0x50])) [12 _28->ceil+0 S8 A64])) "srcs/floor_ceil_part.c":109:16 -1
     (nil))
(insn 117 116 118 10 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":109:22 -1
     (nil))
(insn 118 117 119 10 (set (reg:DI 111 [ _30 ])
        (sign_extend:DI (reg:SI 151))) "srcs/floor_ceil_part.c":109:22 -1
     (nil))
(insn 119 118 120 10 (parallel [
            (set (reg:DI 112 [ _31 ])
                (ashift:DI (reg:DI 111 [ _30 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":109:22 -1
     (nil))
(insn 120 119 121 10 (parallel [
            (set (reg/f:DI 113 [ _32 ])
                (plus:DI (reg/f:DI 110 [ _29 ])
                    (reg:DI 112 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":109:22 -1
     (nil))
(insn 121 120 124 10 (set (reg:SI 114 [ _33 ])
        (mem:SI (reg/f:DI 113 [ _32 ]) [4 *_32+0 S4 A32])) "srcs/floor_ceil_part.c":109:22 -1
     (nil))
(insn 124 121 125 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 114 [ _33 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":109:6 -1
     (nil))
(jump_insn 125 124 126 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "srcs/floor_ceil_part.c":109:6 -1
     (nil)
 -> 139)
(note 126 125 127 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 11 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [1 game+0 S8 A64])) "srcs/floor_ceil_part.c":109:39 discrim 1 -1
     (nil))
(insn 128 127 129 11 (set (reg/f:DI 115 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 24 [0x18])) [6 game_56(D)->map+0 S8 A64])) "srcs/floor_ceil_part.c":109:39 discrim 1 -1
     (nil))
(insn 129 128 130 11 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _34 ])
                (const_int 80 [0x50])) [12 _34->ceil+0 S8 A64])) "srcs/floor_ceil_part.c":109:44 discrim 1 -1
     (nil))
(insn 130 129 131 11 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":109:50 discrim 1 -1
     (nil))
(insn 131 130 132 11 (set (reg:DI 117 [ _36 ])
        (sign_extend:DI (reg:SI 153))) "srcs/floor_ceil_part.c":109:50 discrim 1 -1
     (nil))
(insn 132 131 133 11 (parallel [
            (set (reg:DI 118 [ _37 ])
                (ashift:DI (reg:DI 117 [ _36 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":109:50 discrim 1 -1
     (nil))
(insn 133 132 134 11 (parallel [
            (set (reg/f:DI 119 [ _38 ])
                (plus:DI (reg/f:DI 116 [ _35 ])
                    (reg:DI 118 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":109:50 discrim 1 -1
     (nil))
(insn 134 133 137 11 (set (reg:SI 120 [ _39 ])
        (mem:SI (reg/f:DI 119 [ _38 ]) [4 *_38+0 S4 A32])) "srcs/floor_ceil_part.c":109:50 discrim 1 -1
     (nil))
(insn 137 134 138 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 120 [ _39 ])
            (const_int 255 [0xff]))) "srcs/floor_ceil_part.c":109:32 discrim 1 -1
     (nil))
(jump_insn 138 137 139 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "srcs/floor_ceil_part.c":109:32 discrim 1 -1
     (nil)
 -> 150)
(code_label 139 138 140 12 32 (nil) [1 uses])
(note 140 139 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 12 (set (reg:DI 154)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f98a53811b0 *.LC6>)) "srcs/floor_ceil_part.c":110:12 -1
     (nil))
(insn 142 141 143 12 (set (reg:DI 5 di)
        (reg:DI 154)) "srcs/floor_ceil_part.c":110:12 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f98a53811b0 *.LC6>)
        (nil)))
(call_insn 143 142 144 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f98a57b8100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":110:12 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 144 143 145 12 (set (reg:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":110:46 discrim 1 -1
     (nil))
(insn 145 144 146 12 (set (reg:DI 5 di)
        (reg:DI 155)) "srcs/floor_ceil_part.c":110:46 discrim 1 -1
     (nil))
(call_insn 146 145 147 12 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":110:46 discrim 1 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 147 146 148 12 (set (reg:SI 126 [ _46 ])
        (const_int -1 [0xffffffffffffffff])) "srcs/floor_ceil_part.c":110:59 discrim 2 -1
     (nil))
(jump_insn 148 147 149 12 (set (pc)
        (label_ref 171)) "srcs/floor_ceil_part.c":110:59 -1
     (nil)
 -> 171)
(barrier 149 148 150)
(code_label 150 149 151 13 30 (nil) [2 uses])
(note 151 150 152 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":103:9 -1
     (nil))
(insn 153 152 154 13 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 rgb+0 S4 A32])) "srcs/floor_ceil_part.c":103:17 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 121 [ _40 ])
        (sign_extend:DI (reg:SI 156))) "srcs/floor_ceil_part.c":103:17 -1
     (nil))
(insn 155 154 156 13 (parallel [
            (set (reg:DI 122 [ _41 ])
                (ashift:DI (reg:DI 121 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":103:16 -1
     (nil))
(insn 156 155 157 13 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":103:16 -1
     (nil))
(insn 157 156 158 13 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg:DI 122 [ _41 ])
                    (reg/f:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) "srcs/floor_ceil_part.c":103:16 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])
            (reg:DI 122 [ _41 ]))
        (nil)))
(insn 158 157 160 13 (set (reg/f:DI 124 [ _43 ])
        (mem/f:DI (reg/f:DI 123 [ _42 ]) [2 *_42+0 S8 A64])) "srcs/floor_ceil_part.c":103:16 -1
     (nil))
(insn 160 158 161 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 124 [ _43 ])
            (const_int 0 [0]))) "srcs/floor_ceil_part.c":103:9 -1
     (nil))
(jump_insn 161 160 162 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "srcs/floor_ceil_part.c":103:9 -1
     (nil)
 -> 159)
(note 162 161 163 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 14 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 color+0 S8 A64])) "srcs/floor_ceil_part.c":112:2 -1
     (nil))
(insn 164 163 165 14 (set (reg/f:DI 125 [ _44 ])
        (mem/f:DI (reg/f:DI 158) [2 *color_51(D)+0 S8 A64])) "srcs/floor_ceil_part.c":112:2 -1
     (nil))
(insn 165 164 166 14 (set (reg:DI 5 di)
        (reg/f:DI 125 [ _44 ])) "srcs/floor_ceil_part.c":112:2 -1
     (nil))
(call_insn 166 165 167 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":112:2 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 167 166 168 14 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [11 tab_tmp+0 S8 A64])) "srcs/floor_ceil_part.c":113:10 -1
     (nil))
(insn 168 167 169 14 (set (reg:DI 5 di)
        (reg:DI 159)) "srcs/floor_ceil_part.c":113:10 -1
     (nil))
(call_insn 169 168 170 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98a57ce600 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "srcs/floor_ceil_part.c":113:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 14 (set (reg:SI 126 [ _46 ])
        (const_int 1 [0x1])) "srcs/floor_ceil_part.c":113:23 discrim 1 -1
     (nil))
(code_label 171 170 172 15 28 (nil) [4 uses])
(note 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 177 15 (set (reg:SI 127 [ <retval> ])
        (reg:SI 126 [ _46 ])) "srcs/floor_ceil_part.c":114:1 -1
     (nil))
(insn 177 173 178 15 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) "srcs/floor_ceil_part.c":114:1 -1
     (nil))
(insn 178 177 0 15 (use (reg/i:SI 0 ax)) "srcs/floor_ceil_part.c":114:1 -1
     (nil))
